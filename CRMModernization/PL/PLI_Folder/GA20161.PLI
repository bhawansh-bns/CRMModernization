 GA20161:PROC OPTIONS(MAIN)(IEU001,JWB001) OPTIONS(FETCHABLE) REORDER;        
 /********************************************************************/        
 /* GA20161                                                          */        
 /*                                                                  */        
 /*                                                                  */        
 /*         DEVIS AUTO INTERNET ETHIAS / MY ETHIAS / AFFINITY        */        
 /*                                                                  */        
 /*               SCENARIO 1 : PASSAGE POUR TOUS LES CDOPTRN         */        
 /*               ==========================================         */        
 /* A2DVI => Site Ethias : Faire un devis auto                       */        
 /* A2DVE => Site My E.  : Faire un devis auto                       */        
 /*                                                                  */        
 /* A2SOU => Site Ethias : retour e-mail avec nouveau affili{        */        
 /*                        quand clic sur souscription               */        
 /* A2CDV => Site My E.  : Consulter un devis                        */        
 /*                                                                  */        
 /* A2RDV => Site Ethias : Relance Auto : afficher devis (on vient de*/        
 /*                        wa2014)                                   */        
 /*                                                                  */        
 /* A2MSE => Mon Site Ethias : qd depart ID Light et pas encore      */        
 /*                            affilie (on revient avec un mail)     */        
 /*                            avant d'afficher le resultat du devis */        
 /*                                                                  */        
 /* A2M20 => Site MOINS20: Pages avec CDEXTOP="M20" !!!!             */        
 /* A2EDV => Site Ethias : Clic sur 'votre devis' apres e-mail autre */        
 /*                        que relance (voir WA2014)                 */        
 /*                                                                  */        
 /********************************************************************/        
 /* EURO=YES AUTHOR=TDMKIP/KIPS C.       INTERV= KIPS C.      .......*/        
 /*                                                                  */        
 /********************************************************************/        
 /*  -------------------------------                                 */        
 /*  -  M O D I F I C A T I O N S  -                                 */        
 /*------------------------------------------------------------------*/        
 /* TDMKIP ! 27/08/03 ! CREATION DU PROGRAMME                        */        
 /* TDMDIN ! 02/12/05 ! Appeler la proc{dure INTERV_COM qd on affiche*/        
 /*        !          ! le devis en MY ETHIAS => sinon CDBLOCK = ''  */        
 /* TDMKIP ! 29/11/06 ! Relance Auto : ajout CDOPTRN=A2RDV           */        
 /* TDMKIP ! 08/01/08 ! Promo omnium 2008 + Site 'moins20%'          */        
 /* TDMSOX ! 11/04/08 ! Mobilite plus                                */        
 /* TDMKIP ! 29/10/08 ! Attrib USERID et PASWORD pour my Ethias      */        
 /* TDMDXH ! 05/11/08 ! ADAPTATION TABLE 500                     #001*/        
 /* TDMKIP ! 16/02/09 ! Bloquer A2DVE avec code postal non numerique */        
 /* TDMKIP ! 10/03/09 ! Nouveaux tarifs : ajout CDIDTRF='1'          */        
 /* TDMKIP ! 21/10/09 ! VEHVERT e Y si <=115 gr CO2emis              */        
 /* TDMKIP ! 11/12/09 ! Mon site Ethias                              */        
 /* TDMKIP ! 08/03/10 ! Ajout CDOPTRN = A2EDV si devis par e-mail    */        
 /* TDMSOX ! 03/06/10 ! Nouveaux tarifs auto WE096               #002*/        
 /********************************************************************/        
         
         
 DCL ABS       BUILTIN;        
 DCL ADDR      BUILTIN;        
 DCL CEIL      BUILTIN;        
 DCL DATE      BUILTIN;        
 DCL DATETIME  BUILTIN;        
 DCL DIM       BUILTIN;        
 DCL FLOOR     BUILTIN;        
 DCL INDEX     BUILTIN;        
 DCL LENGTH    BUILTIN;        
 DCL LOW       BUILTIN;        
 DCL MAX       BUILTIN;        
 DCL MIN       BUILTIN;        
 DCL MOD       BUILTIN;        
 DCL NULL      BUILTIN;        
 DCL ONCODE    BUILTIN;        
 DCL ONLOC     BUILTIN;        
 DCL REPEAT    BUILTIN;        
 DCL STG       BUILTIN;        
 DCL SUBSTR    BUILTIN;        
 DCL TIME      BUILTIN;        
 DCL TRANSLATE BUILTIN;        
 DCL UNSPEC    BUILTIN;        
 DCL VERIFY    BUILTIN;        
 /* TDMOHL 03/05/2005 AJOUT DE ONSOURCE, PLIRETC ET PLIRETV */        
 DCL ONSOURCE  BUILTIN;        
 DCL PLIRETC   BUILTIN;        
 DCL PLIRETV   BUILTIN;        
         
 /* TDMSLE : 041103 */        
 DCL CENTER    BUILTIN;        
 DCL LEFT      BUILTIN;        
 DCL RIGHT     BUILTIN;        
 DCL TRIM      BUILTIN;        
 DCL UPPERCASE BUILTIN;        
 DCL PTRADD    BUILTIN;        
 /* TDMSLE FIN : 041103 */        
         
 /* TDMSLE : 041103 -                                         */        
 /*  MISE EN COMMENTAIRE CAR IL FAUT UTILISER 'TRIM' DE VAPLI */        
 /* DCL TRIM      EXT ENTRY RETURNS(CHAR(133) VAR BYVALUE);   */        
 /* DCL LTRIM     EXT ENTRY RETURNS(CHAR(133) VAR BYVALUE);   */        
 /* DCL RTRIM     EXT ENTRY RETURNS(CHAR(133) VAR BYVALUE);   */        
 /* TDMSLE FIN : 041103                                       */        
         
 /*--------------------------------------------------------- ATTRINIT */        
  /* Enterprise PL1*/        
 DCL ATTR1 CHAR(2) VALUE('00C8'X); ##############################        
 DCL ATTR2 CHAR(2) VALUE('00C9'X); ############################        
 DCL ATTR3 CHAR(2) VALUE('00F1'X); ###########################        
 DCL ATTR4 CHAR(2) VALUE('00F9'X); ##############################        
 DCL ATTR5 CHAR(2) VALUE('00E1'X); #######################        
 DCL ATTR6 CHAR(2) VALUE('00F0'X); #############################        
 DCL ATTR7 CHAR(2) VALUE('00F8'X); ################################        
 DCL ATTR8 CHAR(2) VALUE('00D9'X); ################################        
         
 DCL NUMERR_E CHAR(2) VALUE('C0D9'X); ################################        
 DCL ALPERR_E CHAR(2) VALUE('C0C9'X); ################################        
 DCL NUMCSR_E CHAR(2) VALUE('C0D1'X); ################################        
 DCL ALPCSR_E CHAR(2) VALUE('C0C1'X); ################################        
 DCL NUMDEP_E CHAR(2) VALUE('00D1'X); ################################        
 DCL ALPDEP_E CHAR(2) VALUE('00C1'X); ################################        
 DCL NODCSR_E CHAR(2) VALUE('C0C5'X); ################################        
 DCL NODDEP_E CHAR(2) VALUE('00C5'X); ################################        
 DCL NODPRT_E CHAR(2) VALUE('00E5'X); ################################        
         
 DCL HEX00 CHAR(1)   VALUE('00'X);        
 DCL HEX02 CHAR(1)   VALUE('02'X);   ################################        
 DCL HEXFF CHAR(1)   VALUE('FF'X);        
 DCL HEX3F CHAR(1)   VALUE('3F'X);        
 DCL HEX15 CHAR(1)   VALUE('15'X);  ##################        
 DCL HEX4A CHAR(1)   VALUE('4A'X);  ###################        
 DCL HEX403F CHAR(2) VALUE('403F'X);        
 DCL HEX40 CHAR(1)   VALUE('40'X);        
 DCL HEX4B CHAR(1)   VALUE('4B'X);        
 DCL SCA1  CHAR(2)   VALUE('0080'X); #########################        
 DCL SCA2  CHAR(2)   VALUE('00C0'X); ##################################        
 DCL SCA3  CHAR(2)   VALUE('00A0'X); ############################################        
 DCL SCA4  CHAR(2)   VALUE('0090'X); ############################        
 /*----------------------------------------------------- END ATTRINIT */        
 /* -------------------------------------------------------- ATTRIMOD */        
 /* exemples:   ZONE_A   CHAR(6)                                      */        
 /*  reverse:   ZONE_A = '  '!!REV_E;                                 */        
 /*  neutral:   ZONE_A = '  '!!NEU_E;                                 */        
 /*  rev+neu:   ZONE_A = '  '!!REV_E!!NEU_E;                          */        
 /* sans effet: ZONE_A = SEF_E;                                       */        
 /* ----------- 1 Commentaire = 1 ligne ---------------- JCC 09-12-02 */        
         
         
 DCL    SEF_E   CHAR(6)  STATIC INIT('');  ##########################        
        SEF_E  = LOW(LENGTH(SEF_E));        
 DCL    BLI_E   CHAR(2)  STATIC ,     #############################        
        REV_E   CHAR(2)  STATIC ,     #############################        
        UND_E   CHAR(2)  STATIC ;     #############################        
 UNSPEC(BLI_E) = '1100000111110001'B;        
 UNSPEC(REV_E) = '1100000111110010'B;        
 UNSPEC(UND_E) = '1100000111110100'B;        
 DCL    BLU_E   CHAR(2)  STATIC ,     #############################        
        RED_E   CHAR(2)  STATIC ,     #############################        
        PIN_E   CHAR(2)  STATIC ,     #############################        
        GRN_E   CHAR(2)  STATIC ,     #############################        
        TRQ_E   CHAR(2)  STATIC ,     #############################        
        YEL_E   CHAR(2)  STATIC ,     #############################        
        NEU_E   CHAR(2)  STATIC ;     #############################        
 UNSPEC(BLU_E) = '1100001011110001'B;        
 UNSPEC(RED_E) = '1100001011110010'B;        
 UNSPEC(PIN_E) = '1100001011110011'B;        
 UNSPEC(GRN_E) = '1100001011110100'B;        
 UNSPEC(TRQ_E) = '1100001011110101'B;        
 UNSPEC(YEL_E) = '1100001011110110'B;        
 UNSPEC(NEU_E) = '1100001011110111'B;        
 /*----------------------------------------------------- END ATTRIMOD */        
         
 /*---------------------------------------------------------- $DATTIM */        
 /*      Date & Heure ordinateur sous toutes les formes     */        
 /*     ------------------------------------------------    */        
 /*     ->     call $Dates_Times pour rafraichir      <-    */        
 /* - - - - - - - - - - - - - - - - - - - - - - - - - - - - */        
 DCL $DATE_TIME          CHAR(17) INIT(''); #################################        
 DCL $DATE_MSK           CHAR(17);        
 DCL $DATE_HEURE         CHAR(18) INIT(''); #################################        
 DCL 1 $DATE_TIME_W BASED(ADDR($DATE_TIME)),        
      2 S    CHAR(1),        
      2 A    CHAR(1),        
      2 AA   CHAR(2),        
      2 MM   CHAR(2),        
      2 JJ   CHAR(2),        
      2 HH   CHAR(2),        
      2 MI   CHAR(2),        
      2 SS   CHAR(2),        
      2 CCC  CHAR(3);        
         
 DCL $DATE_AAAAMMJJ      CHAR(08);    ####################################        
 DCL #DATE_AAAAMMJJ      PIC'(08)9'        
      BASED(ADDR($DATE_AAAAMMJJ));        
 DCL $DATE_AAMMJJ        CHAR(06);    ####################################        
 DCL #DATE_AAMMJJ        PIC'(06)9'        
      BASED(ADDR($DATE_AAMMJJ));        
 DCL $DATE_SAAMMJJ       CHAR(07);    ####################################        
 DCL #DATE_SAAMMJJ       PIC'(07)9'        
      BASED(ADDR($DATE_SAAMMJJ));        
 DCL $DATE_JJMMAAAA      CHAR(08);    ####################################        
 DCL #DATE_JJMMAAAA      PIC'(08)9'        
      BASED(ADDR($DATE_JJMMAAAA));        
 DCL $DATE_JJMMAA        CHAR(06);    ####################################        
 DCL #DATE_JJMMAA        PIC'(06)9'        
      BASED(ADDR($DATE_JJMMAA));        
         
 DCL $DATE_AAAA          CHAR(04);    ####################################        
 DCL #DATE_AAAA          PIC'(04)9'        
      BASED(ADDR($DATE_AAAA));        
 DCL $DATE_AA            CHAR(02);    ####################################        
 DCL #DATE_AA            PIC'(02)9'        
      BASED(ADDR($DATE_AA));        
 DCL $DATE_S             CHAR(01);    ####################################        
 DCL #DATE_S             PIC'(01)9'        
      BASED(ADDR($DATE_S));        
 DCL $DATE_SAA           CHAR(03);    ####################################        
 DCL #DATE_SAA           PIC'(03)9'        
      BASED(ADDR($DATE_SAA));        
         
 DCL $DATE_MM            CHAR(02);    ####################################        
 DCL #DATE_MM            PIC'(02)9'        
      BASED(ADDR($DATE_MM));        
 DCL $DATE_JJ            CHAR(02);    ####################################        
 DCL #DATE_JJ            PIC'(02)9'        
      BASED(ADDR($DATE_JJ));        
         
 DCL $TIME_HHMMSSCCC     CHAR(09);    ####################################        
 DCL #TIME_HHMMSSCCC     PIC'(09)9'        
      BASED(ADDR($TIME_HHMMSSCCC));        
 DCL $TIME_HHMMSS        CHAR(06);    ####################################        
 DCL #TIME_HHMMSS        PIC'(06)9'        
      BASED(ADDR($TIME_HHMMSS));        
 DCL $TIME_HHMM          CHAR(04);    ####################################        
 DCL #TIME_HHMM          PIC'(04)9'        
      BASED(ADDR($TIME_HHMM));        
 DCL $TIME_HH            CHAR(02);    ####################################        
 DCL #TIME_HH            PIC'(02)9'        
      BASED(ADDR($TIME_HH));        
 DCL $TIME_MM            CHAR(02);    ####################################        
 DCL #TIME_MM            PIC'(02)9'        
      BASED(ADDR($TIME_MM));        
         
 DCL $DATE_JJ_MM_AAAA    CHAR(10);    ####################################        
 DCL $DATE#JJ#MM#AAAA    CHAR(10);    ####################################        
 DCL $DATE_JJ_MM_AA      CHAR(08);    ####################################        
         
 DCL $TIME_HH_MM_SS_CCC  CHAR(12);    ####################################        
 DCL $TIME_HH_MM_SS      CHAR(08);    ####################################        
 DCL $TIME#HH#MM#SS      CHAR(08);    ####################################        
 DCL $TIME_HH_MM         CHAR(05);    ####################################        
         
 DCL $TIME_STAMP         CHAR(26);    ###########################################        
 DCL $TIME_STAMP_PL1     CHAR(20);    ###########################################        
 /* - - - - - - - - - - - - - - - - - - - - - - - - - - - - */        
 $DATE_MSK = 'ABCDEFGHIJKLMNOPQ';        
         
 CALL $DATES_TIMES;        
         
 $DATES_TIMES: PROC;        
 $DATE_TIME      = DATETIME();        
 $DATE_HEURE     = $DATE_TIME_W.JJ!!'/'!!$DATE_TIME_W.MM!!'/'!!        
                   $DATE_TIME_W.S!!$DATE_TIME_W.A!!$DATE_TIME_W.AA!!        
                   ' - '!!$DATE_TIME_W.HH!!':'!!$DATE_TIME_W.MI;        
 $DATE_AAAAMMJJ     = $DATE_TIME_W.S!!$DATE_TIME_W.A!!$DATE_TIME_W.AA!!        
                      $DATE_TIME_W.MM!!$DATE_TIME_W.JJ;        
 $DATE_JJMMAAAA     = $DATE_TIME_W.JJ!!$DATE_TIME_W.MM!!$DATE_TIME_W.S!!        
                      $DATE_TIME_W.A!!$DATE_TIME_W.AA;        
 $DATE_AAMMJJ       = $DATE_TIME_W.AA!!$DATE_TIME_W.MM!!$DATE_TIME_W.JJ;        
 $DATE_JJMMAA       = $DATE_TIME_W.JJ!!$DATE_TIME_W.MM!!$DATE_TIME_W.AA;        
 $DATE_SAAMMJJ      = $DATE_TIME_W.S!!$DATE_TIME_W.AA!!$DATE_TIME_W.MM!!        
                      $DATE_TIME_W.JJ;        
 $DATE_AAAA         = $DATE_TIME_W.S!!$DATE_TIME_W.A!!$DATE_TIME_W.AA;        
 $DATE_AA           = $DATE_TIME_W.AA;        
 $DATE_S            = $DATE_TIME_W.S;        
 $DATE_SAA          = $DATE_TIME_W.S!!$DATE_TIME_W.AA;        
 $DATE_MM           = $DATE_TIME_W.MM;        
 $DATE_JJ           = $DATE_TIME_W.JJ;        
 $DATE_JJ_MM_AAAA   = $DATE_TIME_W.JJ!!'/'!!        
                      $DATE_TIME_W.MM!!'/'!!$DATE_TIME_W.S!!        
                      $DATE_TIME_W.A!!$DATE_TIME_W.AA;        
 $DATE#JJ#MM#AAAA   = $DATE_TIME_W.JJ!!'.'!!        
                      $DATE_TIME_W.MM!!'.'!!$DATE_TIME_W.S!!        
                      $DATE_TIME_W.A!!$DATE_TIME_W.AA;        
 $DATE_JJ_MM_AA     = $DATE_TIME_W.JJ!!'/'!!        
                      $DATE_TIME_W.MM!!'/'!!$DATE_TIME_W.AA;        
 $TIME_HHMMSSCCC    = $DATE_TIME_W.HH!!$DATE_TIME_W.MI!!        
                      $DATE_TIME_W.SS!!$DATE_TIME_W.CCC;        
 $TIME_HHMMSS       = $DATE_TIME_W.HH!!$DATE_TIME_W.MI!!        
                      $DATE_TIME_W.SS;        
 $TIME_HHMM         = $DATE_TIME_W.HH!!$DATE_TIME_W.MI;        
 $TIME_HH           = $DATE_TIME_W.HH;        
 $TIME_MM           = $DATE_TIME_W.MI;        
 $TIME_HH_MM_SS_CCC = $DATE_TIME_W.HH!!':'!!$DATE_TIME_W.MI!!':'!!        
                      $DATE_TIME_W.SS!!':'!!$DATE_TIME_W.CCC;        
 $TIME_HH_MM_SS     = $DATE_TIME_W.HH!!':'!!$DATE_TIME_W.MI!!':'!!        
                      $DATE_TIME_W.SS;        
 $TIME#HH#MM#SS     = $DATE_TIME_W.HH!!'.'!!$DATE_TIME_W.MI!!'.'!!        
                      $DATE_TIME_W.SS;        
 $TIME_HH_MM        = $DATE_TIME_W.HH!!':'!!$DATE_TIME_W.MI;        
 $TIME_STAMP        = $DATE_TIME_W.S!!$DATE_TIME_W.A!!$DATE_TIME_W.AA!!        
                      '-'!!$DATE_TIME_W.MM!!'-'!!$DATE_TIME_W.JJ!!'-'!!        
                      $DATE_TIME_W.HH!!'.'!!$DATE_TIME_W.MI!!'.'!!        
                      $DATE_TIME_W.SS!!'.'!!$DATE_TIME_W.CCC!!'000';        
 $TIME_STAMP_PL1    = $DATE_TIME_W.S!!$DATE_TIME_W.A!!$DATE_TIME_W.AA!!        
                      $DATE_TIME_W.MM!!$DATE_TIME_W.JJ!!        
                      $DATE_TIME_W.HH!!$DATE_TIME_W.MI!!        
                      $DATE_TIME_W.SS!!$DATE_TIME_W.CCC!!'000';        
 $END $DATES_TIMES;        
 /*------------------------------------------------------ END $DATTIM */        
 /********************************************        
 * DECLARATION DES PARAMETRES DE LA ROUTINE  *        
 ********************************************/        
 /*********************************************************************/        
 /*                                                                   */        
 /*         INTERFACE DE COMMUNICATION AVEC BEU001                    */        
 /*         ======================================                    */        
 /*                                                                   */        
 /* USAGE :                                                           */        
 /* CALL BEU001(IEU001,COUNT,FUNCT,DATAPCB,IOAREA,                    */        
 /*             SSA1, SSA2, SSA3, SSA4, SSA5, SSA6, SSA7);            */        
 /*********************************************************************/        
 /* MODE CONVERSION :                                                 */        
 /*                                                                   */        
 /* CALL BEU001(IEU001,THREE,'GCV',DATAPCB,IOAREA);                   */        
 /*                                                                   */        
 /*********************************************************************/        
 /*                                                                   */        
 /* PROCEDURE DE COMPILATION : TDMFOG.LIB.CNTL(FETCH)                 */        
 /* MODULE A TRANSFERER PAR L'EQUIPE SYSTEME : FEUT.T.LOAD(BEU001)    */        
 /*                                                                   */        
 /*********************************************************************/        
 /* DESCRIPTION DES MESSAGES D'ERREURS : CDRTPGM                      */        
 /* -----------------------------------                               */        
 /* DB : PROBLEME BASE DE DONNEES : VOIR LE PCB DATA                  */        
 /* 01 : COEFFICIENT DE CONVERSION EURO --> FB ERRONE                 */        
 /* 02 : PARAM. CODE DEVISE DIFFERENT DE 'F' ET 'E'                   */        
 /* 03 : PARAM. CODE PAGE DIFFERENT DE '500' ET '274'                 */        
 /* 04 : PARAM. CODE USAGE APPLICATION DIFF. DE : 3 = 3270            */        
 /*                                        P = HOST PRINTER           */        
 /*                                        L = LOCAL PRINTER          */        
 /*                                        Q = MQSERIES               */        
 /* 05 : CODE DEVISE MAL INSTALLE DANS LE DICTIONNAIRE                */        
 /* 06 : CODE PAGE MAL INSTALLE DANS LE DICTIONNAIRE                  */        
 /* 07 : CODE VERSION DE LA DB MAL INSTALLE DANS LE DICTIONNAIRE      */        
 /* 08 : DESCRIPTION FORME EXTERNE DU SEGMENT ABSENTE DU DICTIONNAIRE */        
 /* 09 : ERREUR BASE DE DONNEE SUR LA DB DICTIONNAIE                  */        
 /* 10 : LONGUEUR D'ATTRIBUT MODIFIEE POUR FORMAT TYPE : BF/BE/DE     */        
 /* 11 : LE FORMAT DE MONTANT DEVISE OU DATE  <> DZ/DF/BF             */        
 /* 12 : EN ISRT, REPL, LA DATE DOIT OBLIG. ETRE EXPRIMEE EN SAAMMJJ  */        
 /* 13 : FORMAT DE DONNEE NON RECONNU                                 */        
 /* 14 : LONGUEUR EN BYTE INADEQUATE POUR UN TYPE BF                  */        
 /* 15 : LONGUEUR TYPE BF <> 2/4                                      */        
 /* 16 : LONGUEUR TYPE DE/BE <> 4/8                                   */        
 /* 17 : EN ISRT, REPL, LA D. COMPLEM. DOIT ETRE EXPRIMEE EN SAAMMJJ  */        
 /* 18 : MONTANT AU FORMAT ZONED DECIMAL NON NUMERIQUE EN LECTURE     */        
 /* 19 : MONTANT AU FORMAT PACKED DECIMAL NON NUMERIQUE EN LECTURE    */        
 /* 20 : MONTANT AU FORMAT ZONED DECIMAL NON NUMERIQUE EN M A J       */        
 /* 21 : MONTANT AU FORMAT PACKED DECIMAL NON NUMERIQUE EN M A J      */        
 /* 22 : COUNT < 2 OU > 10                                            */        
 /* 23 : FONCTION NON IMPLEMENTEE CAR NON SPECIFIQUE A DL1            */        
 /* 24 : FONCTION INCONNUE                                            */        
 /* 25 : NOMBRE D'ATTRIBUTS DU SEGMENT DEPASSANT LE MAXIMUM AUTORISE  */        
 /* 26 : LONGUEUR DE RUBRIQUE MAL DEFINIE AU DICTIONNAIRE             */        
 /* 27 : COUNT PARAMETER > 7                                          */        
 /* 28 : PROTOCOLE EURO POSTPOSE JUSQU'A LA CONVERSION DE LA CAISSE   */        
 /* 29 : PARAMETRE SOCIETE NON RECONNU                                */        
 /* 30 : PROTOCOLE EURO INTERDIT CAR DB NON CONVERTIE A L'EURO        */        
 /*                                                                   */        
 /*********************************************************************/        
         
 DCL 1     IEU001,        
 /*------------------------- I N P U T -------------------------------*/        
      2    PTR,                        #################################################################        
       3   METAPCB      PTR,           ####################################################        
       3   ALTPCB       PTR,           ####################################################        
      2    INPUT,                      ###############################################################        
       3   LTSCTRN      CHAR (4),      ###############################################        
       3   CDDVTRN      CHAR (3),      ###############################################        
       3   CDPGTRN      CHAR (3),      ###############################################        
       3   CDTYUSR      CHAR (1),      ###############################################        
       3   CDPGMID      CHAR (8),      ###############################################        
       3   CDDFSEG      CHAR (8),      ###############################################        
       3   LASTCALL     CHAR (30),     ##############################################        
       3   TBEGCOD(32)  BIT(1),        #################################################        
                                       /*--!  BIT 1: MAJ EURO         */        
                                       /*--!    AUTORISEE AVANT PIVOT */        
                                       /*--!  BIT 2: NE PAS CONVERTIR */        
                                       /*--!  BIT 3: MAJ BEF          */        
                                       /*--!    AUTORISEE APRES PIVOT */        
       3   TBDISPO(128),        
        4  DBDNAME      CHAR(8),       ################################################        
        4  DBSTATE      CHAR(1),       ################################################        
                                       /*--! 0 : UPDATABLE            */        
                                       /*--! 1 : READ ONLY (NU)       */        
                                       /*--! 2 : NO ACCESS (NA)       */        
       3   FILLER       CHAR(200),     ##############################################        
         
 /*------------------------ O U T P U T ------------------------------*/        
      2    OUTPUT,                     ##############################################################        
       3   CDRTPGM      CHAR (6),      ###############################################        
       3   LTRTPGM      CHAR (60),     ##############################################        
       3   DBPTR        PTR,           ####################################################        
       3   LASTDLI      CHAR (10);     ##############################################        
         
 /*------------------- REDEFINITIONS DE IEU001 -----------------------*/        
 DCL 1     IEU001_R     BASED(ADDR(IEU001.INPUT.FILLER)),        
       2   CDEVTRN      CHAR(001),     ##############################################        
                                       /*--!  P : VALEUR PAR DEFAUT   */        
       2   CDDEVDB      CHAR(003),     ##############################################        
                                       /*--!  BEF / EUR               */        
       2   TBDFDBD_PTR  PTR,        
       2   TBDFATT_PTR  PTR,        
       2   TBDFSEG_PTR  PTR,        
       2   SYSTIME      BIN FIXED(31),        
       2   DATEORD      PIC '(7)9',        
       2   NBMXCOP_C    FIXED BIN(15),        
       2   FILLER       CHAR(170);     ##############################################        
 /*********************************************************************/        
              /* INTERFACE DL1          */        
 DCL 1    GA2016J           BASED(JWB001.GXXXXXJ_P),        
 /*------------------------- I N P U T -------------------------------*/        
      2   INPUT,        
       3  IOPCB             PTR,        
       3  ALTPCB            PTR,        
       3  PRTPCB            PTR,        
       3  SPA_PTR           PTR,        
       3  MID_PTR           PTR,        
       3  PAGE_PTR          PTR,        
       3  PAGEER_PTR        PTR,        
       3  LTNMMTH           CHAR(20),        
       3  DXI10PCB          PTR,                                                
       3  DC105PCB          PTR,                                                
       3  DSM88PCB          PTR,        
       3  DXI04PCB          PTR,        
       3  DXI05PCB          PTR,        
       3  DXI06PCB          PTR,        
       3  DA215PCB          PTR,                                                
       3  DA215$PCB         PTR,                                                
       3  DA2152PCB         PTR,                                                
       3  DA216PCB          PTR,                                                
       3  DA223PCB          PTR,                                                
       3  DEU02PCB          PTR,                                                
       3  DS101PCB          PTR,        
       3  DS101S2PCB        PTR,        
       3  DS101S3PCB        PTR,        
       3  DS106PCB          PTR,        
       3  DS108PCB          PTR,        
       3  DS124PCB          PTR,        
       3  DSM19PCB          PTR,        
       3  DS102PCB          PTR,        
       3  DSM40PCB          PTR,        
       3  DS133PCB          PTR,        
       3  DS103PCB          PTR,        
       3  DS139PCB          PTR,        
       3  DSM22PCB          PTR,        
       3  DSM18PCB          PTR,        
       3  DSM18BPCB         PTR,        
       3  DD201PCB          PTR,        
       3  DSM43PCB          PTR,        
       3  DEU02MPCB         PTR,        
       3  DEU02DPCB         PTR,        
       3  DSM55PCB          PTR,        
       3  DC105MPCB         PTR,        
       3  DS125PCB          PTR,        
       3  DS137PCB          PTR,        
       3  DCO15PCB          PTR,        
       3  DCO26PCB          PTR,        
       3  DSM25MPCB         PTR,        
       3  DS101MPCB         PTR,        
       3  DS101M2PCB        PTR,        
       3  DS101M3PCB        PTR,        
       3  DS106MPCB         PTR,        
       3  DS108MPCB         PTR,        
       3  DS124MPCB         PTR,        
       3  DS125MPCB         PTR,        
       3  DS137MPCB         PTR,        
       3  DCO15MPCB         PTR,        
       3  DCO26MPCB         PTR,        
       3  DSM22MPCB         PTR,        
       3  DDO01PCB          PTR,        
       3  DDO02PCB          PTR,        
       3  DDO03PCB          PTR,        
       3  DC105SPCB         PTR,                                                
       3  DSM60PCB          PTR,                                                
       3  DSM61PCB          PTR,                                                
       3  DSM62PCB          PTR,                                                
       3  DSM63PCB          PTR,                                                
       3  DSM64PCB          PTR,                                                
       3  DSM65PCB          PTR,                                                
       3  DSM66PCB          PTR,                                                
       3  DSM67PCB          PTR,                                                
       3  DSM68PCB          PTR,                                                
       3  DSM69PCB          PTR,                                                
       3  DS102$PCB          PTR,                                               
       3  DS128PCB          PTR,                                                
       3  DS132PCB          PTR,                                                
       3  DS134PCB          PTR,                                                
       3  DS137$PCB          PTR,                                               
       3  DSM01PCB          PTR,                                                
       3  DSM06PCB          PTR,                                                
       3  DSM07PCB          PTR,                                                
       3  DSM09PCB          PTR,                                                
       3  DS146PCB          PTR, ################################################                   
       3  DSM80PCB          PTR, ################################################                   
       3  DSMB9PCB          PTR; ################################################                   
             /* SERVICE                */        
 /*******************************************************************/        
 /* INTERFACE GENERAL POUR TOUS LES SERVICES                        */        
 /*******************************************************************/        
         
 DCL 1  JWB001,        
      2   CDEVCLI    CHAR(01),      ########################################        
      2   RETOUR     BIT (1),       #########################################        
      2   LEVEL      PIC '9',       #########################################        
      2   ATTRIB     CHAR(02),      ########################################        
      2   LTNMSER    CHAR(08),      ########################################        
      2   ENTREE,        
       3  DBSCRAT,        
        4 METAPCB    PTR,           ##############################################        
        4 DBSCRPCB   PTR,           ##############################################        
        4 LTSGSCR    CHAR(08),      #########################################        
       3  DBTABLE,        
        4 METAPCB    PTR,           ##############################################        
        4 DBTABPCB   PTR,           ##############################################        
        4 LTSGTAB    CHAR(08),      #########################################        
        4 CDDFTAB    CHAR(08),      #########################################        
       3  DBCOMDE,        
        4 METAPCB    PTR,           ##############################################        
        4 DBCDEPCB   PTR,           ##############################################        
        4 LTSGCDE    CHAR(08),      #########################################        
        4 CDDFCDE    CHAR(08),      #########################################        
       3  CDTRACE    PIC '9',       ##########################################        
       3  TBTRACE_I  FIXED (5),     ########################################        
       3  BOTBDB2    BIT (1),       ##########################################        
       3  LTNMBUS    CHAR(20),      #########################################        
       3  LTNMOBJ    CHAR(20),      #########################################        
       3  LTNMMTH    CHAR(20),      #########################################        
      2   SORTIE,        
       3  CDRTPGM    CHAR(09),      #########################################        
       3  CDRTDB2    BIN FIXED(31), ####################################        
       3  SQLERRM    CHAR (70) VAR, ####################################        
       3  CDROLLB    BIT(1),        ###########################################        
       3  LSTCALL    CHAR(12),      #########################################        
       3  LSTSERV    CHAR(12),      #########################################        
       3  TBTRACE (100),            ###############################################        
        4 FLAG_TRACE CHAR(01),        
        4 MSGE_TRACE CHAR(40),        
      2   GXXXXXJ_P  PTR;           ##############################################        
         
 /* EXPLICATIONS:                                                    */        
 /*                                                                  */        
 /* APPEL DU BUS 'LTNMBUS' POUR EXECUTION DE LA FONCTION 'LTNMFCT'   */        
 /* DE L'OBJET 'LTNMOBJ'                                             */        
 /*                                                                  */        
 /* LES TRACES SONT AFFICHEES EN FCT DE CDTRACE (0->9)               */        
 /* ->  0 PAS DE TRACE, 9 TRACE COMPLETES                            */        
         
         
              /* BUS                    */        
         
 /********************************************        
 * INTERFACES AVEC LES SCENARIOS             *        
 ********************************************/        
 DCL XEU100  ENTRY OPTIONS(FETCHABLE);        
         
 DCL KA2151  ENTRY;           ####################################################        
 /*********************************************************************/        
 /* INTERFACE : KA2151J                                               */        
 /*                                                                   */        
 /*                 SERVICE D'ACCES DB EUROTAX                        */        
 /*                                                                   */        
 /*         V O I T U R E S     P A R T I C U L I E R S               */        
 /*                  U T I L I T A I R E S                            */        
 /*                      M O T O S                                    */        
 /*         *******************************************               */        
 /*               DB    DA215 , DA216                                 */        
 /*                                                                   */        
 /*********************************************************************/        
                                 /* LIMITE EXPLO MARQUES              */        
                                 /* LIMITE EXPLO MODELES              */        
                                 /* LIMITE EXPLO TYPES                */        
                                 /* LIMITE EXPLO EQUIPEMENTS          */        
                                 /* LIMITE EXPLO CONTENU D'UN PACK    */        
         
 DCL 1 KA2151J,        
      2 PTRPCB       CHAR (256),    ################################################        
      2 INPUT        CHAR (2000),   ###############################################        
      2 OUTPUT       CHAR (20000);  ##############################################        
         
 /*********************************************************************/        
 /*             REDEFINITION DES POINTEURS                            */        
 /*  REMARQUES : PTR = CHAR (04)                                      */        
 /*********************************************************************/        
         
 DCL 1 KA2151J_P      BASED(ADDR(KA2151J.PTRPCB)),        
      2 DEU02PCB      PTR,               ######################################################        
      2 DA215PCB      PTR,               ######################################################        
      2 DA215$PCB     PTR,               ######################################################        
      2 DA2152PCB     PTR,               ######################################################        
      2 DA216PCB      PTR;               ######################################################        
         
 /*********************************************************************/        
 /*                S E G M E N T S     I N D I V I D U E L S          */        
 /*                =========================================          */        
 /* METHODE : CONSULT_YY_XXX                                          */        
 /* METHODE : SUPPR_YY_XXX                                            */        
 /* METHODE : CREAT_YY_XXX                                            */        
 /* METHODE : MODIF_YY_XXX                                            */        
 /*                                                                   */        
 /*     YY = VP(VOITURES) , UT(UTILITAIRES), MO(MOTOS)                */        
 /*    XXX = MAK , Marque ..................A2EUTnn (T11,T21,T41)     */        
 /*          MOD : Modele ..................A2EUTnn (T12,T22,T42)     */        
 /*          TYP : Type de vehicule.........A2EUTnn (T13,T23,T43)     */        
 /*          PRI : Prix d'un type de vehic..A2EUTnn (T14,T24,T44)     */        
 /*          EQT : Equipements pour un type.A2EUTnn (T15,T25,T45)     */        
 /*          CON : Contenu d'un pack .......A2EUTnn (T16,T26,T46)     */        
 /*          TXT : Libelle d'un equipement..A2EUTnn (T17,T27,T47)     */        
 /*          COT : Cotation d'un type.......A2EUTnn (T18,T28,T48)     */        
 /*                                                                   */        
 /* INPUT : LE SEGMENT A2EUTnn                                        */        
 /* OUTPUT: LE SEGMENT A2EUTnn                                        */        
 /*                                                                   */        
 /* Exemple dans le programme appelant pour 'CONSULT_VP_MAK'          */        
 /* -------                                                           */        
 /* DCL A2EUT11_R         CHAR(STG(A2EUT11)) BASED(ADDR(A2EUT11));    */        
 /*         A2EUT11.CDTYPTB = '11';                                   */        
 /*         A2EUT11.NOIDMAR = numero de marque                        */        
 /*     KA2151J_A2EUTAX_I = A2EUT11_R;                                */        
 /* En output :                                                       */        
 /*     A2EUT11_R = KA2151J_A2EUTAX_O;                                */        
 /*                                                                   */        
 /* -------------------- INPUT -------------------------------------- */        
 DCL 1 KA2151J_A2EUTAX_I  CHAR(300)    BASED(ADDR(KA2151J.INPUT));        
         
 /* -------------------- OUTPUT ------------------------------------- */        
 DCL 1 KA2151J_A2EUTAX_O  CHAR(300)    BASED(ADDR(KA2151J.OUTPUT));        
         
 /*********************************************************************/        
 /*                     E X P L O R A T I O N S                       */        
 /*                     =======================                       */        
 /* METHODE : EXPLO_1P_YY_XXX                                         */        
 /* METHODE : EXPLO_PS_YY_XXX                                         */        
 /* METHODE : EXPLO_PP_YY_XXX                                         */        
 /*                                                                   */        
 /*     YY = VP(VOITURES) , UT(UTILITAIRES), MO(MOTOS)                */        
 /*    XXX = MAK : Toutes les marques d'une categorie (VP,UT ou MO)   */        
 /*          MOD : tous les modeles pour une marque                   */        
 /*          TYP : tous les type pour un modele et une marque         */        
 /*          EQT : tous les equipements d'un Type                     */        
 /*          CON : tous les equipements contenu dans un pack          */        
 /*                                                                   */        
 /* INPUT :                                                           */        
 /* O indique que la donnee est obligatoire                           */        
 /* F indique que la donnee est facultative uniqt pour EXPLO_1P_YY_XXX*/        
 /*   sinon la donnee est Obligatoire pour suivant/precedent          */        
 /*                                                                   */        
 /* !!ANNECTR : Zero => pas de test sur date debut et fin d'importat. */        
 /*                     Donc on prend tout                            */        
 /* REMARQUE EXPLO MAK,MOD,TYP :                                      */        
 /* ==========================                                        */        
 /* Ces explo se font sur l'index secondaire trie par libelle.        */        
 /* Pour les explo suivant/precedent il faut en plus du NOIDMAR       */        
 /* renvoyer le LTMARQU pour se repositionner le o on etait arrive   */        
 /* (Idem pour Explo MOD et TYP)                                      */        
 /*                                                                   */        
 /*********************************************************************/        
         
 /* -------------------- INPUT ---------------------------------------*/        
         
 DCL 1 KA2151J_EXPMAK_I                   BASED(ADDR(KA2151J.INPUT)),        
      2 CDTYPTB        CHAR(02),     ################################################        
      2 NBITEXP        BIN FIXED(15),###########################################        
      2 NOIDMAR        DEC FIXED(07),###########################################        
      2 LTMARQU        CHAR(40),     ################################################        
      2 ANNECTR        PIC '(4)9',   ##############################################        
      2 CDTTERR        CHAR(01),     ################################################        
      2 CDSPORT        CHAR(01),     ################################################        
      2 CDSPOSE        CHAR(02),     ################################################        
      2 TXTCLAS        CHAR(08),     ################################################        
      2 TXTCATV        CHAR(08),     ################################################        
      2 TXTCARO        CHAR(08),     ################################################        
      2 TXTCARB        CHAR(08),     ################################################        
      2 LIBMARQ        CHAR(40),     ################################################        
                                     /* Le ? est obligatoire pour     */        
                                     /* delimiter les champs e tester */        
                                     /* (A?RO? etc..)                 */        
      2 NOUVEAU        CHAR(01);     ################################################        
                                     /*   nouveaux vehicules          */        
         
 DCL 1 KA2151J_EXPMOD_I                   BASED(ADDR(KA2151J.INPUT)),        
      2 CDTYPTB        CHAR(02),     ################################################        
      2 NBITEXP        BIN FIXED(15),###########################################        
      2 NOIDMAR        DEC FIXED(07),###########################################        
      2 NOIDMOD        DEC FIXED(07),###########################################        
      2 LTMODEL        CHAR(40),     ################################################        
      2 ANNECTR        PIC '(4)9',   ##############################################        
      2 CDTTERR        CHAR(01),     ################################################        
      2 CDSPORT        CHAR(01),     ################################################        
      2 CDSPOSE        CHAR(02),     ################################################        
      2 TXTCLAS        CHAR(08),     ################################################        
      2 TXTCATV        CHAR(08),     ################################################        
      2 TXTCARO        CHAR(08),     ################################################        
      2 TXTCARB        CHAR(08),     ################################################        
      2 NOUVEAU        CHAR(01);     ################################################        
                                     /*   nouveaux vehicules          */        
         
 DCL 1 KA2151J_EXPTYP_I                   BASED(ADDR(KA2151J.INPUT)),        
      2 CDTYPTB        CHAR(02),     ################################################        
      2 NBITEXP        BIN FIXED(15),###########################################        
      2 NOIDMAR        DEC FIXED(07),###########################################        
      2 NOIDMOD        DEC FIXED(07),###########################################        
      2 NOIDTYP        DEC FIXED(07),###########################################        
      2 LTTYPEV        CHAR(60),     ################################################        
      2 ANNECTR        PIC '(4)9',   ##############################################        
      2 CDTTERR        CHAR(01),     ################################################        
      2 CDSPORT        CHAR(01),     ################################################        
      2 CDSPOSE        CHAR(02),     ################################################        
      2 TXTCLAS        CHAR(08),     ################################################        
      2 TXTCATV        CHAR(08),     ################################################        
      2 TXTCARO        CHAR(08),     ################################################        
      2 TXTCARB        CHAR(08),     ################################################        
      2 NOUVEAU        CHAR(01);     ################################################        
                                     /*   nouveaux vehicules          */        
         
 DCL 1 KA2151J_EXPEQT_I                   BASED(ADDR(KA2151J.INPUT)),        
      2 CDTYPTB        CHAR(02),     ################################################        
      2 NBITEXP        BIN FIXED(15),###########################################        
      2 NOIDTYP        DEC FIXED(07),###########################################        
      2 NOIDADD        DEC FIXED(11),###########################################        
      2 ANNECTR        PIC '(4)9',   ##############################################        
      2 CDTYPEQ        CHAR(03),     ################################################        
                                     /*                     O=Options */        
                                     /*                     P=Packs   */        
                                     /*                 blanc = tout  */        
                                     /*   Ex: "SO "=Serie + Options   */        
      2 CDMULTI        CHAR(01),     ################################################        
                                     /*         les doubles           */        
      2 DAFINIM        PIC'(6)9',    ###############################################        
                                     /*   (AAAAMM : obligatoire si    */        
                                     /*    CDMULTI#'Y')               */        
      2 CDGARAN        CHAR(01);     ################################################        
                                     /*         les garanties         */        
         
 DCL 1 KA2151J_EXPCON_I                   BASED(ADDR(KA2151J.INPUT)),        
      2 CDTYPTB        CHAR(02),     ################################################        
      2 NBITEXP        BIN FIXED(15),###########################################        
      2 NOIDTYP        DEC FIXED(07),###########################################        
      2 NOIDPAC        DEC FIXED(07),###########################################        
      2 NOIDEQT        DEC FIXED(07),###########################################        
      2 DATEDEB        DEC FIXED(07),###########################################        
      2 ANNECTR        PIC '(4)9',   ##############################################        
      2 CDMULTI        CHAR(01),     ################################################        
                                     /*         les doubles           */        
      2 DAFINIM        PIC'(6)9';    ###############################################        
                                     /*   (AAAAMM : obligatoire si    */        
                                     /*    CDMULTI#'Y')               */        
         
 /* -------------------- OUTPUT ------------------------------------- */        
         
 DCL 1 KA2151J_EXPMAK_O                   BASED(ADDR(KA2151J.OUTPUT)),        
      2 NBELMTB        BIN FIXED(15),    ###########################################        
      2 TBIDELM (50),        
       3 NOIDMAR            FIXED(07),   ##########################################        
       3 LTMARQU            CHAR(40),    ###########################################        
       3 CDTTERR            CHAR(01);    ###########################################        
         
 DCL 1 KA2151J_EXPMOD_O                   BASED(ADDR(KA2151J.OUTPUT)),        
      2 NBELMTB        BIN FIXED(15),    ###########################################        
      2 TBIDELM (50),        
       3 NOIDMOD            FIXED(07),   ##########################################        
       3 LTMODEL            CHAR(40),    ###########################################        
       3 CDTTERR            CHAR(01);    ###########################################        
         
 DCL 1 KA2151J_EXPTYP_O                   BASED(ADDR(KA2151J.OUTPUT)),        
      2 NBELMTB        BIN FIXED(15),    ###########################################        
      2 TBIDELM (50),        
       3 NOIDTYP            FIXED(07),   ##########################################        
       3 LTTYPEV            CHAR(60),    ###########################################        
       3 CDTTERR            CHAR(01),    ###########################################        
       3 DADEBIM            PIC'(6)9',   ##########################################        
       3 DAFINIM            PIC'(6)9',   ##########################################        
       3 NBRPORT            FIXED(03),   ##########################################        
       3 NBTYPKW            FIXED(03),   ##########################################        
       3 NBVITES            FIXED(03),   ##########################################        
       3 TXTBOIT            CHAR(08),    ###########################################        
       3 TYPCYLI            FIXED(05),   ##########################################        
       3 NBCVDIN            FIXED(03),   ##########################################        
       3 TCO2EMI            FIXED(05),   ##########################################        
       3 CDECOV2            CHAR(01),    ###########################################        
       3 FILLER             CHAR(26);    ###########################################        
         
 DCL 1 KA2151J_EXPEQT_O                   BASED(ADDR(KA2151J.OUTPUT)),        
      2 NBELMTB        BIN FIXED(15),    ###########################################        
      2 TBIDELM (50),        
       3 NOIDADD            FIXED(11),   ##########################################        
       3 NOIDEQT            FIXED(07),   ##########################################        
       3 DATEDEB            FIXED(07),   ##########################################        
       3 DATEFIN            FIXED(07),   ##########################################        
       3 LTTXTEQ(2)         CHAR(80),    ###########################################        
       3 LTTXTST(2)         CHAR(40),    ###########################################        
       3 CDTYPEQ            CHAR(01),    ###########################################        
       3 PRIHTVA            FIXED(09),   ##########################################        
       3 PRITVAC            FIXED(09);   ##########################################        
         
 DCL 1 KA2151J_EXPCON_O                   BASED(ADDR(KA2151J.OUTPUT)),        
      2 NBELMTB        BIN FIXED(15),    ###########################################        
      2 TBIDELM (50),        
       3 NOIDPAC            FIXED(07),   ##########################################        
       3 NOIDEQT            FIXED(07),   ##########################################        
       3 LTTXTEQ(2)         CHAR(80),    ###########################################        
       3 LTTXTST(2)         CHAR(40),    ###########################################        
       3 DATEDEB            FIXED(07),   ##########################################        
       3 DATEFIN            FIXED(07),   ##########################################        
       3 PRIHTVA            FIXED(09),   ##########################################        
       3 PRITVAC            FIXED(09);   ##########################################        
         
 /*********************************************************************/        
 /*                P R I X   D ' U N   V E H I C U L E                */        
 /*                ===================================                */        
 /* METHODE : YY_PRIX                                                 */        
 /*                                                                   */        
 /*     YY = VP(VOITURES) , UT(UTILITAIRES), MO(MOTOS)                */        
 /*                                                                   */        
 /* !!ANNECTR : Zero => Renvoi le dernier prix connu pour le vehicule */        
 /*                                                                   */        
 /*********************************************************************/        
         
 /* -------------------- INPUT ---------------------------------------*/        
         
 DCL 1 KA2151J_PRIX_I                  BASED(ADDR(KA2151J.INPUT)),        
      2 CDTYPTB       CHAR(02),      #################################################        
      2 NOIDTYP       DEC FIXED(07), ############################################        
      2 ANNECTR       PIC'(4)9';     ################################################        
         
 /* -------------------- OUTPUT ------------------------------------- */        
 DCL 1 KA2151J_PRIX_O                  BASED(ADDR(KA2151J.OUTPUT)),        
      2 DATEDEB       DEC FIXED(07), ############################################        
      2 PRIHTVA       DEC FIXED(09), ############################################        
      2 PRITVAC       DEC FIXED(09), ############################################        
      2 TAUXTVA       DEC FIXED(5,2);###########################################        
         
         
 /*********************************************************************/        
 /*                C O T A T I O N S                                  */        
 /*                =================                                  */        
 /* METHODE : YY_COTATION                                             */        
 /*                                                                   */        
 /*     YY = VP(VOITURES) , UT(UTILITAIRES), MO(MOTOS)                */        
 /*********************************************************************/        
         
 /* -------------------- INPUT ---------------------------------------*/        
         
 DCL 1 KA2151J_COTAT_I                 BASED(ADDR(KA2151J.INPUT)),        
      2 CDTYPTB        CHAR(02),     ################################################        
      2 NOIDTYP        DEC FIXED(07),###########################################        
      2 ANNIMAT        PIC'(4)9',    ###############################################        
      2 MOIIMAT        PIC'99',      #################################################        
      2 KILOMRE        DEC FIXED(09);###########################################        
         
 /* -------------------- OUTPUT ------------------------------------- */        
 DCL 1 KA2151J_COTAT_O                 BASED(ADDR(KA2151J.OUTPUT)),        
      2 ANNEVAL        PIC'(4)9',    ###############################################        
      2 MOISVAL        PIC'99',      #################################################        
      2 KILOMTH        DEC FIXED(09),###########################################        
      2 COTAREV        DEC FIXED(09),###########################################        
      2 COTARAC        DEC FIXED(09);###########################################        
         
 /*********************************************************************/        
 /*      A C C E S    P A R    L E S    I N D E X   (DA216)           */        
 /*      ==================================================           */        
 /*                                                                   */        
 /* METHODE : MAR_MOD_YY_TYP  ...........(index '10','20','40')       */        
 /*   renvoi  Numero de Marque et de Modele d'un type donne           */        
 /*                                                                   */        
 /*     YY = VP(VOITURES) , UT(UTILITAIRES), MO(MOTOS)                */        
 /*                                                                   */        
 /*********************************************************************/        
 /* Utilise par le BMP de chargement pour partiel (AA2243)            */        
 /*                                                                   */        
 /* METHODE : EQT_ADD_YY ................(Index '12','22','42')       */        
 /*   renvoi  Numero addition et type pour un equipement donne        */        
 /*                                                                   */        
 /* METHODE : EQT_CON_YY ................(Index '13','23','43')       */        
 /*   renvoi  Numero de pack  et type pour un equipement donne        */        
 /*                                                                   */        
 /*********************************************************************/        
         
 /* -------------------- INPUT ---------------------------------------*/        
         
 DCL 1 KA2151J_A2IXEUT_I               BASED(ADDR(KA2151J.INPUT)),        
      2 NOIDTYP           DEC FIXED(07),        
      2 NOIDEQT           DEC FIXED(07);        
         
 /* -------------------- OUTPUT ------------------------------------- */        
         
 DCL 1 KA2151J_A2IXEUT_O               BASED(ADDR(KA2151J.OUTPUT)),        
      2 NOIDMAR           DEC FIXED(07),        
      2 NOIDMOD           DEC FIXED(07),        
      2 NOIDTYP           DEC FIXED(07),        
      2 NOIDADD           DEC FIXED(11),        
      2 NOIDPAC           DEC FIXED(07);        
         
 /*********************************************************************/        
 /*        LE TAUX TMC POUR DES NOUV. VOITURES ET OCCASION            */        
 /*      ==================================================           */        
 /*                                                                   */        
 /* METHODE : YY_TMC                                                  */        
 /*                                                                   */        
 /*     YY = VP(VOITURES) , UT(UTILITAIRES), MO(MOTOS)                */        
 /*                                                                   */        
 /*********************************************************************/        
         
 /* -------------------- INPUT ---------------------------------------*/        
         
 DCL 1 KA2151J_TMC_I               BASED(ADDR(KA2151J.INPUT)),        
      2 NOIDMAR            DEC FIXED(07),######################        
      2 NOIDMOD            DEC FIXED(07),######################        
      2 NOIDTYP            DEC FIXED(07),######################        
      2 TMC_MOIS           CHAR(02),     ##############################        
      2 TMC_ANNEE          CHAR(04);     ###############################        
 /* -------------------- OUTPUT ------------------------------------- */        
 DCL 1 KA2151J_TMC_O               BASED(ADDR(KA2151J.OUTPUT)),        
       2 TMC_NOUV          DEC FIXED(09),        
       2 TMC_OCCAS         DEC FIXED(09);        
 /*********************************************************************/        
         
 /*********************************************************************/        
 /*                                                                   */        
 /* MESSAGE D'ERREUR (JWB001.CDRTPGM = $LTNMPRJ !! 'XXX')             */        
 /*    001 : NOM DE METHODE PAS CONNU                                 */        
 /*    002 : TAILLE INPUT INCORRECTE                                  */        
 /*    003 : DONNEES SEGMENT INPUT INVALIDES                          */        
 /*    004 : DONNEES SEGMENT OUTPUT INVALIDES                         */        
 /*    005 : TAILLE INPUT EXPLORATION INCORRECTE                      */        
 /*    006 : TAILLE OUTPUT EXPLORATION INCORRECTE                     */        
 /*    007 : NOMBRE D'ITEMS A EXPLORER INVALIDE                       */        
 /*    008 : NOMBRE D'ITEMS A EXPLORER > LIMITE PREVUE                */        
 /*    009 : EXPLORATION S/P : CLE DE DEPART NON RENSEIGNEE           */        
 /*    010 : TRAITEMENT INDEX PAS PREVU                               */        
 /*    011 : EXPLORATION : DONNEES INPUT INVALIDES                    */        
 /*    012 : TAILLE INPUT YY_PRIX INCORRECTE                          */        
 /*    013 : TAILLE OUTPUT YY_PRIX INCORRECTE                         */        
 /*    014 : TAILLE INPUT YY_COTATION INCORRECTE                      */        
 /*    015 : TAILLE OUTPUT YY_COTATION INCORRECTE                     */        
 /*                                                                   */        
 /*********************************************************************/        
             /* & interface                 */        
         
 DCL KA2231  ENTRY;           ####################################################        
 /*********************************************************************/        
 /* INTERFACE : KA2231J                                               */        
 /*                                                                   */        
 /*                 SERVICE D'ACCES DB EUROTAX                        */        
 /*                                                                   */        
 /*                T E X T E S   G E N E R A U X                      */        
 /*         *******************************************               */        
 /*               DB    DA223                                         */        
 /*                                                                   */        
 /*********************************************************************/        
         
 DCL 1 KA2231J,        
      2 PTRPCB       CHAR (256),    ################################################        
      2 INPUT        CHAR (500),    ################################################        
      2 OUTPUT       CHAR (10000);  ##############################################        
         
 /*********************************************************************/        
 /*             REDEFINITION DES POINTEURS                            */        
 /*  REMARQUES : PTR = CHAR (04)                                      */        
 /*********************************************************************/        
         
 DCL 1 KA2231J_P      BASED(ADDR(KA2231J.PTRPCB)),        
      2 DEU02PCB      PTR,               ######################################################        
      2 DA216PCB      PTR,               ######################################################        
      2 DA223PCB      PTR;               ######################################################        
         
 /*********************************************************************/        
 /*   REDEFINITIONS PAR TYPE                                          */        
 /*********************************************************************/        
         
 /*********************************************************************/        
 /* METHODE : CONSULT_TXT                                             */        
 /* METHODE : SUPPR_TXT                                               */        
 /* METHODE : CREAT_TXT                                               */        
 /* METHODE : MODIF_TXT                                               */        
 /*                                                                   */        
 /* PS : LES TEXTES EUROTAX ONT TOUJOURS UNE LONGUER DE 8 POSITIONS   */        
 /*      XXXXYYYY                                                     */        
 /*                                                                   */        
 /* AVEC XXXX = NUMERO TYPE DE TEXTE (EX:0001 => CARROSSERIES         */        
 /*                                      0003 => CLASSE DE VeHICULES  */        
 /*                                      0004 => CATEGORIE VeHICULES  */        
 /*                                      0010 => CARBURANTS)          */        
 /*      YYYY = NUMERO SEQUENTIEL     EX: POUR XXXX=0001              */        
 /*                                      0001 => BERLINE              */        
 /*                                      0002 => BREAK                */        
 /*                                   EX: POUR XXXX=0010              */        
 /*                                      0001 => ESSENCE SANS PLOMB   */        
 /*                                      0002 => ESSENCE AVEC PLOMB   */        
 /*                                      0003 => DIESEL               */        
 /*********************************************************************/        
 /* -------------------- INPUT -------------------------------------- */        
 DCL 1 KA2231J_I01                     BASED(ADDR(KA2231J.INPUT)),        
       2 NOIDTXT  CHAR(20),               #####################################################        
       2 LTTEXTE(2)  CHAR(50),            ##################################################        
       2 LTTXTST(2)  CHAR(10),            ##################################################        
       2 DATECRE  DEC FIXED(7),           #################################################        
       2 DATEMAJ  DEC FIXED(7);           #################################################        
         
 /* -------------------- OUTPUT ------------------------------------- */        
 DCL 1 KA2231J_O01                     BASED(ADDR(KA2231J.OUTPUT)),        
       2 NOIDTXT  CHAR(20),               #####################################################        
       2 LTTEXTE(2)  CHAR(50),            ##################################################        
       2 LTTXTST(2)  CHAR(10),            ##################################################        
       2 DATECRE  DEC FIXED(7),           #################################################        
       2 DATEMAJ  DEC FIXED(7);           #################################################        
         
 /*********************************************************************/        
 /* METHODE : EXPLO_1P_TXT                                            */        
 /* METHODE : EXPLO_PS_TXT                                            */        
 /* METHODE : EXPLO_PP_TXT                                            */        
 /*                                                                   */        
 /* INPUT :                                                           */        
 /* O indique que la donnee est obligatoire                           */        
 /* F INDIQUE QUE LA DONNeE EST FACULTATIVE UNIQT POUR EXPLO_1P_TXT   */        
 /*   sinon la donnee est Obligatoire pour suivant/precedent          */        
 /* CDTYPVH est facultatif. Si on donne un type de vehicule , le      */        
 /*         service verifie en plus que le type de texte est bien     */        
 /*         reference par au moins un vehicule                        */        
 /*         Exemple : Carroserie "Decapotable" n'est certainement pas */        
 /*                   referencee dans les vehicules 'MO'              */        
 /*         Le service utilise l'index 11,21,41 dans la DA216         */        
 /*********************************************************************/        
         
 /* -------------------- INPUT ---------------------------------------*/        
 DCL 1 KA2231J_I02                    BASED(ADDR(KA2231J.INPUT)),        
      2 NBITEXP       BIN FIXED(15),  ############################################        
      2 CDTYPVH       CHAR(02),       #################################################        
      2 TYPTEXT       CHAR(04),       #################################################        
      2 NOIDTXT       CHAR (20);      ################################################        
         
 /* -------------------- OUTPUT ------------------------------------- */        
 DCL 1 KA2231J_O02                    BASED(ADDR(KA2231J.OUTPUT)),        
       2 NBELMTB      BIN FIXED(15),  ############################################        
       2 TBIDELM (50),        
         3 NOIDTXT    CHAR(20),       #################################################        
         3 LTTEXTE(2) CHAR (50),      ################################################        
         3 LTTXTST(2) CHAR (10);      ################################################        
         
         
 /*********************************************************************/        
 /*                                                                   */        
 /* LISTE DES METHODES UTILISEES :                                    */        
 /*                                                                   */        
 /*         CONSULT_TXT    (CONSULTATION)                             */        
 /*                      => INPUT  : _I01.NOIDTXT                     */        
 /*                         OUTPUT : _O01                             */        
 /*                         PCB UTILISES : DA223PCB                   */        
 /*                                                                   */        
 /*         SUPPR_TXT       (SUPPRESSION)                             */        
 /*                      => INPUT  : _I01.NOIDTXT                     */        
 /*                         OUTPUT : -                                */        
 /*                         PCB UTILISES : DA223PCB                   */        
 /*                                                                   */        
 /*         CREAT_TXT    (CREATION)                                   */        
 /*                      => INPUT  : _I01                             */        
 /*                         OUTPUT : -                                */        
 /*                         PCB UTILISES : DA223PCB                   */        
 /*                                                                   */        
 /*         MODIF_TXT    (MODIFICATION)                               */        
 /*                      => INPUT  : _I01                             */        
 /*                         OUTPUT : -                                */        
 /*                         PCB UTILISES : DA223PCB                   */        
 /*                                                                   */        
 /*********************************************************************/        
 /*                                                                   */        
 /* MESSAGE D'ERREUR (JWB001.CDRTPGM = $LTNMPRJ !! 'XXX')             */        
 /*                                                                   */        
 /*    001  :  NOM DE METHODE NON REPERTORIE                          */        
 /*    002  :  LONGUEUR DE L'INPUT I01 INVALIDE                       */        
 /*    003  :  LONGUEUR DE L'INPUT I02 INVALIDE                       */        
 /*    004  :  LONGUEUR DE L'OUTPUT I01 INVALIDE                      */        
 /*    005  :  LONGUEUR DE L'OUTPUT I02 INVALIDE                      */        
 /*    006  :  METHODE CREAT_TXT => DONNEES INVALIDES                 */        
 /*    007  :  METHODE CONSULT_TXT => NUMERO DE TEXTE INVALIDE        */        
 /*    008  :  METHODE MODIF_TXT => DONNEES INVALIDES                 */        
 /*    009  :  METHODE SUPPR_TXT => DONNEES INVALIDES                 */        
 /*    010  :  METHODE EXPLO_TXT => DONNEES INVALIDES                 */        
 /*    011  :  METHODE EXPLO_TXT => NOMBRE D'ITEMS INVALIDE           */        
 /*    012  :  METHODE EXPLO_1P_TXT => NUMERO DE TEXTE NON RENSEIGNE  */        
 /*********************************************************************/        
             /* & interface                 */        
         
 DCL XA2F11 ENTRY;            #####################################################        
 /**********************************************************************        
 *                                                                     *        
 *                        AUTO PRODUCTION                              *        
 *                        +++++++++++++++                              *        
 *                                                                     *        
 *                SAUVEGARDE DES DEVIS VIA INTERNET (DSM88)            *        
 *                =================================                    *        
 * TDMBIE 23.01.02 ECRITURE                                            *        
 * TDMTHO 04.05.06 AJOUT DATE ECHeANCE                                 *        
 * TDMKIP 17.11.08 AJOUT NOHA1AF,NOHA2AF,NOHA1CO,NOHA2CO               *        
 * TDMSOX 10.06.10 NOUVELLES ZONES TARIFS AUTOS WE96                   *        
 *                                                                     *        
 **********************************************************************/        
         
 DCL 1    JA2F11,                           #######################################################        
 /*------------------------- I N P U T -------------------------------*/        
      2   PTRPCB,        
         3 ALTPCB       PTR,           ####################################################        
         3 TABPCB       PTR,           ####################################################        
         3 DSM88PCB     PTR,           ####################################################        
         3 DSM22PCB     PTR,           ####################################################        
         3 DS139PCB     PTR,           ####################################################        
         3 DS133PCB     PTR,           ####################################################        
         3 DSM55PCB     PTR,           ####################################################        
         3 DEU02PCB     PTR,           ####################################################        
      2   INPUT,        
         3 CDTYPOP      CHAR(1),       ################################################        
         3 NOIDDEV      FIXED DEC(11), ##########################################        
         3 NOIDVER     FIXED(3),       ################################################        
         3 CDCMGES     CHAR(08),       ################################################        
         3 CDCMPRO     CHAR(01),       ################################################        
         3 CDSCTRN     CHAR(01),       ################################################        
         3 CDDVTRN     CHAR(01),       ################################################        
         3 CDEVTRN     CHAR(01),       ################################################        
         3 LTOBJOP,        
          4  NOSQINT             CHAR(05), ######################################        
          4  NOSQSUJ             CHAR(05), ######################################        
          4  CDCNTVC             CHAR(03), ######################################        
          4  CDCAC               CHAR(15), ######################################        
          4  CDOPER              CHAR(03), ######################################        
          4  CDPRODU             CHAR(07), ######################################        
          4  CDTYPPR             CHAR(03), ######################################        
          4  CDLETTR             CHAR(03), ######################################        
          4  CDCANAL             CHAR(09), ######################################        
          4  CDTTAPP             CHAR(02), ######################################        
          4  NOSEQRB             CHAR(03), ######################################        
          4  CDSGGES             CHAR(01), ######################################        
          4  CDCOUGE             CHAR(04), ######################################        
          4  CDDEVIS             CHAR(11), ######################################        
          4  CDRSCTL             CHAR(01), ######################################        
      2   DATA,        
         3  NOIDPOL     CHAR(08),      ###############################################        
         3  CDPADIV     CHAR(02),      ###############################################        
         3  CDDRIVE     CHAR(01),      ###############################################        
         3  NOAGTAV     CHAR(06),      ###############################################        
         3  RDMAGIS     CHAR(01),      ###############################################        
         3  VABMACT     CHAR(02),      ###############################################        
         3  VABMSOU     CHAR(02),      ###############################################        
         3  VAMDACT     CHAR(02),      ###############################################        
         3  LTRETAR     CHAR(06),      ###############################################        
         3  CDTYFRA     CHAR(01),      ###############################################        
         3  CDTAXES     CHAR(01),      ###############################################        
         3  CDCOTIS     CHAR(01),      ###############################################        
         3  CDFRACT     CHAR(01),      ###############################################        
         3  CDFORGA     CHAR(01),      ###############################################        
         3  CDPROMO     CHAR(01),      ###############################################        
         3  CDJEENF     CHAR(01),      ###############################################        
         3  CDJEFAM     CHAR(01),      ###############################################        
         3  CDTY2PO     CHAR(01),      ###############################################        
         3  CDSINIS     CHAR(01),      ###############################################        
         3  CDGRPAF     CHAR(07),      ###############################################        
         3  CDTYDEV     CHAR(02),      ###############################################        
         3  CDUSVEH     CHAR(2),       ################################################        
         3  DAEFRJJ     CHAR(2),       ################################################        
         3  DAEFRMM     CHAR(2),       ################################################        
         3  DAEFRAA     CHAR(4),       ################################################        
         3  DAEFAJJ     CHAR(2),       ################################################        
         3  DAEFAMM     CHAR(2),       ################################################        
         3  DAEFAAA     CHAR(4),       ################################################        
         3  CDGAZOI     CHAR(01),      ###############################################        
         3  NBKMPRO     FIXED DEC(3),  ###########################################        
         3  NBJRPRO     FIXED DEC(3),  ###########################################        
         3  NBKMAVH     FIXED DEC(3),  ###########################################        
         3  NBFRDMA     FIXED DEC(3),  ###########################################        
         3  LTREFCL     CHAR(30),      ###############################################        
         3  CDCLS1      PIC'99',       ################################################        
         3  CDCLS2      PIC'99',       ################################################        
         3  CDCLS3      PIC'99',       ################################################        
         3  CDCLS4      PIC'99',       ################################################        
         3  CDCLS5      PIC'99',       ################################################        
         3  CDTYPVH_W   PIC'99999',    #############################################        
         3  JJDEPER     CHAR(02),      ###############################################        
         3  MMDEPER     CHAR(02),      ###############################################        
         3  AADEPER     CHAR(04),      ###############################################        
         3  CDSTART     CHAR(01),      ###############################################        
         3  CDJEUCO     CHAR(01),      ###############################################        
         3  CDUSPRO     PIC'9',        #################################################        
         3  CDTABBM     CHAR(1),       ################################################        
         3  CDTAGAN     CHAR(1),       ################################################        
         3  CDIDSEG     CHAR(1),       ################################################        
         3  CDIDTRF     CHAR(1),       ################################################        
         3  CDASTMC     CHAR(1),       ################################################        
         3  CDHOREC     CHAR(1),       ################################################        
         3  CDCIBCL     CHAR(2),       ################################################        
         3  CDIDPRO     CHAR(3),       ################################################        
         3  NUVSPRO     PIC'99',       ################################################        
         3  CDTYPRO     CHAR(2),       ################################################        
         3  CDGEPRO     CHAR(2),       ################################################        
         3  SIGNAL,        
          4  CDRSAFF     CHAR(01),     ##############################################        
          4  LTNMAFF     CHAR(20),     ##############################################        
          4  LTPRAFF     CHAR(15),     ##############################################        
          4  CDTYPAF     CHAR(01),     ##############################################        
          4  CDLGPOL     CHAR(01),     ##############################################        
          4  NOIDAFF     CHAR(08),     ##############################################        
          4  LTADRAF     CHAR(25),     ##############################################        
          4  NOHA1AF   BIN FIXED(15),  ###########################################        
          4  NOHA2AF     CHAR(04),     ##############################################        
          4  LTLOCAF     CHAR(23),     ##############################################        
          4  CDCPOAF     CHAR(06),     ##############################################        
          4  DANAIJJ     CHAR(02),     ##############################################        
          4  DANAIMM     CHAR(02),     ##############################################        
          4  DANAIAA     CHAR(04),     ##############################################        
          4  CDRSCCO     CHAR(01),     ##############################################        
          4  LTNOMCO     CHAR(20),     ##############################################        
          4  LTPRECO     CHAR(15),     ##############################################        
          4  LTADRCO     CHAR(30),     ##############################################        
          4  NOHA1CO   BIN FIXED(15),  ###########################################        
          4  NOHA2CO     CHAR(04),     ##############################################        
          4  LTLOCCO     CHAR(23),     ##############################################        
          4  CDCPOCO     CHAR(06),     ##############################################        
          4  DANCOJJ     CHAR(02),     ##############################################        
          4  DANCOMM     CHAR(02),     ##############################################        
          4  DANCOAA     CHAR(04),     ##############################################        
         3  VEHIC,        
          4  LTMARVH    CHAR(15),      ###############################################        
          4  CDEURTX    CHAR(07),      ###############################################        
          4  ANCSTVH    CHAR(04),      ###############################################        
          4  CDCATVH    CHAR(03),      ###############################################        
          4  NUPUIVH     CHAR(03),     ##############################################        
          4  NUCYLVH     CHAR(05),     ##############################################        
          4  NBPRTAV     CHAR(04),     ##############################################        
          4  NBPRTAR     CHAR(04),     ##############################################        
          4  VACATVH     CHAR(09),     ##############################################        
          4  VAACTVH     CHAR(09),     ##############################################        
          4  VAOBJVH     CHAR(05),     ##############################################        
          4  NUPDSVH     CHAR(04),     ##############################################        
          4  VAACCVH     CHAR(09),     ##############################################        
          4  LTPLQVH     CHAR(12),     ##############################################        
          4  LTCHAVH     CHAR(17),     ##############################################        
          4  CDALARM     CHAR(1),      ###############################################        
          4  NBKMCPT     FIXED DEC(11),#########################################        
          4  CDTARJE     CHAR(1),      ###############################################        
          4  CDFRANS     CHAR(2),      ###############################################        
          4  TBDEVGA(10),              #######################################################        
           5  CDTYGAR    CHAR(03),     ##############################################        
           5  CDTFGAR    CHAR(02),     ##############################################        
           5  NUVSTRF    PIC'99',      ###############################################        
           5  PRBASGA    FIXED DEC(9), ##########################################        
           5  NUMJDIV  DEC FIXED(5,2), ##########################################        
           5  NUMJLEA  DEC FIXED(3),   ############################################        
           5  NUMJPDG  DEC FIXED(3),   ############################################        
           5  NURDCLI  DEC FIXED(3),   ############################################        
           5  NURDPLU  DEC FIXED(3),   ############################################        
           5  NURDFRA  DEC FIXED(3),   ############################################        
           5  NURDLOI  DEC FIXED(3),   ############################################        
           5  NURDGAZ  DEC FIXED(3),   ############################################        
           5  NURDDIV  DEC FIXED(5,2), ##########################################        
          4  CDOLDVH   CHAR(1),        #################################################        
          4  CDECOVH   CHAR(2),        #################################################        
         3  ACCES(14),        
          4 LTACCSP  CHAR(30),         #################################################        
          4 VAACCSP  DEC FIXED(7),     #############################################        
         3  REMORQUE,        
          4  CDCATRE     CHAR(03),     ##############################################        
          4  LTMARRE     CHAR(15),     ##############################################        
          4  ANCSTRE     CHAR(04),     ##############################################        
          4  VACATRE     CHAR(09),     ##############################################        
          4  VAACTRE     CHAR(09),     ##############################################        
          4  NUPDSRE     CHAR(04),     ##############################################        
          4  TBGARRE(09),              #######################################################        
           5  CDTYGAR    CHAR(03),     ##############################################        
           5  CDTFGAR    CHAR(02),     ##############################################        
           5  NUVSTRF    PIC'99',      ###############################################        
           5  PRBASGA    FIXED DEC(9), ##########################################        
         3  ANTEC,        
          4  CDINTOX     CHAR(01),     ##############################################        
          4  CDIVRES     CHAR(1),      ###############################################        
          4  CDFUITE     CHAR(01),     ##############################################        
          4  NBDECPE     PIC'99' ,     ##############################################        
          4  NBSINRC     PIC'9',       ################################################        
          4  NBSINDM     PIC'9',       ################################################        
          4  NBSINVO     PIC'9',       ################################################        
          4  CDPRASS     CHAR(1),      ###############################################        
          4  NOIDCMP     CHAR(4),      ###############################################        
          4  NOPOCMP     CHAR(12),     ##############################################        
          4  CDPORES     CHAR(1),      ###############################################        
          4  CDIDRES     CHAR(1),      ###############################################        
          4  CDMOTAN     CHAR(2),      ###############################################        
          4  ECRCDEC     CHAR(2),      ###############################################        
         3 JEUNECO(3),        
          4 LTNMCON  CHAR(20),         ##################################################        
          4 LTPRCON  CHAR(15),         ##################################################        
          4 DATENAI  DEC FIXED(7),     ##############################################        
          4 DAPERMI  DEC FIXED(5),     ##############################################        
          4 CDQUACO  CHAR(01),         ##################################################        
          4 CDSUPPL  CHAR(01),         ##################################################        
         3  DAECHCT  CHAR(04),         ##################################################        
 /*------------------------- O U T P U T -----------------------------*/        
      2   OUTPUT,                     ##############################################################        
         3  CDRTPGM     CHAR (6),      ###############################################        
         3  DBPTR       PTR,           ####################################################        
         3  LASTDLI     CHAR (10);     ##############################################        
         
 DCL XS1038 ENTRY;         ################################################        
 /********************************************************************/        
 /* EURO=YES AUTHOR=TDMLEM/LEMAIRE...... INTERV=TDMLEM/LEMAIRE.......*/        
 /********************************************************************/        
         
 DCL  1   JS1003,        
       2  CDRTPGM    CHAR(2),         ##################################################        
       2  NOIDAFO    CHAR(7),         ##################################################        
       2  NOIDAFN    CHAR(7);         ##################################################        
           /* TRANSF.NOIDAFF NEW->OLD */        
         
 DCL KGI011 ENTRY;            #####################################################        
 /*********************************************************************/        
 /* INTERFACE : KGI011J POUR LES METHODES DE TRAITEMENT DES DATES     */        
 /*                                                                   */        
 /*$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$ */        
 /*$                  ATTENTION                                     $ */        
 /*$                  =========                                     $ */        
 /*$LA NOTION DE JOURS FERIES EST LIEE AUX JOURS FERIES BANCAIRES   $ */        
 /*$  SAUF SI TBEGCOD(1) = 1 (IL Y A QUELQUES PONTS BANCAIRES EN +) $ */        
 /*$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$ */        
 /*                                                                   */        
 /*********************************************************************/        
         
 DCL 1 KGI011J,        
      2 INPUT        CHAR (200),    ################################################        
      2 INPUT2       CHAR (150),    ################################################        
      2 OUTPUT       CHAR (400);    ################################################        
         
 /*********************************************************************/        
 /*                                                                   */        
 /*             REDEFINITION EN INPUT                                 */        
 /*                                                                   */        
 /*********************************************************************/        
         
 DCL 1 KGI011J_RI BASED(ADDR(KGI011J.INPUT)),        
    /* ----- FORMAT D'ENTREE OBLIGATOIRE ---- */        
    /* CHAMPS PERMETTANT LE TRAITEMENT SUIVANT LA METHODE */        
      2 CDFMTDA          CHAR (20),   ############################################        
         
      2 NBJJCAL          FIXED (05),  ###########################################        
      2 NBMMCAL          FIXED (05),  ###########################################        
      2 NBAACAL          FIXED (03),  ###########################################        
         
      2 AAPIVOT          PIC '9999',  ###########################################        
                                      /* DU SIECLE                   */        
         
      2 CDLGTRN          PIC '9',     ##############################################        
         
      2 TBEGCOD (32)     BIT (01),    #############################################        
           /* BIT  1 : 0 = UTILISATION JOUR FERIE BANCAIRE           */        
           /*          1 = UTILISATION JOUR FERIE NON BANCAIRE       */        
           /* BIT  2 : 0 = UTILISATION JOUR FERIE EN INPUT           */        
           /*          1 = UTILISATION JOUR FERIE DATE CIBLE         */        
         
      2 NBSEM_P6         PIC '(06)9', ##########################################        
         
      2 JJJJULIEN_P3     PIC '(03)9', ##########################################        
      2 AAAAJULIEN_P4    PIC '(04)9', ##########################################        
         
    /* LISTE DES FORMATS DE DATES POSSIBLE */        
      2 JJMMAA_P6        PIC '(06)9',        
      2 AAMMJJ_P6        PIC '(06)9',        
      2 SAAMMJJ_P7       PIC '(07)9',        
      2 SJJMMAA_P7       PIC '(07)9',        
      2 JJMMAAAA_P8      PIC '(08)9',        
      2 AAAAMMJJ_P8      PIC '(08)9',        
         
      2 JJMMAA_C6        CHAR (06),        
      2 AAMMJJ_C6        CHAR (06),        
      2 SAAMMJJ_C7       CHAR (07),        
      2 SJJMMAA_C7       CHAR (07),        
      2 JJMMAAAA_C8      CHAR (08),        
      2 AAAAMMJJ_C8      CHAR (08),        
         
      2 DATETIME_C17     CHAR (17),   ##################################        
         
      2 JJ_MM_AAAA_C10   CHAR (10),   ########################################        
         
      2 FILLER           CHAR (39);        
         
 DCL 1 KGI011J_RI2 BASED(ADDR(KGI011J.INPUT2)),        
    /* ----FORMAT D'ENTREE OPTIONNEL - POUR LE CALCUL ENTRE 2 DATES */        
      2 JJMMAA_P6        PIC '(06)9',        
      2 AAMMJJ_P6        PIC '(06)9',        
      2 SAAMMJJ_P7       PIC '(07)9',        
      2 SJJMMAA_P7       PIC '(07)9',        
      2 JJMMAAAA_P8      PIC '(08)9',        
      2 AAAAMMJJ_P8      PIC '(08)9',        
         
      2 JJMMAA_C6        CHAR (06),        
      2 AAMMJJ_C6        CHAR (06),        
      2 SAAMMJJ_C7       CHAR (07),        
      2 SJJMMAA_C7       CHAR (07),        
      2 JJMMAAAA_C8      CHAR (08),        
      2 AAAAMMJJ_C8      CHAR (08),        
         
      2 DATETIME_C17     CHAR (17),   ##################################        
         
      2 JJ_MM_AAAA_C10   CHAR (10),   ########################################        
         
      2 FILLER           CHAR (39);        
         
         
 /*********************************************************************/        
 /*                                                                   */        
 /*             REDEFINITION EN OUTPUT                                */        
 /*                                                                   */        
 /*********************************************************************/        
         
 DCL 1 KGI011J_RO BASED(ADDR(KGI011J.OUTPUT)),        
    /* FORMAT DE SORTIE */        
      /* RESULTAT DU NBR JOURS OUVRABLES - NBR JOURS NON OUVRABLES   */        
      /*  ENTRE 2 DATES                                              */        
      2 NBJJOUV          PIC '(05)9', ##########################################        
      2 NBJJNOUV         PIC '(05)9', ##########################################        
         
      /* RESULT. DIFF ENTRE 2 DATES  */        
      2 NBJJJJJ          PIC '(05)9', ##########################################        
      2 NBJJRES          PIC '(02)9', ##########################################        
      2 NBMMRES          PIC '(02)9', ##########################################        
      2 NBAARES          PIC '(04)9', ##########################################        
         
      2 CDCOMPARE        CHAR (01),   ############################################        
                                      /* '2' -> DATE2 > DATE1        */        
                                      /* '=' -> DATE1 = DATE2        */        
         
      2 BOVALID_DATE     BIT (01),        
          /* '1'B : SI 'VALID_DATE_ECH' ALORS DATE1 <= DATE JOUR     */        
          /*        SI 'VALID_DATE_POST' ALORS DATE1 >= DATE JOUR    */        
          /* '0'B : SI 'VALID_DATE_ECH' ALORS DATE1 >  DATE JOUR     */        
          /*        SI 'VALID_DATE_POST' ALORS DATE1 <  DATE JOUR    */        
         
      /* FORMATAGE POUR DATE DU JOUR */        
      2 DATEHEURE_C18    CHAR (18),   ############################################        
      2 DATETIME_C17     CHAR (17),   ############################################        
      2 HEURE_F5         FIXED (05),  ###########################################        
         
      2 HHHMISS999_P10,               ########################################################        
       3 HHH             PIC '(03)9', ##################        
       3 MI              PIC '(02)9', ##################        
       3 SS              PIC '(02)9', ##################        
       3 MIL             PIC '(03)9', ##################        
         
    /* FORMAT DE SORTIE TOUJOURS ASSIGNE */        
    /* RENSEIGNEMENT SUR LA DATE EN INPUT */        
      2 CDTYPEJJ         CHAR (01),        
          /* '1' : SI LA DATE EN INPUT EST UN JOUR FERIE OU WEEK-END */        
          /* '2' : SI LA DATE EN INPUT EST UN JOUR OUVRABLE          */        
          /* '3' : SI LA DATE EN INPUT EST HORS LIMITE TABLEAU FERIE */        
         
      2 BOFINMOIS        BIT (01),    #############################################        
                                      /* '0'B SI DATE NON FIN DE MOIS*/        
         
      2 NBWEEK           PIC '(02)9', ##########################################        
      2 NOAAAA           PIC '(04)9', ##########################################        
         
    /* RENSEIGNEMENT SUR LA DATE EN OUTPUT */        
      2 JJJJULIEN_P3     PIC '(03)9', ##########################################        
      2 AAAAJULIEN_P4    PIC '(04)9', ##########################################        
         
      2 IDJOUR           PIC '(01)9', ##########################################        
                                      /* DIMANCHE = 1 - SAMEDI = 7   */        
      2 LTFILLER         CHAR (08) VAR, ########################################        
      2 LTMOIS           CHAR (09) VAR, ########################################        
      2 LTDATE           CHAR (30) VAR, ########################################        
         
      2 JJMMAA_P6        PIC '(06)9',        
      2 AAMMJJ_P6        PIC '(06)9',        
      2 SAAMMJJ_P7       PIC '(07)9',        
      2 SJJMMAA_P7       PIC '(07)9',        
      2 JJMMAAAA_P8      PIC '(08)9',        
      2 AAAAMMJJ_P8      PIC '(08)9',        
         
      2 JJMMAA_C6        CHAR (06),        
      2 AAMMJJ_C6        CHAR (06),        
      2 SAAMMJJ_C7       CHAR (07),        
      2 SJJMMAA_C7       CHAR (07),        
      2 JJMMAAAA_C8      CHAR (08),        
      2 AAAAMMJJ_C8      CHAR (08),        
         
      2 S_P1             PIC '(01)9',        
      2 JJ_P2            PIC '(02)9',        
      2 MM_P2            PIC '(02)9',        
      2 AA_P2            PIC '(02)9',        
      2 SAA_P3           PIC '(03)9',        
      2 AAAA_P4          PIC '(04)9',        
      2 JJ_MM_AA_P8      PIC '99/99/99',        
      2 JJ_MM_AAAA_P10   PIC '99/99/9999',        
         
      2 JJ_MM_AAAA_C10   CHAR (10),        #############################################        
         
      2 LTJOUR           CHAR (15) VAR, ########################################        
         
      2 FILLER           CHAR (115);        
         
         
 /********************************************************************/        
 /*                                                                  */        
 /* METHODE :                                                        */        
 /*    - VALID_DATE            : VALIDATION D'UNE DATE               */        
 /*    - VALID_DATE_ECH        : VALIDATION D'UNE DATE <= A DATE JOUR*/        
 /*    - VALID_DATE_POST       : VALIDATION D'UNE DATE >= A DATE JOUR*/        
 /*    - FORMAT_DATE           : FORMATAGE DES DATES                 */        
 /*                                                                  */        
 /*    - DIFF_2_DATES_365      : CALCUL NOMBRE DE JOURS ENTRE 2 DATES*/        
 /*                            :  SANS LES ANNEES BISSEXTILES        */        
 /*    - DIFF_2_DATES_366      : CALCUL NOMBRE DE JOURS ENTRE 2 DATES*/        
 /*                            :  AVEC LES ANNEES BISSEXTILES        */        
 /*                            :  + NBR ANNEES, NBR MOIS, NBR JOURS  */        
 /*    - DIFF_2_DATES_372      : CALCUL NOMBRE DE JOURS ENTRE 2 DATES*/        
 /*                            :  AVEC TOUS LES MOIS A 31 JOURS      */        
 /*    - DIFF_2_DATES_HEURES   : CALCUL DU NOMBRE D'HEURES, MINUTES, */        
 /*                            :  SECONDES ENTRE 2 DATES             */        
 /*                                                                  */        
 /*    - DIFF_2_DATES_OUV      : CALCUL DU NOMBRE DE JOURS OUVRABLES */        
 /*                            :  ET NON OUVRABLES ENTRE 2 DATES     */        
 /*                            :  DU LUNDI AU VENDREDI INCLUS        */        
 /*                            :  DATES LIMITES INCLUSES             */        
 /*                                                                  */        
 /*    - DIFF_2_DATES_OUV_SAM  : CALCUL DU NOMBRE DE JOURS OUVRABLES */        
 /*                            :  ET NON OUVRABLES ENTRE 2 DATES     */        
 /*                            :  DU LUNDI AU SAMEDI INCLUS          */        
 /*                            :  DATES LIMITES INCLUSES             */        
 /*                                                                  */        
 /*    - DATE_PLUS_DUREE       : AJOUT NBR JOURS/MOIS/ANNEE A 1 DATE */        
 /*    - DATE_MOINS_DUREE      : ENLEVE NBR JOURS/MOIS/ANNEE A 1 DATE*/        
 /*                                                                  */        
 /*    - DATE_DU_JOUR          : RENVOI LA DATE DU JOUR              */        
 /*                                                                  */        
 /*    - DATE_EN_JOUR_JULIEN   : CALCUL DU JOUR JULIEN SUIVANT DATE  */        
 /*    - JOUR_JULIEN_EN_DATE   : CALCUL LA DATE SUIVANT JOUR JULIEN  */        
 /*                                                                  */        
 /*    - NUMERO_SEMAINE        : CALCUL LE NUMERO DE LA SEMAINE      */        
 /*                                                                  */        
 /*    - DATE_SEMAINE          : CALCUL DU LUNDI DE LA SEMAINE       */        
 /*                            : DEMANDEE                            */        
 /*                                                                  */        
 /*    - VERIF_DATE_FIN_MOIS   : VERIFICATION D'UNE DATE FIN DE MOIS */        
 /*    - AVOIR_DATE_FIN_MOIS   : AVOIR UN DATE DE FIN DE MOIS        */        
 /*                                                                  */        
 /*    - COMPARE_DATES         : COMPARAISON ENTRE 2 DATES           */        
 /*                                                                  */        
 /*    - DATE_PLUS_JJ_OUV      : AJOUT NBR JOURS OUVRABLES A UNE DATE*/        
 /*    - DATE_MOINS_JJ_OUV     : ENLEVE NBR JOURS OUVRABLES A UNE DATE*/        
 /*                                                                  */        
 /* ATTENTION :                                                      */        
 /*    TOUTES METHODES VALIDENT LA DATE D'ENTREE                     */        
 /*    TOUTES METHODES RENVOIENT LE FORMATAGE DE LA DATE             */        
 /*         - SOIT D'ENTREE                                          */        
 /*         - SOIT DE SORTIE EN CAS DE CALCUL                        */        
 /*         - SOIT LA PREMIERE DATE D'ENTREE POUR LES COMPARAISONS   */        
 /*                                                                  */        
 /* NB :                                                             */        
 /*    LES METHODES 'DIFF_2_DATES_XXX' DONNENT COMME RESULTAT        */        
 /*    1 JOUR ENTRE LE 1 MAI ET LE 2 MAI                             */        
 /*                                                                  */        
 /********************************************************************/        
 /*                                                                  */        
 /* MESSAGE D'ERREUR (KWB001.CDRTPGM = $LTNMPRJ !! 'XXX')            */        
 /*------------------------------------------------------------------*/        
 /*                                                                  */        
 /*    001 : LA METHODE N'EXISTE PAS                                 */        
 /*    002 : LE FORMAT N'EXISTE PAS                                  */        
 /*    003 : DATE NON CONFORME                                       */        
 /*    004 : CODE INCORRECT - INTERNE AU PROGRAMME                   */        
 /*    005 : ANNEE DIFFERENTE DE 18XX, 19XX, 20XX OU 21XX            */        
 /*           (VALABLE UNIQUEMENT POUR LA DATE EN 6 POSITIONS)       */        
 /*    006 : DATE INVALIDE                                           */        
 /*    007 : NOMBRE DE JOURS INCORRECT                               */        
 /*    008 : ANNEE INCORRECTE                                        */        
 /*    009 : JOUR JULIEN INCORRECT                                   */        
 /*    010 : ANNEE NON ENCODEE DANS TABLEAU JOURS FERIES             */        
 /*    011 : DATE ENCODEE OU DATE RESULTAT EST SOIT INFERIEURE       */        
 /*           A 1800 SOIT SUPERIEURE A 2799                          */        
 /*    012 : NUMERO DE LA SEMAINE INFERIEURE A 1 OU SUPERIEURE A 53  */        
 /*    013 : PAS DE COMPARAISON ENTRE 2 DATES EN 6 POSITIONS         */        
 /*                                                                  */        
 /********************************************************************/        
         
         
 DCL KGI012 ENTRY;            #####################################################        
 /*********************************************************************/        
 /* INTERFACE : KGI012J POUR LES METHODES DE TRAITEMENT DES MONTANTS  */        
 /*********************************************************************/        
 /*********************************************************************/        
 /* ATTENTION : TDMSLE - LOGIQUE PREVUE EN FRANCAIS UNIQUEMENT        */        
 /* 06/06/2002            AU NIVEAU DU MONTANT EN LETTRE              */        
 /*********************************************************************/        
         
 DCL 1 KGI012J,        
      2 INPUT        CHAR (300),    ################################################        
      2 OUTPUT       CHAR (600);    ################################################        
         
 /*********************************************************************/        
 /*                                                                   */        
 /*             REDEFINITION EN INPUT                                 */        
 /*                                                                   */        
 /*********************************************************************/        
         
 DCL 1 KGI012J_RI BASED(ADDR(KGI012J.INPUT)),        
    /* ----- FORMAT D'ENTREE OBLIGATOIRE ---- */        
     /* CHAMPS PERMETTANT LE TRAITEMENT SUIVANT LA METHODE */        
      2 CDFMTMT     CHAR (20),     #################################################        
      2 MTIN_F15    FIXED (15),    ################################################        
         
      2 LTIN_C25    CHAR (25) VAR, #############################################        
                                   /*  + EVENTUELLEMENT              */        
                                   /*    + LA VIRGULE                */        
                                   /*    + LA DEVISE (AVANT/APRES)   */        
                                   /*    + LE SIGNE  (AVANT/APRES)   */        
         
      2 NBDECIN     FIXED (02),    ################################################        
                                   /*  OBLIGATOIRE                   */        
         
      2 CDMSKOUT    CHAR (11),     #################################################        
                                   /*  EN SORTIE                     */        
         
      2 CDDVTRN     CHAR (03),     #################################################        
      2 CDLGTRN     PIC '9',       ###################################################        
         
      2 NBLENOUT    FIXED (03),    ################################################        
                                   /*  MAX 26 POUR LE MASQUE         */        
                                   /*  MIN 20 POUR LES LETTRES       */        
                                   /*   -> SEPARATEUR APRES 'NBLENOUT*/        
                                   /* SI =0 ALORS UTILISATION DE LA  */        
                                   /*   TAILLE NECESSAIRE            */        
         
      2 TBEGCOD (32)     BIT (01),    #############################################        
           /*   BIT  1 : VALABLE POUR LA VALIDATION ET LE FORMATAGE  */        
           /*             MAIS TOUJOURS UNE VIRGULE EN SORTIE        */        
           /*   BIT  1 : 0 = MONTANT AVEC VIRGULE COMME SEPARATEUR   */        
           /*                 DE DECIMALE                            */        
           /*            1 = MONTANT AVEC POINT OU VIRGULE           */        
           /*                 COMME SEPARATEUR DE DECIMALE           */        
           /*                                                        */        
           /*   BIT  2 : VALABLE UNIQUEMENT POUR LE FORMATAGE        */        
           /*   BIT  2 : 0 = NBDECIN = NBR DECIMALE EN ENTREE        */        
           /*                 OBLIGATOIRE                            */        
           /*            1 = NBDECIN = NBR DECIMALE EN ENTREE        */        
           /*                 MAXIMALE ENCODEE                       */        
           /*                                                        */        
           /*   BIT  3 : VALABLE UNIQUEMENT POUR LE FORMATAGE        */        
           /*   BIT  3 : 0 = VALEUR MONETAIRE SANS CHANGEMENT        */        
           /*                 MTMNT_F15 - SANS MODIF NOMBRE DECIMALE */        
           /*                 ENCODE                                 */        
           /*            1 = VALEUR MONETAIRE EN ENTIER MTMNT_F15    */        
           /*                 - AVEC MODIF NOMBRE DECIMALE ENCODE    */        
           /*                                                        */        
           /*   BIT  4 : VALABLE POUR LE FORMATAGE DES MONTANTS NULS */        
           /*             AVEC P OU B POUR LA POSITION 5             */        
           /*   BIT  4 : 0 = MONTANT NUL -> AFFICHAGE DE BLANCS      */        
           /*            1 = MONTANT NUL -> AFFICHAGE 0,XX SUIVANT   */        
           /*                 LE NOMBRE DE CHIFFRES APRES LA VIRGULE */        
           /*                                                        */        
           /*   BIT  4 : VALABLE POUR LE FORMATAGE DES MONTANTS NULS */        
           /*             AVEC Z POUR LA POSITION 5                  */        
           /*   BIT  4 : 0 = MONTANT NUL -> AFFICHAGE 0,XX SUIVANT   */        
           /*                 LE NOMBRE DE CHIFFRES APRES LA VIRGULE */        
           /*            1 = MONTANT NUL -> AFFICHAGE DE BLANCS      */        
           /*                                                        */        
           /*   BIT  5 : VALABLE ACCEPTATION MONTANT POSITIF         */        
           /*             UNIQUEMENT                                 */        
           /*   BIT  5 : 0 = MONTANT POSITIF ET NEGATIF ACCEPTE      */        
           /*            1 = MONTANT POSITIF UNIQUEMENT              */        
           /*                                                        */        
           /*   BIT  6 : VALABLE ACCEPTATION OU REFUS MONTANT        */        
           /*             NUL                                        */        
           /*   BIT  6 : 0 = MONTANT NUL ACCEPTE                     */        
           /*            1 = MONTANT NUL REFUSE                      */        
           /*                                                        */        
           /*   BIT  7 : VALABLE ACCEPTATION OU REFUS MONTANT        */        
           /*             .99 AU LIEU DE 0.99                        */        
           /*   BIT  7 : 0 = MONTANT 0.99 OBLIGATOIRE                */        
           /*            1 = MONTANT .99 ET 0.99 ACCEPTE             */        
           /*                                                        */        
           /*   BIT  8 : SUPPRESSION DU 1ER SEPARATEUR (EXTREME GCHE)*/        
           /*           QUAND DEPASSEMENT D'UN CHIFFRE (ERREUR '006')*/        
           /*           EX : 1234.567.890,12 AU LIEU DE              */        
           /*             1.234.567.890,12                           */        
           /*           MASQUE = $....12V02$                         */        
           /*          ATTENTION : UNIQUEMENT AVEC SEPARATEUR        */        
           /*   BIT  8 : 0 = MONTANT 1.234.567.890,12 ERREUR CLASSIQ.*/        
           /*            1 = MONTANT 1234.567.890,12 AUCUNE ERREUR   */        
           /*                                                        */        
         
      2 FILLER      CHAR (222);        
         
 /*********************************************************************/        
 /*                                                                   */        
 /*             REDEFINITION EN OUTPUT                                */        
 /*                                                                   */        
 /*********************************************************************/        
         
 DCL 1 KGI012J_RO BASED(ADDR(KGI012J.OUTPUT)),        
    /* FORMAT DE SORTIE */        
      2 LTMNT_C26   CHAR (26) VAR, #############################################        
                                   /*  CADRAGE A GAUCHE SUIVANT      */        
                                   /*  LA LONG. DE 'NBLENOUT'        */        
         
      2 MTMNT_F15   FIXED (15),    ################################################        
      2 NBDECOUT    FIXED (02),    ################################################        
                                   /*  AVEC LE FIXED (15)            */        
         
      2 LTMTLET_C250 CHAR (250) VAR, ###########################################        
         
      2 FILLER      CHAR (310);        
         
         
 /********************************************************************/        
 /*                                                                  */        
 /* METHODE :                                                        */        
 /*    - VALID_MONTANT         : VALIDATION DU MONTANT               */        
 /*                                                                  */        
 /*    - FORMATAGE             : FORMATAGE SUIVANT LE MASQUE         */        
 /*                            :  (UN SEUL FORMAT PAR MASQUE EN      */        
 /*                            :   SORTIE)                           */        
 /*                                                                  */        
 /*    - CONVERT_EN_LETTRES    : CONVERSION D'UN MONTANT EN LETTRES  */        
 /*                                                                  */        
 /* ATTENTION :                                                      */        
 /*    TOUTES METHODES VALIDENT LE MONTANT EN ENTREE                 */        
 /*    TOUTES METHODES DOIVENT ALIMENTER 'NBDECIN'                   */        
 /*    UTILISATION DU CODE DEVISE VENANT DE IEU001 SI CDDVTRN NON    */        
 /*        INITIALISE                                                */        
 /*                                                                  */        
 /********************************************************************/        
 /********************************************************************/        
 /* MASQUE CDMSKOUT :                                                */        
 /*                                                                  */        
 /*    - POS 1    : $ TOUJOURS                                       */        
 /*    - POS 2    : DEVISE                                           */        
 /*                   -> G : AVEC DEVISE A GAUCHE DU MONTANT         */        
 /*                   -> D : AVEC DEVISE A DROITE DU MONTANT         */        
 /*                   -> B : SANS DEVISE                             */        
 /*    - POS 3,4  : SIGNE DEVANT OU DERRIERE LE MONTANT              */        
 /*                   -> SG : TOUJOURS LE SIGNE A GAUCHE DU MONTANT  */        
 /*                   -> SD : TOUJOURS LE SIGNE A DROITE DU MONTANT  */        
 /*                   -> -G : AFFICHE - A GAUCHE DU MONTANT SI < 0   */        
 /*                   -> -D : AFFICHE - A DROITE DU MONTANT SI < 0   */        
 /*                   -> BB : N'AFFICHE JAMAIS LE SIGNE              */        
 /*    - POS 5    : PRESENTATION DES MONTANTS POUR LES ZEROS NON     */        
 /*               :  SIGNIFICATIFS ET LES SEPARATEURS DE MILLIERS    */        
 /*                   -> Z : AFF. 0 SI MONTANT NUL - SANS SEPARATEUR */        
 /*                   -> * : AFF. * SI MONTANT NUL - SANS SEPARATEUR */        
 /*                        :  TOUJOURS SANS SIGNE FORCE SIGNE = AA   */        
 /*                   -> P : AFFICHE DES . COMME SEPARATEUR          */        
 /*                        :  TOUJOURS DES BLANCS SI MONTANT NUL     */        
 /*                   -> B : AFFICHE DES BLANCS COMME SEPARATEUR     */        
 /*                        :  TOUJOURS DES BLANCS SI MONTANT NUL     */        
 /*    - POS 6,7  : NOMBRE DE CARACTERES AVANT LA VIRGULE            */        
 /*               :  Y COMPRIS LES . OU LES ESPACES                  */        
 /*               :  MAX 19 CARACTERES - MINIMUM 1 CARACTERE         */        
 /*    - POS 8    : V TOUJOURS                                       */        
 /*    - POS 9,10 : NOMBRE DE CHIFFRES APRES LA VIRGULE (MAX (14)    */        
 /*    - POS 11   : $ TOUJOURS                                       */        
 /*                                                                  */        
 /********************************************************************/        
 /********************************************************************/        
 /*                                                                  */        
 /* MESSAGE D'ERREUR (JWB001.CDRTPGM = $LTNMPRJ !! 'XXX')            */        
 /*------------------------------------------------------------------*/        
 /*                                                                  */        
 /*    001 : LA METHODE N'EXISTE PAS                                 */        
 /*    002 : LE CODE DEVISE N'EXISTE PAS                             */        
 /*    003 : LE MASQUE INCORRECT                                     */        
 /*    004 : CODE INCORRECT - INTERNE AU PROGRAMME                   */        
 /*    005 : MONTANT INVALIDE                                        */        
 /*    006 : LA ZONE 'ENTIER' DU MASQUE EST TROP PETITE POUR         */        
 /*        :  CONTENIR LE MONTANT                                    */        
 /*    007 : LA ZONE RECEPTRICE EST TROP PETITE                      */        
 /*    008 : LA TAILLE DU MASQUE EST > A LA TAILLE DE LA VARIABLE    */        
 /*        :  DE RECEPTION                                           */        
 /*    009 : LA NOMBRE DE DECIMALE EST < A 0 OU > 14                 */        
 /*    010 : LA TAILLE DONNEE EST TROP PETITE                        */        
 /*    011 : LE CODE LANGUE DEMANDE N'EST PAS TRAITE                 */        
 /*    012 : LE NOMBRE DE DECIMALE EST TROP GRAND                    */        
 /*    013 : LE CODE FORMAT N'EXISTE PAS                             */        
 /*    014 : LE NBR DECIMALE ATTENDU NE CORRESPOND PAS AU NBR RECU   */        
 /*    015 : LE MONTANT EST NEGATIF - REFUSE                         */        
 /*    016 : LE MONTANT EST NUL - REFUSE                             */        
 /*                                                                  */        
 /********************************************************************/        
         
         
 DCL KGI006 ENTRY;            #####################################################        
 /***********************************************************/        
 /* INTERFACE DU SERVICE DES TABLES                         */        
 /***********************************************************/        
         
 DCL 1  KGI006J,        
      2  PTRPCB,        
       3 DEU02PCB            PTR,        
       3 DBTABPCB            PTR,        
       3 DBLOG1PCB           PTR,        
       3 DBLOG2PCB           PTR,        
         
      2  INPUT,        
       3 TBTXCOD     CHAR (04),     #################################################        
       3 TBTXA01     CHAR (20),     #################################################        
       3 TBTXA02     CHAR (20),     #################################################        
       3 CDDFSEG     CHAR (08),     #################################################        
       3 CDDFSE2     CHAR (08),     #################################################        
       3 GITAB       PTR,           #######################################################        
       3 GISTAB      PTR,           #######################################################        
       3 DBTABLE,        
        4 LTSGTAB     CHAR(08),     ########################################        
        4 LTSGSTAB    CHAR(08),     ########################################        
        4 CDDFTAB     CHAR(08),     ########################################        
       3 EXPLORE,        
        4 NBITEXP    BIN FIXED,     #################################################        
       3 FILLER      CHAR(100),     #################################################        
         
      2 OUTPUT,        
       3 NBELMTB     BIN FIXED,     #################################################        
       3 GITAB       PTR,           #######################################################        
       3 GISTAB      PTR;           #######################################################        
         
 /* RELEVE DES DIFFERENTES METHODES D'ACCES AU SERVICE          */        
 /* LES PARAMETRES   TBTXCOD   ET   CDDFSEG   SONT OBLIGATOIRES */        
 /* POUR TOUTES LES METHODES                                    */        
         
  /*******************************************************************/        
  /* METHODE              * ENTREE                  * SORTIE         */        
  /*******************************************************************/        
  /*- LECTURE TABLE AVEC CLE                                         */        
  /* READ_TAB             * TBTXA01                 * GITAB(1)       */        
  /*                      *                         *                */        
  /*- LECTURE TABLE A PARTIR DE LA CLE (>=)                          */        
  /* READ_TAB_FIRST       *-                        * GITAB(1)       */        
  /*                      *-TBTXA01                 * GITAB(1)       */        
  /*                      *                         *                */        
  /*- LECTURE TABLE AVEC BLOCAGE DU SEGMENT                          */        
  /* READ_TAB_HOLD        * TBTXA01                 * GITAB(1)       */        
  /*                      *                         *                */        
  /*- LECTURE SOUS-TABLE AVEC CLES TABLE & SOUS-TABLE                */        
  /* READ_STAB            * TBTXA01/TBTXA02         * GISTAB(1)      */        
  /*                      *                         *                */        
  /*- LECTURE SOUS-TABLE AVEC CLE SOUS-TABLE-POSITIONNEMENT EFFECTUE */        
  /* READ_STAB_POSIT      * TBTXA02                 * GISTAB(1)      */        
  /*                      *                         *                */        
  /*- LECTURE TABLE ET SOUS-TABLE AVEC CLES                          */        
  /* READ_BOTH            * TBTXA01/TBTXA02/CDDFSE2 * GITAB(1)/      */        
  /*                      *                         * GISTAB(1)      */        
  /*                      *                         *                */        
  /*- LECTURE TABLE, SEGMENT SUIVANT                                 */        
  /* READ_TAB_NEXT        * TBTXA01                 * GITAB(1)       */        
  /*                      *                         *                */        
  /*- LECTURE SOUS-TABLE, SEGMENT SUIVANT                            */        
  /* READ_STAB_NEXT       * TBTXA01/TBTXA02         * GISTAB(1)      */        
  /*                      *                         *                */        
  /*- LECTURE SOUS-TABLE, SEGMENT SUIVANT (POSITIONNEMENT EFFECTUE)  */        
  /* READ_STAB_NEXT_POSIT *-                        * GISTAB(1)      */        
  /*                      *-TBTXA02                 * GISTAB(1)      */        
  /*                      *                         *                */        
  /*- EXPLORATION TABLE                                              */        
  /* EXPLO_TAB            *-TBTXCOD                 * GITAB(NBELMTB)/*/        
  /*                      *-TBTXA01/NBSEGMT         * NBELMTB        */        
  /*                      *                         *                */        
  /*- EXPLORATION TABLE (SEGMENT SUIVANT)                            */        
  /* EXPLO_TAB_NEXT       * TBTXA01/NBSEGMT         * GITAB(NBELMTB)/*/        
  /*                      *                         * NBELMTB        */        
  /*- EXPLORATION SOUS-TABLE                                         */        
  /* EXPLO_STAB           *-TBTXA01/NBITEXP         *                */        
  /*                      *                         *                */        
  /*- EXPLORATION SOUS-TABLE (SEGMENT SUIVANT)                       */        
  /* EXPLO_STAB_NEXT      *                         *                */        
  /*                      *                         *                */        
  /*- CREATION TABLE                                                 */        
  /* ISRT_TAB             * GITAB                   *                */        
  /*                      *                         *                */        
  /*- CREATION SOUS-TABLE                                            */        
  /* ISRT_STAB            * TBTXA01/GISTAB          *                */        
  /*                      *                         *                */        
  /*- CREATION SOUS-TABLE (POSITIONNEMENT TABLE DEJA EFFECTUE)       */        
  /* ISRT_STAB_POSIT      * GISTAB                  *                */        
  /*                      *                         *                */        
  /*- MODIFICATION TABLE                                             */        
  /* REPL_TAB             * TBTXA01/GITAB           *                */        
  /*                      *                         *                */        
  /*- MODIFICATION SOUS-TABLE                                        */        
  /* REPL_STAB            * TBTXA01/TBTXA02/GISTAB  *                */        
  /*                      *                         *                */        
  /*- MODIFICATION SOUS-TABLE (POSITIONNEMENT TABLE EFFECTUE)        */        
  /* REPL_STAB_POSIT      * TBTXA02/GISTAB          *                */        
  /*                      *                         *                */        
  /*- SUPPRESSION TABLE                                              */        
  /* DLET_TAB             * TBTXA01                 *                */        
  /*                      *                         *                */        
  /*- SUPPRESSION SOUS-TABLE                                         */        
  /* DLET_STAB            * TBTXA01/TBTXA02         *                */        
  /*                      *                         *                */        
  /*- SUPPRESSION SOUS-TABLE (POSITIONNEMENT TABLE EFFECTUE)         */        
  /* DLET_STAB_POSIT      * TBTXA02/GISTAB          *                */        
  /*                      *                         *                */        
  /*******************************************************************/        
         
         
 DCL XS1483  ENTRY;           ####################################################        
         
 /*********************************************************************/        
 /*                                                                   */        
 /*       INTERFACE ROUTINE XS1483 : RECHERCHE ADRESSE E-MAIL         */        
 /*                                                                   */        
 /*********************************************************************/        
         
 /* ----------------------------------------------------------------- */        
 /* 08/08/2000 ! TDMROO ! CREATION                                    */        
 /* ----------------------------------------------------------------- */        
         
 /* ----------------------------------------------------------------- */        
 /*  CDRTPGM =  0 :                                                   */        
 /*             1 : AFFILE INEXISTANT                                 */        
 /*             2 : ADRESSE E-MAIL INEXISTANTE                        */        
 /*             9 : ERREUR DL1                                        */        
 /* ----------------------------------------------------------------- */        
         
 /* ----------------------------------------------------------------- */        
 /* MODE D'EMPLOI                                                     */        
 /* _____________                                                     */        
 /*                                                                   */        
 /* VARIABLE D'ENTREE = NOIDAFF DECLARE EN FIXED(7)                   */        
 /*                                                                   */        
 /* VARIABLE DE SORTIE = CHAR(50)                                     */        
 /* ----------------------------------------------------------------- */        
         
 DCL 1 JS1324,        
 /*-------------------- E N T R E E ----------------------------------*/        
       2 PTRPCB,                         #############################################        
         3 DS137PCB       PTR,           ##############################################        
       2 ENTREE,        
         3 NOIDAFF        FIXED(07),     ########################################        
 /*-------------------- S O R T I E ----------------------------------*/        
       2 SORTIE,        
         3 LTADEML        CHAR(50),      #########################################        
       2 RETURN_CODE,        
         3 CDRTPGM        CHAR(01),      #########################################        
         3 DBPTR          PTR,           #############################################        
         3 LASTDLI        CHAR(10);      ########################################        
         
 DCL XSM532  ENTRY;           ####################################################        
 /*********************************************************************/        
 /*                                                                   */        
 /*   INTERFACE POUR MAJ DB STAT. VIA TWFI XSM532                     */        
 /*   ===========================================                     */        
 /*                                                                   */        
 /*********************************************************************/        
         
 DCL 1    JSM131,        
 /*------------------------- I N P U T -------------------------------*/        
      2   PTRPCB,                         ###############################################################        
       3  ALTPCB           PTR,           #################################################        
      2   PARAM,                          ################################################################        
       3  CDSCTRN          CHAR  (1),     ###########################################        
       3  CDEVTRN          CHAR  (1),     ###########################################        
       3  NBTYSTA          PIC '9',       #############################################        
       3  TBTYSTA (18),                   #########################################################        
        4 CDTYSTA          CHAR  (5),     ###########################################        
        4 DAOPGES          FIXED DEC (7), #######################################        
        4 LTIDCLE          CHAR  (56),    ##########################################        
        4 NOIDCPT          FIXED BIN (15),######################################        
        4 MTVAINC          FIXED BIN (31),######################################        
         
 /*------------------------ O U T P U T ------------------------------*/        
      2   RETURN_CODE,                    ##########################################################        
       3  CDRTPGM          CHAR (6),      ############################################        
       3  DBPTR            PTR,           #################################################        
       3  LASTDLI          CHAR (10);     ###########################################        
 /*********************************************************************/        
         
 DCL KS1005  ENTRY; ##################################################        
 /***********************************************************/        
 /* INTERFACE DU SERVICE SIGNALETIQUE AFFILIE               */        
 /*                                                         */        
 /***********************************************************/        
         
    /* LIMITE TABL.RELATIONS (RELAT)  */        
    /* LIMITE TABL.RELATIONS (CLREL)  */        
    /* LIMITE TABL.HISTORIQUES        */        
    /* LIMITE ADRESSES E-MAIL         */        
    /* LIMITE ENSEMBLES               */        
    /* LIMITE PRODUITS                */        
    /* LIMITE POLICES                 */        
    /* LIMITE DEVIS                   */        
         
 DCL 1 KS1005J,        
      2  PTRPCB,        
       3 DEU02PCB          PTR,     ###############################################        
       3 DS101PCB          PTR,     ###############################################        
       3 DS102PCB          PTR,     ###############################################        
       3 DS128PCB          PTR,     ###############################################        
       3 DS129PCB          PTR,     ###############################################        
       3 DS132PCB          PTR,     ###############################################        
       3 DS134PCB          PTR,     ###############################################        
       3 DS137PCB          PTR,     ###############################################        
 /*******************************************************************/        
      2  INPUT,        
 /*******************************************************************/        
 /*  SEGMENT AFFILIE                                                */        
 /*******************************************************************/        
       3 AFFIL_I,        
 /*K*/  4 NOIDAFF  DEC FIXED(7),  /*NO!  !NUMERO D'AFFILIE          */        
        4 LTNMAFF  CHAR(30),      ##################################################        
        4 CDRSAFF  CHAR(1),       ###################################################        
        4 CDSEXAF  CHAR(1),       ###################################################        
        4 DANAIAF  DEC FIXED(10), #############################################        
        4 CDLGEAF  CHAR(1),       ###################################################        
        4 NORULOC  DEC FIXED(7),  ##############################################        
        4 NOHA1AF  BIN FIXED(15), #############################################        
        4 NOHA2AF  CHAR(4),       ###################################################        
        4 CDEGCOU  CHAR(1),       ###################################################        
        4 TBEGCOD  BIT(40),       ###################################################        
                                  /*--!  !01 : PROFESSION           */        
                                  /*--!  !02 : EXTENSION DU NOM     */        
                                  /*--!  !03 : LIEU DE NAISSANCE    */        
                                  /*--!  !04 : INSPECTEUR-CPT-FACT. */        
                                  /*--!  !05 : MOTIF DE LA MODIF.   */        
                                  /*--!  !06 : NOM CONDENSE MEMBRE  */        
                                  /*--!  !07 : NOM CONJOINT EN MEGA */        
                                  /*--!  !08 : NUMERO PIC DU CCB    */        
                                  /*--!  !09 : --- VIDE --9/11/2000 */        
                                  /*--!  !10 : TELEPHONE EMPLOYEUR  */        
                                  /*--!  !11 : NO AFFILIE AUTRE SOC */        
                                  /*--!  !12 : REFERENCE CHGT ADR.  */        
                                  /*--!  !13 : REF. DE LA M-A-J     */        
                                  /*--!  !14 : 1 PARTIE NOM DU MBRE */        
                                  /*--!  !15 : 2 PARTIE NOM DU MBRE */        
                                  /*--!  !16 : --- VIDE --9/11/2000 */        
                                  /*--!  !17 : MATRICULE CIE LGCP   */        
                                  /*--!  !18 : PRESENCE RELATIONS   */        
                                  /*--!  !19 : NO DOMICILIATION     */        
                                  /*--!  !20 :                      */        
                                  /*--!  !21 : INFOS ACCIDENTS      */        
                                  /*--!  !22 : NOM COMPTE TIERS     */        
                                  /*--!  !23 : INFO CAISSE AG       */        
                                  /*--!  !24 : QUALITE DELEGUE AG   */        
                                  /*--!  !25 : AFF.AMEL A BLANC     */        
        4 TBTYPAF  BIT(240),      ##################################################        
                                  /*--!  !VOIR DEFINITION IPS1006   */        
                                  /*--!  !01 : AFFILIE SECONDAIRE   */        
                                  /*--!  !02 : AFFILIE PRINCIPAL    */        
                                  /*--!  !03 : BILINGUE FRANCAIS    */        
                                  /*--!  !04 : BILINGUE NEERLANDAIS */        
                                  /*--!  !11 : EPOUX DE ...         */        
                                  /*--!  !12 : EPOUDE DE ...        */        
                                  /*--!  !13 : ENFANT DE ...        */        
                                  /*--!  !14 : PARENT DE ...        */        
                                  /*--!  !15 : CONCUBIN DE ...      */        
                                  /*--!  !16 : CONCUBINE DE ...     */        
                                  /*--!  !17 : DIVERS DE ...        */        
                                  /*--!  !18 : DIVERSES DE ...      */        
                                  /*--!  !29 : CLIENT A REFUSER     */        
                                  /*--!  !30 : CHGT ADRESSE EN COUR */        
                                  /*--!  !31 : VIP                  */        
                                  /*--!  !32 : VIP TRES INPORTANT   */        
                                  /*--!  !33 : PAS D'AGENDA         */        
                                  /*--!  !34 : CLIENT CCB           */        
                                  /*--!  !35 : CLIENT PASSIF        */        
                                  /*--!  !36 : MEMBRE DU PERSONNEL  */        
                                  /*--!  !37 : PAS DE MAILING       */        
                                  /*--!  !38 : CLIENT A SURVEILLER  */        
                                  /*--!  !39 : EXPERT AUTO ^AUTOMAT */        
                                  /*--!  !40 : CONVENTION DE GESTIO */        
                                  /*--!  !41 : CLIENT FICTIF        */        
                                  /*--!  !42 : MEMO                 */        
                                  /*--!  !43 : CHGT D'ADRESSE EN CO */        
                                  /*--!  !44 : AFFILIE PERIME       */        
                                  /*--!  !45 : CONTENTIEUX          */        
                                  /*--!  !46 : CLUB BLOSO           */        
                                  /*--!  !47 : MEMBRE VLB           */        
                                  /*--!  !48 : PAS DE TP INFORMEX   */        
                                  /*--!  !49 : FONCTIONNAIRE CEE    */        
                                  /*--!  !50 : A NE PAS RAPPELER    */        
                                  /*--!  !51 : ADRESSE SOPRESS      */        
                                  /*--!  !52 : CONTRAT BILINGUE     */        
                                  /*--!  !53 : AFFILIE DECEDE       */        
                                  /*--!  !54 : PRODUCTION FICTIVE   */        
                                  /*--!  !55 : GESTION PROTEGEE     */        
                                  /*--!  !56 : CLIENT CGFP          */        
                                  /*--!  !57 : CELLULE DE DISTRIBUT */        
                                  /*--!  !58 : GESTION SIN. DEDICAE */        
                                  /*--!  !60 : DOCUMENT EURO/DEFAUT */        
                                  /*--!  !61 : PROSPECT             */        
                                  /*--!  !62 : SUIVI GESTIONNAIRE   */        
                                  /*--!  !63 : MEMBRE               */        
                                  /*--!  !64 : FAUX-MEMBRE          */        
                                  /*--!  !65 : IMPOSABLE            */        
                                  /*--!  !72 : ACTIF DEFINITIF      */        
                                  /*--!  !73 : ACTIF TEMPORAIRE     */        
                                  /*--!  !74 : INACTIF              */        
                                  /*--!  !75 : RETRAITE             */        
                                  /*--!  !76 : UTILISATEUR EXTERNE  */        
                                  /*--!  !77 : FONCTIONNAIRE        */        
                                  /*--!  !78 : CTRL RSQ : W=BLOQUE  */        
                                  /*--!  !79 : CTRL RSQ : S=SURVEIL */        
                                  /*--!  !80 : SMAP-INFOS           */        
                                  /*--!  !81 : FICHE PERSONNELLE V  */        
                                  /*--!  !82 : NOUV. ADR. INCONNUE  */        
                                  /*--!  !83 : BENEFICIE DE 3 APPEL */        
                                  /*--!  !     AU CC JURIDIQUE LEGI */        
                                  /*--!  !84:FAIT PART. D'1 AFFINIT */        
                                  /*--!  !85:VIE PURE (AME)         */        
                                  /*--!  !86:ENVOI ENQUETE MIEUX... */        
                                  /*--!  !87:RETOUR ENQ. MIEUX...   */        
                                  /*--!  !88:RETOUR ENQ.MIEUX+SIGN. */        
                                  /*--!  !89 : SPONSORING (VIP)     */        
        4 NOTL1AF  DEC FIXED(3),  ##############################################        
        4 NOTL2AF  DEC FIXED(9),  ##############################################        
        4 NONATAF  DEC FIXED(11), #############################################        
        4 DADERMJ  DEC FIXED(7),  ##############################################        
        4 CDLGRUE  CHAR(1),       ###################################################        
        4 NOAF1EX  DEC FIXED(7),  ##############################################        
        4 NOAF2EX  BIN FIXED(15), #############################################        
        4 CDPOGEO  DEC FIXED(7),  ##############################################        
        4 NBFICDO  BIN FIXED(15), #############################################        
        4 FILL_01  CHAR(50),      ##################################################        
 /*****************************************************************/        
 /* SEGMENT ENTETE POLICE                                         */        
 /*****************************************************************/        
       3 POLIC_I,        
 /*K*/  4 NOIDAFF  DEC FIXED(7),   /*NO!  !NUMERO D'AFFILIE          */        
 /*K*/  4 NOIDPOL  DEC FIXED(8),   /*NO!  !NO. DE POLICE             */        
        4 CDTYPOL  CHAR(2),        ####################################################        
        4 CDLGPOL  CHAR(1),        ####################################################        
        4 CDETAPO  CHAR(1),        ####################################################        
                                   /*--!  !A : ACTIVE                */        
                                   /*--!  !C : CLOTUREE / ANNULEE    */        
                                   /*--!  !P : PASSIVE / EN ATTENTE  */        
                                   /*--!  !S : SUSPENDUE/SANS SUITE  */        
        4 CDCMPRO  CHAR(1),        ####################################################        
        4 CDCMGES  CHAR(8),        ####################################################        
        4 NUSOUPO  DEC FIXED(4),   ###############################################        
                                   /*--!  !EN IE, VAUT 9999 POUR LE  */        
                                   /*--!  !NUMERO DE CI 000000       */        
        4 CDINSPO  CHAR(2),        ####################################################        
        4 CDINTAG  DEC FIXED(7),   ###############################################        
                                   /*--!  !A REMPLACER PAR CDAGINT   */        
        4 NOINTPO  CHAR(12),       ###################################################        
        4 CDMODPA  CHAR(1),        ####################################################        
        4 CDREAPO  CHAR(1),        ####################################################        
        4 CDGAGPO  CHAR(1),        ####################################################        
        4 NODERAV  DEC FIXED(3),   ###############################################        
        4 NBEXEPO  DEC FIXED(3),   ###############################################        
        4 NODOMPO  DEC FIXED(10),  ##############################################        
        4 NOCPTPO  DEC FIXED(10),  ##############################################        
        4 CDEGAPO  CHAR(1),        ####################################################        
        4 TBCDPOL(24)  BIT(1),     #################################################        
                                   /*--!  !01: POLICE COURT TERME    */        
                                   /*--!  !02: FACT MS PAR SOUS GR   */        
                                   /*--!  !03: PRESENCE AD. POLICE   */        
                                   /*--!  !04: MUTATION DE SOCIETE   */        
                                   /*--!  !       SMAP <---> MEGA    */        
                                   /*--!  !05: MS : ATTESTATION      */        
                                   /*--!  !06: BILINGUE/TRILINGUE    */        
                                   /*--!  !07: SINISTRE EN D1        */        
                                   /*--!  !08: SINISTRE EN SA        */        
                                   /*--!  !09: SINISTRE EN AC        */        
                                   /*--!  !10: MEMO POLICE           */        
                                   /*--!  !22: POLICE SOUS PACKAGE   */        
                                   /*--!  !23: POLICE PACKAGE        */        
                                   /*--!  !24: CHGT AFFILIE          */        
        4 NOIDMAT  CHAR(14),       ###################################################        
        4 NOHDRLT  BIN FIXED(15),  ##############################################        
        4 CDDVPOL  CHAR(3),        ####################################################        
        4 CDSTAPO  CHAR(1),        ####################################################        
                                   /*--!  !0: POLICE INCOMPLETE      */        
                                   /*--!  !1: PRODUCT. INDIV. OK     */        
                                   /*--!  !2: FACTURAT.INDIV. OK     */        
                                   /*--!  !3: FACTURAT.PACKAGE OK    */        
        4 CDAGINT  CHAR(6),        ####################################################        
        4 NORFEXT  CHAR(12),       ###################################################        
        4 CDTYDOC  CHAR(1),        ####################################################        
        4 FILLER  CHAR(09),        ####################################################        
        4 FILL_02  CHAR(41),       ###################################################        
 /*****************************************************************/        
 /* SEGMENT ADRESSE COURRIER PAR POLICE                           */        
 /*****************************************************************/        
       3 ADPOL_I,        
 /*K*/  4 NOIDAFF  DEC FIXED(7),          /*NO!  !NUMERO D'AFFILIE    */        
 /*K*/  4 NOIDPOL  DEC FIXED(8),          /*NO!  !NO. DE POLICE       */        
 /*K*/  4 CDADPOL  CHAR(1),               /*CD!  !CODE ADRESSE        */        
        4 LTNMPOL  CHAR(30),              ####################################################        
        4 CDRSPOL  CHAR(1),               #####################################################        
        4 LTRUEPO  CHAR(30),              ####################################################        
        4 CDCPOPO  CHAR(6),               #####################################################        
        4 LTLOCPO  CHAR(25),              ####################################################        
        4 CDPAYPO  CHAR(3),               #####################################################        
        4 FILL_03  CHAR(50),              ####################################################        
 /*****************************************************************/        
 /* SEGMENT ADRESSE AFFILIE                                       */        
 /*****************************************************************/        
       3 ADAFF_I,        
 /*K*/  4 NOIDAFF  DEC FIXED(7),            /*NO!  !NUMERO D'AFFILIE  */        
        4 LTRUEAF  CHAR(25),                ####################################################        
        4 CDCPOAF  CHAR(6),                 #####################################################        
        4 LTLOCAF  CHAR(25),                ####################################################        
        4 CDPAYAF  CHAR(3),                 #####################################################        
        4 FILL_04  CHAR(50),                ####################################################        
 /*****************************************************************/        
 /* SEGMENT ADRESSE COURRIER PAR AFFILIE                          */        
 /*****************************************************************/        
       3 ADCOU_I,        
 /*K*/  4 NOIDAFF  DEC FIXED(7),          /*NO!  !NUMERO D'AFFILIE    */        
 /*K*/  4 CDADCOU  CHAR(1),               /*CD!  !CODE ADRESE         */        
        4 LTNMCOU  CHAR(30),              ####################################################        
        4 CDRSCOU  CHAR(1),               #####################################################        
        4 LTRUECO  CHAR(30),              ####################################################        
        4 CDCPOCO  CHAR(6),               #####################################################        
        4 LTLOCCO  CHAR(25),              ####################################################        
        4 CDPAYCO  CHAR(3),               #####################################################        
        4 FILL_05  CHAR(50),              ####################################################        
 /*****************************************************************/        
 /* SEGMENT RELATIONS ENTRE AFFILIES (DOUBLONS)                   */        
 /*****************************************************************/        
       3 RELAT_I,        
 /*K*/  4 NOIDAFF  DEC FIXED(7),    /*NO!  !NUMERO D'AFFILIE          */        
        4 CDNATRE  CHAR(2),         #####################################################        
        4 NOAFFRE  DEC FIXED(7),    ################################################        
        4 FILL_06  CHAR(50),        ####################################################        
 /*****************************************************************/        
 /* SEGMENT CREATION D ENSEMBLES                                  */        
 /*****************************************************************/        
       3 ENSEM_I,        
 /*K*/  4 NOIDAFF  DEC FIXED(7),    /*NO!  !NUMERO D'AFFILIE          */        
        4 TBIDENS     CHAR(7),      ##################################################        
        4 FILLER      CHAR(7),      ##################################################        
        4 FILL_07  CHAR(43),        ####################################################        
 /*****************************************************************/        
 /* SEGMENT DESTINE AUX DONNEES COMPLEMENTAIRES                   */        
 /*****************************************************************/        
       3 COMPL_I,        
 /*K*/  4 NOIDAFF  DEC FIXED(7),    /*NO!  !NO. D'AFFILIE             */        
 /*K*/  4 CDTYINF  CHAR(2),         /*CD!  !CODIF. TYPE D'INFORAMTION */        
        4 LTNMINF  CHAR(30),        ####################################################        
        4 FILL_08  CHAR(50),        ####################################################        
 /*****************************************************************/        
 /* SEGMENT HISTORIQUE AFFILIE                                    */        
 /*****************************************************************/        
       3 HISAF_I,        
 /*K*/  4 NOIDAFF  DEC FIXED(7),      /*NO!  !NO. D'AFFILIE           */        
 /*K*/  4 NOSQAFF  BIN FIXED(15),     /*NO!  !NO. DE SEQUENCE AFFILIE */        
        4 NBSQAFF  BIN FIXED(15),     ###############################################        
        4 CDCMGES  CHAR(8),           #####################################################        
        4 DAMAJAF  DEC FIXED(7),      ################################################        
        4 HHMAJAF  DEC FIXED(7),      ################################################        
        4 NOIDTER  CHAR(8),           #####################################################        
        4 LTNMAFF  CHAR(30),          ####################################################        
        4 LTEXTNM  CHAR(30),          ####################################################        
        4 CDRSAFF  CHAR(1),           #####################################################        
        4 CDSEXAF  CHAR(1),           #####################################################        
        4 CDLGEAF  CHAR(1),           #####################################################        
        4 DANAIAF  DEC FIXED(10),     ###############################################        
        4 LTNMCDS  CHAR(21),          ####################################################        
        4 LTRUEAF  CHAR(25),          ####################################################        
        4 CDCPOAF  CHAR(6),           #####################################################        
        4 LTLOCAF  CHAR(25),          ####################################################        
        4 CDPAYAF  CHAR(3),           #####################################################        
        4 LTLINAI  CHAR(30),          ####################################################        
        4 LTPROAF  CHAR(30),          ####################################################        
        4 NOTL1AF  DEC FIXED(3),      ################################################        
        4 NOTL2AF  DEC FIXED(9),      ################################################        
        4 NOTLBUR  CHAR(16),          ####################################################        
        4 NBFACAF  PIC'9',            ######################################################        
        4 CDINSAF  CHAR(2),           #####################################################        
        4 NOCPTAF  PIC'(12)9',        ##################################################        
        4 LTCOMAF  CHAR(30),          ####################################################        
        4 LTNMCOU  CHAR(30),          ####################################################        
        4 CDRSCOU  CHAR(1),           #####################################################        
        4 LTRUECO  CHAR(30),          ####################################################        
        4 CDCPOCO  CHAR(6),           #####################################################        
        4 LTLOCCO  CHAR(25),          ####################################################        
        4 CDPAYCO  CHAR(3),           #####################################################        
        4 LTNM1MB  CHAR(30),          ####################################################        
        4 LTNM2MB  CHAR(30),          ####################################################        
        4 NOHA1AF  BIN FIXED(15),     ###############################################        
        4 NOHA2AF  CHAR(4),           #####################################################        
        4 NOFA1AF  DEC FIXED(3),      ################################################        
        4 NOFA2AF  DEC FIXED(9),      ################################################        
        4 CDCHAL1  CHAR(2),           #####################################################        
        4 CDETCIV  CHAR(2),           #####################################################        
        4 CDORGAF  CHAR(2),           #####################################################        
        4 CDRCTAF  CHAR(2),           #####################################################        
        4 NOGSMAF  CHAR(15),          ####################################################        
        4 DADECAF  DEC FIXED(7),      ################################################        
        4 CDNATAF  CHAR(3),           #####################################################        
        4 RSVHIST  CHAR(93),          ####################################################        
        4 FILL_09  CHAR(50),          ####################################################        
 /*****************************************************************/        
 /* SEGMENT SIGNALETIQUE ACTIVITES                                */        
 /*****************************************************************/        
       3 CLACT_I,        
 /*K*/  4 NOIDCLI  DEC FIXED(9),        /*NO!  !IDENTIFICATION CLIENT */        
        4 TBEGCOD(16)  BIT(1),          ##################################################        
        4 FILL_10  CHAR(50),            ####################################################        
 /*****************************************************************/        
 /* SEGMENT ACTIVITES PROFESSIONELLES                             */        
 /*****************************************************************/        
       3 CLPRO_I,        
 /*K*/  4 NOIDCLI  DEC FIXED(9),        /*NO!  !IDENTIFICATION CLIENT */        
 /*K*/  4 DAEFPRO  DEC FIXED(7),        /*DC!  !DA. EFF. COMPL.    */        
        4 NOSQRUE  BIN FIXED(15),       ############################################        
        4 CDTYPRO  CHAR(2),             ##################################################        
        4 CDTYEMP  CHAR(2),             ##################################################        
        4 CDPOEMP  CHAR(4),             ##################################################        
        4 LOPOEMP  CHAR(20),            #################################################        
        4 TXDETVA  DEC FIXED(3),        #############################################        
        4 NUDETVA  CHAR(9),             ##################################################        
        4 LTCMPRO  CHAR(40),            #################################################        
        4 LTCMEMP  CHAR(40),            #################################################        
        4 CDHANDI  CHAR(1),             ##################################################        
        4 CDRETVA  CHAR(1),             ##################################################        
        4 CDASTVA  CHAR(1),             ##################################################        
        4 CDTRANS  CHAR(1),             ##################################################        
        4 TBEGCOD(16)  BIT(1),          ###############################################        
                                       /*--!  !01:SECTEUR PRIVE   */        
                                       /*--!  !02:SECTEUR PUBLIC  */        
                                       /*--!  !03:SECT.ASSOCIATIF */        
        4 CDFONCT  CHAR(1),             ##################################################        
        4 CDGEPRO  CHAR(2),             ##################################################        
        4 CDGEEMP  CHAR(2),             ##################################################        
        4 CDTAENT  CHAR(2),             ##################################################        
        4 FILL_11  CHAR(50),            #################################################        
 /*****************************************************************/        
 /* SEGMENT SIGNALETIQUE ACTIVITES COMPLEMENTAIRES                */        
 /*****************************************************************/        
       3 CLACC_I,        
 /*K*/  4 NOIDCLI  DEC FIXED(9),        /*NO!  !IDENTIFICATION CLIENT */        
 /*K*/  4 NOSQACC  BIN FIXED(15),       /*SQ!  !NO DE SEQUENCE      */        
        4 CDTYACC  CHAR(2),             ###################################################        
        4 LTCMACC  CHAR(40),            ##################################################        
        4 TBEGCOD(16)  BIT(1),          ################################################        
        4 CDTYASC  CHAR(2),             ###################################################        
        4 LTLIACC  CHAR(30),            ##################################################        
        4 FILL_12  CHAR(50),            #################################################        
 /*****************************************************************/        
 /* SEGMENT SIGNALETIQUE DES CONTACTS                             */        
 /*****************************************************************/        
       3 CLCON_I,        
 /*K*/  4 NOIDCLI  DEC FIXED(9),        /*NO!  !IDENTIFICATION CLIENT */        
        4 TBEGCOD(16)  BIT(1),          ##################################################        
        4 FILL_13  CHAR(50),            #################################################        
 /*****************************************************************/        
 /* SEGMENT SIGNALETIQUE DES ADRESSES                             */        
 /*****************************************************************/        
       3 CLADR_I,        
 /*K*/  4 NOIDCLI  DEC FIXED(9),      /*NO!  !IDENTIFICATION CLIENT   */        
 /*K*/  4 CDTYADR  CHAR(2),           /*CD!  !CODE TYPE ADRESSE       */        
 /*K*/  4 DAEFPRO  DEC FIXED(7),      /*DC!  !DATE EFFEF COMPLEMENTEE */        
        4 LTADNO1  CHAR(30),          ####################################################        
        4 LTADNO2  CHAR(30),          ####################################################        
        4 CDADRSO  CHAR(3),           #####################################################        
        4 LTADADR  CHAR(30),          ####################################################        
        4 NOADCPO  CHAR(5),           #####################################################        
        4 NOADBTE  CHAR(5),           #####################################################        
        4 CDADCPO  CHAR(6),           #####################################################        
        4 LOADLOC  CHAR(20),          ####################################################        
        4 CDADPAY  CHAR(3),           #####################################################        
        4 NUADTEL  CHAR(15),          ####################################################        
        4 NUADFAX  CHAR(15),          ####################################################        
        4 TBEGCOD(16)  BIT(1),        ##################################################        
        4 NOCPLPR  CHAR(10),          ####################################################        
        4 FILL_14  CHAR(50),          ###############################################        
 /*****************************************************************/        
 /* SEGMENT SIGNALETIQUE COMPLEMENT D ADRESSE                     */        
 /*****************************************************************/        
       3 CLCPL_I,        
 /*K*/  4 NOIDCLI  DEC FIXED(9),      /*NO!  !IDENTIFICATION CLIENT   */        
 /*K*/  4 CDTYADR  CHAR(2),           /*CD!  !CODE TYPE ADRESSE       */        
 /*K*/  4 DAEFPRO  DEC FIXED(7),      /*DC!  !DATE EFFEF COMPLEMENTEE */        
        4 CDTYACC  CHAR(2),           #####################################################        
        4 LTCLCPL  CHAR(30),          ####################################################        
        4 TBEGCOD(16)  BIT(1),        ##################################################        
        4 FILL_15  CHAR(50),          ####################################################        
 /*****************************************************************/        
 /* SEGMENT SIGNALETIQUE DES CONTACTS PRIVILEGIES                 */        
 /*****************************************************************/        
       3 CLCOP_I,        
 /*K*/  4 NOIDCLI  DEC FIXED(9),      /*NO!  !IDENTIFICATION CLIENT   */        
        4 NOIDAFF(10)  CHAR(6),       #################################################        
        4 TBEGCOD(16)  BIT(1),        ##################################################        
        4 FILL_16  CHAR(50),          ####################################################        
 /*****************************************************************/        
 /* SEGMENT COMPLEMENT SIGNALETIQUE                               */        
 /*****************************************************************/        
       3 CLCOM_I,        
 /*K*/  4 NOIDCLI  DEC FIXED(9),     /*NO!  !IDENTIFICATION CLIENT    */        
        4 DADECAF  DEC FIXED(7),     ################################################        
        4 DAPERMI  DEC FIXED(7),     ################################################        
        4 TBNBCTC(5),        
         5 CDTYCTC  CHAR(2),         ####################################################        
         5 NBCONTR  DEC FIXED(7),    ###############################################        
        4 NBENFAN  BIN FIXED(15),    ###############################################        
        4 NBENFHA  BIN FIXED(15),    ###############################################        
        4 NBAUTCH  BIN FIXED(15),    ###############################################        
        4 NOID_CI  DEC FIXED(7),     ################################################        
        4 DACIDEN  DEC FIXED(7),     ################################################        
        4 DAENVAG  DEC FIXED(7),     ################################################        
        4 NBENVAG  DEC FIXED(3),     ################################################        
        4 TBEGCOD(16)  BIT(1),       ##################################################        
                                     /*--!  !01 CD CHEF DE MENA.:'Y'  */        
                                     /*--!  !02 CD CHEF DE MENA.:'N'  */        
                                     /*--!  !03 CD MDP : ENVOI CLIENT */        
                                     /*--!  !04 CD ACC. INFOS NET     */        
        4 NOPERMI  CHAR(10),         ####################################################        
        4 CDLGSEC  CHAR(1),          #####################################################        
        4 CDORAFF  CHAR(2),          #####################################################        
        4 CDNATCL  CHAR(3),          #####################################################        
        4 LTPRECL  CHAR(15),         ####################################################        
        4 NUGSMCL  CHAR(15),         ####################################################        
        4 NOSEQUI  CHAR(3),          ####################################################        
                                     /*--!  !GENERE ALEATOIREMENT    */        
        4 CDGSTAM  CHAR(1),          ####################################################        
                                     /*--!  !VAL. POSS : I/R/S/BLANC */        
                                     /*--!  !I : ISRT 1ERE DEM DE MDP*/        
                                     /*--!  !R : NEW MDP-GARDE USERID*/        
                                     /*--!  !S : SUP MDP POUR USERID */        
        4 CDGSPWD  CHAR(1),          ####################################################        
                                     /*--!  !EMPECHE LA DEM. DE PLS  */        
                                     /*--!  !MDP SIMULTANEMENT       */        
                                     /*--!  !VAL. POSS : E/U/P/BLANC */        
                                     /*--!  !E : DMD DE MDP EN COURS */        
                                     /*--!  !U : USERID EXPEDIE      */        
                                     /*--!  !P : MDP EXPEDIE         */        
        4 CDORIDE  CHAR(1),          #####################################################        
                                     /*--!  !VAL. POSS : ALPHANUM.    */        
                                     /*--!  !A: ASSURANCE             */        
                                     /*--!  !B: BANQUE                */        
        4 CDWOCK1  CHAR(1),          #####################################################        
        4 CDWOCK2  CHAR(1),          #####################################################        
        4 CDETCIV  CHAR(2),          #####################################################        
        4 CDCHAL1  CHAR(2),          #####################################################        
        4 CDCHAL2  CHAR(3),          #####################################################        
        4 CDMAJCL  CHAR(2),          #####################################################        
        4 LTMAJCL  CHAR(30),         ####################################################        
        4 AFFINIT(5),        
         5 CDAFIN1  CHAR(2),         ####################################################        
         5 CDAFIN2  CHAR(15),        ###################################################        
         5 CDFAMIL  CHAR(1),         ####################################################        
        4 CDCIDEN  CHAR(1),          #####################################################        
        4 DADERMS  PIC'(7)9',        ###################################################        
        4 NBCONMS  PIC'(5)9',        ###################################################        
        4 DAEXPCI  PIC'(7)9',        ###################################################        
        4 DAABNWL  PIC'(7)9',        ###################################################        
        4 CDSTACI  CHAR(1),          #####################################################        
        4 DASTACI  PIC'(07)9',       ##################################################        
        4 NOBCEAF  CHAR(10),         ####################################################        
        4 CDCTF2F  CHAR(1),          #####################################################        
        4 CDPEP    CHAR(1),          #####################################################        
        4 CDCOMMEN CHAR(1),          #####################################################        
        4 CDPTIENF CHAR(1),          #####################################################        
        4 CDEINVO  CHAR(1),          #####################################################        
        4 FILL_16  CHAR(49),         ####################################################        
 /*****************************************************************/        
 /* SEGMENT SIGNALETIQUE DES RELATIONS                            */        
 /*****************************************************************/        
       3 CLREL_I,        
 /*K*/  4 NOIDCLI  DEC FIXED(9),     /*NO!  !IDENTIFICATION CLIENT    */        
 /*K*/  4 NOSEQRE  BIN FIXED(15),    /*SQ!  !NUM. DE SEQUENCE         */        
        4 NOIDREL  CHAR(2),          #####################################################        
        4 CDTYREL  CHAR(1),          #####################################################        
        4 NOCLREL  DEC FIXED(7),     ################################################        
        4 TBEGCOD(16)  BIT(1),       ##################################################        
        4 REC_VOTE  CHAR(27),        ###################################################        
        4 DAASSEM  DEC FIXED(7),     ################################################        
        4 FILL_17  CHAR(50),         ####################################################        
 /*****************************************************************/        
 /* SEGMENT AUTRES PRENOMS                                        */        
 /*****************************************************************/        
       3 CLPRE_I,        
 /*K*/  4 NOIDCLI  DEC FIXED(9),     /*NO!  !IDENTIFICATION CLIENT    */        
        4 LTPRCL1  CHAR(15),         ####################################################        
        4 LTPRCL2  CHAR(15),         ####################################################        
        4 TBEGCOD(16)  BIT(1),       ##################################################        
        4 FILL_18  CHAR(50),         ####################################################        
 /*****************************************************************/        
 /* SEGMENT SIGNALETIQUE ADRESSE E-MAIL                           */        
 /*****************************************************************/        
       3 CLEML_I,        
 /*K*/  4 NOIDCLI  DEC FIXED(9),     /*NO!  !IDENTIFICATION CLIENT    */        
        4 DAADEML  DEC FIXED(7),     ################################################        
        4 TBEGCOD(16)  BIT(1),       ##################################################        
                                     /*--!  !1 - ADRESSE INACTIVE     */        
        4 LTADEML  CHAR(50),         ####################################################        
        4 LTORIGI  CHAR(10),         ####################################################        
        4 CDPREML  CHAR(1),          #####################################################        
        4 FILL_19  CHAR(50),         ####################################################        
 /*****************************************************************/        
 /* SEGMENT SIGNALETIQUE DEVIS                                    */        
 /*****************************************************************/        
       3 CLDEV_I,        
        4 NOIDCLI  DEC FIXED(9),    ##############################################        
        4 DADVINT  DEC FIXED(11),   #############################################        
        4 NODVINT  DEC FIXED(13),   #############################################        
        4 CDIDINT  DEC FIXED(9),    ##############################################        
        4 HHMMINT  DEC FIXED(5),    ##############################################        
        4 TBEGCOD(16)  BIT(1),      ################################################        
                                    /*--!  ! 1 - AFFICHABLE MYSMAP  */        
                                    /*--!  ! 2 - DELETE MYSMAP      */        
                                    /*--!  ! 3 - SAVE CRM PUR       */        
                                    /*--!  ! 4 - REMPLACE           */        
        4 CDTYPDV  CHAR(2),         ###################################################        
        4 CDORIDV  CHAR(2),         ###################################################        
        4 CDTYPRO  CHAR(7),         ###################################################        
        4 FILL_20  CHAR(50),        ###################################################        
 /*****************************************************************/        
 /* SEGMENT PRODUIT CLIENT                                        */        
 /*****************************************************************/        
       3 PROCL_I,        
 /*K*/  4 NOIDAFF  DEC FIXED(7),     /*NO!  !NO D'AFFILIE             */        
 /*K*/  4 NOIDPOL  DEC FIXED(9),     /*NO!  !NO. DE POLICE            */        
        4 NOIDPAC  DEC FIXED(9),     ################################################        
        4 CDTYPOL  CHAR(2),          #####################################################        
        4 CDIDPRD  CHAR(8),          #####################################################        
        4 CDIDGES  CHAR(8),          #####################################################        
        4 CDCMPRO  CHAR(1),          #####################################################        
                                     /*--!  ! 1: LIEGE                */        
                                     /*--!  ! 2  HASSELT              */        
                                     /*--!  ! 3: BRUXELLES            */        
                                     /*--!  ! ^: INCONNU              */        
        4 CDEGPOL  CHAR(1),          #####################################################        
                                     /*--!  ! A: ACTIF                */        
                                     /*--!  ! C: CLOTURE              */        
                                     /*--!  ! P: PASSIF               */        
                                     /*--!  ! S: SUSPENDU             */        
                                     /*--!  ! D: DEVIS/PROJET         */        
                                     /*--!  ! O: OFFRE                */        
                                     /*--!  ! ?: INCONNU              */        
        4 CDCATPO  CHAR(11),         ####################################################        
        4 CDOCAAR  CHAR(4),          #####################################################        
        4 CDOCADP  CHAR(4),          #####################################################        
        4 CDMOTDP  CHAR(2),          #####################################################        
        4 CDGRPAF  CHAR(7),          #####################################################        
        4 CDFRAPO  CHAR(1),          #####################################################        
        4 CDPREML  CHAR(1),          #####################################################        
                                     /*--!  ! S: SEMESTRIEL           */        
                                     /*--!  ! M: MENSUEL              */        
                                     /*--!  ! Q: QUADRIMESTRIEL       */        
                                     /*--!  ! T: TRIMESTRIEL          */        
                                     /*--!  ! B: BIMESTRIEL           */        
                                     /*--!  ! U: UNIQUE               */        
                                     /*--!  ! ^: INCONNU              */        
        4 CDFRFRA  CHAR(1),          #####################################################        
                                     /*--!  ! Y: YES                  */        
                                     /*--!  ! N: NO                   */        
                                     /*--!  ! ^: INCONNU              */        
        4 CDADPOL  CHAR(1),          #####################################################        
                                     /*--!  ! Y: YES                  */        
                                     /*--!  ! N: NO                   */        
                                     /*--!  ! ^: INCONNU              */        
        4 CDDVPOL  CHAR(3),          #####################################################        
                                     /*--!  ! BEF                     */        
                                     /*--!  ! EUR                     */        
        4 CDCLAPO  CHAR(1),          #####################################################        
                                     /*--!  ! G: GROUPE               */        
                                     /*--!  ! I: INDIVIDUELLE         */        
                                     /*--!  ! ^: INCONNU              */        
        4 NOCPTPO  CHAR(12),         ####################################################        
        4 NODOMPO  CHAR(12),         ####################################################        
        4 NBRAPPO  PIC'9',           ######################################################        
        4 NBSINAC  DEC FIXED(7),     ################################################        
        4 DACMPSI  DEC FIXED(7),     ################################################        
        4 DAEFFPO  DEC FIXED(7),     ################################################        
        4 DAEXPPO  DEC FIXED(7),     ################################################        
        4 DAECHPO  DEC FIXED(4),     ################################################        
        4 PRTRMBA  DEC FIXED(15),    ###############################################        
        4 PRTRMTO  DEC FIXED(15),    ###############################################        
        4 LTINFCP  CHAR(220),        ###################################################        
        4 FILL_21  CHAR(50),         ####################################################        
 /*****************************************************************/        
 /* <<< CRITERES POUR EXPLORATION DES RELATIONS ENTRE LES CLIENTS */        
 /* (RELAT)                                                       */        
 /*****************************************************************/        
       3 EXPLORLA_I,                 ############################################################        
        4 NBITEXP    BIN FIXED(15),  #############################################        
        4 NOIDAFF    PIC '(9)9',     ################################################        
 /*****************************************************************/        
 /* <<< CRITERES POUR EXPLORATION DES RELATIONS ENTRE LES CLIENTS */        
 /* (CLREL)                                                       */        
 /*****************************************************************/        
       3 EXPLOREL_I,                 ############################################################        
        4 NBITEXP    BIN FIXED(15),  #############################################        
        4 NOIDCLI  DEC FIXED(9),     ################################################        
        4 NOSEQRE  BIN FIXED(15),    ###############################################        
 /*****************************************************************/        
 /* <<< CRITERES POUR EXPLORATION DES HISTORIQUES DE SIGNALETIQUE */        
 /*                                                               */        
 /*****************************************************************/        
       3 EXPLOHIS_I,                 ############################################################        
        4 NBITEXP    BIN FIXED(15),  #############################################        
        4 NOIDAFF  DEC FIXED(7),      ################################################        
        4 NOSQAFF  BIN FIXED(15),     ###############################################        
 /*****************************************************************/        
 /* <<< CRITERES POUR EXPLORATION DES ADRESSES E-MAIL             */        
 /*                                                               */        
 /*****************************************************************/        
       3 EXPLOEML_I,                 ############################################################        
        4 NBITEXP    BIN FIXED(15),  #############################################        
        4 NOIDCLI  DEC FIXED(9),     ################################################        
 /*****************************************************************/        
 /* <<< CRITERES POUR EXPLORATION DES ENSEMBLES                   */        
 /*                                                               */        
 /*****************************************************************/        
       3 EXPLOENS_I,                 ############################################################        
        4 NBITEXP    BIN FIXED(15),  #############################################        
        4 NOIDAFF  DEC FIXED(7),      ################################################        
 /*****************************************************************/        
 /* <<< CRITERES POUR EXPLORATION DES POLICES                     */        
 /*                                                               */        
 /*****************************************************************/        
       3 EXPLOPOL_I,                 ############################################################        
        4 NBITEXP    BIN FIXED(15),  #############################################        
        4 NOIDAFF  DEC FIXED(7),      ################################################        
 /*****************************************************************/        
 /* <<< CRITERES POUR EXPLORATION DES PRODUITS CLIENTS            */        
 /*                                                               */        
 /*****************************************************************/        
       3 EXPLOPRO_I,                 ############################################################        
        4 NBITEXP    BIN FIXED(15),  #############################################        
        4 NOIDAFF  DEC FIXED(7),      ################################################        
        4 NOIDPOL  DEC FIXED(9),      ################################################        
         
 /*****************************************************************/        
 /* <<< CRITERES POUR EXPLORATION DES DEVIS INTERNET              */        
 /*                                                               */        
 /*****************************************************************/        
       3 EXPLODEV_I,                 ############################################################        
        4 NBITEXP    BIN FIXED(15),  #############################################        
 /*K*/  4 NOIDCLI  DEC FIXED(9),     /*NO!  !IDENTIFICATION CLIENT    */        
        4 DADVINT  DEC FIXED(11),   #############################################        
        4 NODVINT  DEC FIXED(13),   #############################################        
        4 CDIDINT  DEC FIXED(9),    ##############################################        
        4 HHMMINT  DEC FIXED(5),    ##############################################        
        4 TBEGCOD(16)  BIT(1),      ################################################        
                                    /*--!  ! 1 - AFFICHABLE MYSMAP  */        
                                    /*--!  ! 2 - DELETE MYSMAP      */        
                                    /*--!  ! 3 - SAVE CRM PUR       */        
        4 CDTYPDV  CHAR(2),         ###################################################        
        4 CDORIDV  CHAR(2),         ###################################################        
         
 /*****************************************************************/        
      2 OUTPUT,        
 /*******************************************************************/        
 /*  SEGMENT AFFILIE                                                */        
 /*******************************************************************/        
       3 AFFIL_O,        
        4 NOIDAFF  DEC FIXED(7),  ##############################################        
        4 LTNMAFF  CHAR(30),      ##################################################        
        4 CDRSAFF  CHAR(1),       ###################################################        
        4 CDSEXAF  CHAR(1),       ###################################################        
        4 DANAIAF  DEC FIXED(10), #############################################        
        4 CDLGEAF  CHAR(1),       ###################################################        
        4 NORULOC  DEC FIXED(7),  ##############################################        
        4 NOHA1AF  BIN FIXED(15), #############################################        
        4 NOHA2AF  CHAR(4),       ###################################################        
        4 CDEGCOU  CHAR(1),       ###################################################        
        4 TBEGCOD  BIT(40),       ###################################################        
                                  /*--!  !01 : PROFESSION           */        
                                  /*--!  !02 : EXTENSION DU NOM     */        
                                  /*--!  !03 : LIEU DE NAISSANCE    */        
                                  /*--!  !04 : INSPECTEUR-CPT-FACT. */        
                                  /*--!  !05 : MOTIF DE LA MODIF.   */        
                                  /*--!  !06 : NOM CONDENSE MEMBRE  */        
                                  /*--!  !07 : NOM CONJOINT EN MEGA */        
                                  /*--!  !08 : NUMERO PIC DU CCB    */        
                                  /*--!  !09 : --- VIDE --9/11/2000 */        
                                  /*--!  !10 : TELEPHONE EMPLOYEUR  */        
                                  /*--!  !11 : NO AFFILIE AUTRE SOC */        
                                  /*--!  !12 : REFERENCE CHGT ADR.  */        
                                  /*--!  !13 : REF. DE LA M-A-J     */        
                                  /*--!  !14 : 1 PARTIE NOM DU MBRE */        
                                  /*--!  !15 : 2 PARTIE NOM DU MBRE */        
                                  /*--!  !16 : --- VIDE --9/11/2000 */        
                                  /*--!  !17 : MATRICULE CIE LGCP   */        
                                  /*--!  !18 : PRESENCE RELATIONS   */        
                                  /*--!  !19 : NO DOMICILIATION     */        
                                  /*--!  !20 :                      */        
                                  /*--!  !21 : INFOS ACCIDENTS      */        
                                  /*--!  !22 : NOM COMPTE TIERS     */        
                                  /*--!  !23 : INFO CAISSE AG       */        
                                  /*--!  !24 : QUALITE DELEGUE AG   */        
                                  /*--!  !25 : AFF.AMEL A BLANC     */        
        4 TBTYPAF  BIT(240),      ##################################################        
                                  /*--!  !VOIR DEFINITION IPS1006   */        
                                  /*--!  !01 : AFFILIE SECONDAIRE   */        
                                  /*--!  !02 : AFFILIE PRINCIPAL    */        
                                  /*--!  !03 : BILINGUE FRANCAIS    */        
                                  /*--!  !04 : BILINGUE NEERLANDAIS */        
                                  /*--!  !11 : EPOUX DE ...         */        
                                  /*--!  !12 : EPOUDE DE ...        */        
                                  /*--!  !13 : ENFANT DE ...        */        
                                  /*--!  !14 : PARENT DE ...        */        
                                  /*--!  !15 : CONCUBIN DE ...      */        
                                  /*--!  !16 : CONCUBINE DE ...     */        
                                  /*--!  !17 : DIVERS DE ...        */        
                                  /*--!  !18 : DIVERSES DE ...      */        
                                  /*--!  !29 : CLIENT A REFUSER     */        
                                  /*--!  !30 : CHGT ADRESSE EN COUR */        
                                  /*--!  !31 : VIP                  */        
                                  /*--!  !32 : VIP TRES INPORTANT   */        
                                  /*--!  !33 : PAS D'AGENDA         */        
                                  /*--!  !34 : CLIENT CCB           */        
                                  /*--!  !35 : CLIENT PASSIF        */        
                                  /*--!  !36 : MEMBRE DU PERSONNEL  */        
                                  /*--!  !37 : PAS DE MAILING       */        
                                  /*--!  !38 : CLIENT A SURVEILLER  */        
                                  /*--!  !39 : EXPERT AUTO ^AUTOMAT */        
                                  /*--!  !40 : CONVENTION DE GESTIO */        
                                  /*--!  !41 : CLIENT FICTIF        */        
                                  /*--!  !42 : MEMO                 */        
                                  /*--!  !43 : CHGT D'ADRESSE EN CO */        
                                  /*--!  !44 : AFFILIE PERIME       */        
                                  /*--!  !45 : CONTENTIEUX          */        
                                  /*--!  !46 : CLUB BLOSO           */        
                                  /*--!  !47 : MEMBRE VLB           */        
                                  /*--!  !48 : PAS DE TP INFORMEX   */        
                                  /*--!  !49 : FONCTIONNAIRE CEE    */        
                                  /*--!  !50 : A NE PAS RAPPELER    */        
                                  /*--!  !51 : ADRESSE SOPRESS      */        
                                  /*--!  !52 : CONTRAT BILINGUE     */        
                                  /*--!  !53 : AFFILIE DECEDE       */        
                                  /*--!  !54 : PRODUCTION FICTIVE   */        
                                  /*--!  !55 : GESTION PROTEGEE     */        
                                  /*--!  !56 : CLIENT CGFP          */        
                                  /*--!  !57 : CELLULE DE DISTRIBUT */        
                                  /*--!  !58 : GESTION SIN. DEDICAE */        
                                  /*--!  !60 : DOCUMENT EURO/DEFAUT */        
                                  /*--!  !61 : PROSPECT             */        
                                  /*--!  !62 : SUIVI GESTIONNAIRE   */        
                                  /*--!  !63 : MEMBRE               */        
                                  /*--!  !64 : FAUX-MEMBRE          */        
                                  /*--!  !65 : IMPOSABLE            */        
                                  /*--!  !72 : ACTIF DEFINITIF      */        
                                  /*--!  !73 : ACTIF TEMPORAIRE     */        
                                  /*--!  !74 : INACTIF              */        
                                  /*--!  !75 : RETRAITE             */        
                                  /*--!  !76 : UTILISATEUR EXTERNE  */        
                                  /*--!  !77 : FONCTIONNAIRE        */        
                                  /*--!  !78 : CTRL RSQ : W=BLOQUE  */        
                                  /*--!  !79 : CTRL RSQ : S=SURVEIL */        
                                  /*--!  !80 : SMAP-INFOS           */        
                                  /*--!  !81 : FICHE PERSONNELLE V  */        
                                  /*--!  !82 : NOUV. ADR. INCONNUE  */        
                                  /*--!  !83 : BENEFICIE DE 3 APPEL */        
                                  /*--!  !     AU CC JURIDIQUE LEGI */        
                                  /*--!  !84:FAIT PART. D'1 AFFINIT */        
                                  /*--!  !85:VIE PURE (AME)         */        
                                  /*--!  !86:ENVOI ENQUETE MIEUX... */        
                                  /*--!  !87:RETOUR ENQ. MIEUX...   */        
                                  /*--!  !88:RETOUR ENQ.MIEUX+SIGN. */        
                                  /*--!  !89 : SPONSORING (VIP)     */        
        4 NOTL1AF  DEC FIXED(3),  ##############################################        
        4 NOTL2AF  DEC FIXED(9),  ##############################################        
        4 NONATAF  DEC FIXED(11), #############################################        
        4 DADERMJ  DEC FIXED(7),  ##############################################        
        4 CDLGRUE  CHAR(1),       ###################################################        
        4 NOAF1EX  DEC FIXED(7),  ##############################################        
        4 NOAF2EX  BIN FIXED(15), #############################################        
        4 CDPOGEO  DEC FIXED(7),  ##############################################        
        4 NBFICDO  BIN FIXED(15), #############################################        
        4 FILL_22  CHAR(50),         ####################################################        
 /*****************************************************************/        
 /* SEGMENT ENTETE POLICE                                         */        
 /*****************************************************************/        
       3 POLIC_O,        
        4 NOIDPOL  DEC FIXED(8),   ###############################################        
        4 CDTYPOL  CHAR(2),        ####################################################        
        4 CDLGPOL  CHAR(1),        ####################################################        
        4 CDETAPO  CHAR(1),        ####################################################        
                                   /*--!  !A : ACTIVE                */        
                                   /*--!  !C : CLOTUREE / ANNULEE    */        
                                   /*--!  !P : PASSIVE / EN ATTENTE  */        
                                   /*--!  !S : SUSPENDUE/SANS SUITE  */        
        4 CDCMPRO  CHAR(1),        ####################################################        
        4 CDCMGES  CHAR(8),        ####################################################        
        4 NUSOUPO  DEC FIXED(4),   ###############################################        
                                   /*--!  !EN IE, VAUT 9999 POUR LE  */        
                                   /*--!  !NUMERO DE CI 000000       */        
        4 CDINSPO  CHAR(2),        ####################################################        
        4 CDINTAG  DEC FIXED(7),   ###############################################        
                                   /*--!  !A REMPLACER PAR CDAGINT   */        
        4 NOINTPO  CHAR(12),       ###################################################        
        4 CDMODPA  CHAR(1),        ####################################################        
        4 CDREAPO  CHAR(1),        ####################################################        
        4 CDGAGPO  CHAR(1),        ####################################################        
        4 NODERAV  DEC FIXED(3),   ###############################################        
        4 NBEXEPO  DEC FIXED(3),   ###############################################        
        4 NODOMPO  DEC FIXED(10),  ##############################################        
        4 NOCPTPO  DEC FIXED(10),  ##############################################        
        4 CDEGAPO  CHAR(1),        ####################################################        
        4 TBCDPOL(24)  BIT(1),     #################################################        
                                   /*--!  !01: POLICE COURT TERME    */        
                                   /*--!  !02: FACT MS PAR SOUS GR   */        
                                   /*--!  !03: PRESENCE AD. POLICE   */        
                                   /*--!  !04: MUTATION DE SOCIETE   */        
                                   /*--!  !       SMAP <---> MEGA    */        
                                   /*--!  !05: MS : ATTESTATION      */        
                                   /*--!  !06: BILINGUE/TRILINGUE    */        
                                   /*--!  !07: SINISTRE EN D1        */        
                                   /*--!  !08: SINISTRE EN SA        */        
                                   /*--!  !09: SINISTRE EN AC        */        
                                   /*--!  !10: MEMO POLICE           */        
                                   /*--!  !22: POLICE SOUS PACKAGE   */        
                                   /*--!  !23: POLICE PACKAGE        */        
                                   /*--!  !24: CHGT AFFILIE          */        
        4 NOIDMAT  CHAR(14),       ###################################################        
        4 NOHDRLT  BIN FIXED(15),  ##############################################        
        4 CDDVPOL  CHAR(3),        ####################################################        
        4 CDSTAPO  CHAR(1),        ####################################################        
                                   /*--!  !0: POLICE INCOMPLETE      */        
                                   /*--!  !1: PRODUCT. INDIV. OK     */        
                                   /*--!  !2: FACTURAT.INDIV. OK     */        
                                   /*--!  !3: FACTURAT.PACKAGE OK    */        
        4 CDAGINT  CHAR(6),        ####################################################        
        4 NORFEXT  CHAR(12),       ###################################################        
        4 CDTYDOC  CHAR(1),        ####################################################        
        4 FILLER   CHAR(9),        ####################################################        
        4 FILL_23  CHAR(41),         ####################################################        
 /*****************************************************************/        
 /* SEGMENT ADRESSE COURRIER PAR POLICE                           */        
 /*****************************************************************/        
       3 ADPOL_O,        
        4 CDADPOL  CHAR(1),               #####################################################        
        4 LTNMPOL  CHAR(30),              ####################################################        
        4 CDRSPOL  CHAR(1),               #####################################################        
        4 LTRUEPO  CHAR(30),              ####################################################        
        4 CDCPOPO  CHAR(6),               #####################################################        
        4 LTLOCPO  CHAR(25),              ####################################################        
        4 CDPAYPO  CHAR(3),               #####################################################        
        4 FILL_24  CHAR(50),         ####################################################        
 /*****************************************************************/        
 /* SEGMENT ADRESSE AFFILIE                                       */        
 /*****************************************************************/        
       3 ADAFF_O,        
        4 LTRUEAF  CHAR(25),                ####################################################        
        4 CDCPOAF  CHAR(6),                 #####################################################        
        4 LTLOCAF  CHAR(25),                ####################################################        
        4 CDPAYAF  CHAR(3),                 #####################################################        
        4 FILL_25  CHAR(50),         ####################################################        
 /*****************************************************************/        
 /* SEGMENT ADRESSE COURRIER PAR AFFILIE                          */        
 /*****************************************************************/        
       3 ADCOU_O,        
        4 CDADCOU  CHAR(1),               #####################################################        
        4 LTNMCOU  CHAR(30),              ####################################################        
        4 CDRSCOU  CHAR(1),               #####################################################        
        4 LTRUECO  CHAR(30),              ####################################################        
        4 CDCPOCO  CHAR(6),               #####################################################        
        4 LTLOCCO  CHAR(25),              ####################################################        
        4 CDPAYCO  CHAR(3),               #####################################################        
        4 FILL_26  CHAR(50),         ####################################################        
 /*****************************************************************/        
 /* SEGMENT RELATIONS ENTRE AFFILIES (DOUBLONS)                   */        
 /*****************************************************************/        
       3 RELAT_O,        
        4 CDNATRE  CHAR(2),         #####################################################        
        4 NOAFFRE  DEC FIXED(7),    ################################################        
        4 FILL_27  CHAR(50),         ####################################################        
 /*****************************************************************/        
 /* SEGMENT CREATION D ENSEMBLES                                  */        
 /*****************************************************************/        
       3 ENSEM_O,        
        4 TBIDENS(2)  CHAR(7),      ############################################        
        4 FILL_28  CHAR(50),         ####################################################        
 /*****************************************************************/        
 /* SEGMENT DESTINE AUX DONNEES COMPLEMENTAIRES                   */        
 /*****************************************************************/        
       3 COMPL_O,        
        4 NOIDAFF  DEC FIXED(7),    ################################################        
        4 CDTYINF  CHAR(2),         #####################################################        
        4 LTNMINF  CHAR(30),        ####################################################        
        4 FILL_29  CHAR(50),         ####################################################        
 /*****************************************************************/        
 /* SEGMENT HISTORIQUE AFFILIE                                    */        
 /*****************************************************************/        
       3 HISAF_O,        
        4 NOIDAFF  DEC FIXED(7),      ################################################        
        4 NOSQAFF  BIN FIXED(15),     ###############################################        
        4 NBSQAFF  BIN FIXED(15),     ###############################################        
        4 CDCMGES  CHAR(8),           #####################################################        
        4 DAMAJAF  DEC FIXED(7),      ################################################        
        4 HHMAJAF  DEC FIXED(7),      ################################################        
        4 NOIDTER  CHAR(8),           #####################################################        
        4 LTNMAFF  CHAR(30),          ####################################################        
        4 LTEXTNM  CHAR(30),          ####################################################        
        4 CDRSAFF  CHAR(1),           #####################################################        
        4 CDSEXAF  CHAR(1),           #####################################################        
        4 CDLGEAF  CHAR(1),           #####################################################        
        4 DANAIAF  DEC FIXED(10),     ###############################################        
        4 LTNMCDS  CHAR(21),          ####################################################        
        4 LTRUEAF  CHAR(25),          ####################################################        
        4 CDCPOAF  CHAR(6),           #####################################################        
        4 LTLOCAF  CHAR(25),          ####################################################        
        4 CDPAYAF  CHAR(3),           #####################################################        
        4 LTLINAI  CHAR(30),          ####################################################        
        4 LTPROAF  CHAR(30),          ####################################################        
        4 NOTL1AF  DEC FIXED(3),      ################################################        
        4 NOTL2AF  DEC FIXED(9),      ################################################        
        4 NOTLBUR  CHAR(16),          ####################################################        
        4 NBFACAF  PIC'9',            ######################################################        
        4 CDINSAF  CHAR(2),           #####################################################        
        4 NOCPTAF  PIC'(12)9',        ##################################################        
        4 LTCOMAF  CHAR(30),          ####################################################        
        4 LTNMCOU  CHAR(30),          ####################################################        
        4 CDRSCOU  CHAR(1),           #####################################################        
        4 LTRUECO  CHAR(30),          ####################################################        
        4 CDCPOCO  CHAR(6),           #####################################################        
        4 LTLOCCO  CHAR(25),          ####################################################        
        4 CDPAYCO  CHAR(3),           #####################################################        
        4 LTNM1MB  CHAR(30),          ####################################################        
        4 LTNM2MB  CHAR(30),          ####################################################        
        4 NOHA1AF  BIN FIXED(15),     ###############################################        
        4 NOHA2AF  CHAR(4),           #####################################################        
        4 NOFA1AF  DEC FIXED(3),      ################################################        
        4 NOFA2AF  DEC FIXED(9),      ################################################        
        4 CDCHAL1  CHAR(2),           #####################################################        
        4 CDETCIV  CHAR(2),           #####################################################        
        4 CDORGAF  CHAR(2),           #####################################################        
        4 CDRCTAF  CHAR(2),           #####################################################        
        4 NOGSMAF  CHAR(15),          ####################################################        
        4 DADECAF  DEC FIXED(7),      ################################################        
        4 CDNATAF  CHAR(3),           #####################################################        
        4 RSVHIST  CHAR(93),          ####################################################        
        4 FILL_30  CHAR(50),         ####################################################        
 /*****************************************************************/        
 /* SEGMENT SIGNALETIQUE ACTIVITES                                */        
 /*****************************************************************/        
       3 CLACT_O,        
        4 NOIDCLI  DEC FIXED(9),        ################################################        
        4 TBEGCOD(16)  BIT(1),          ##################################################        
        4 FILL_31  CHAR(50),         ####################################################        
 /*****************************************************************/        
 /* SEGMENT ACTIVITES PROFESSIONELLES                             */        
 /*****************************************************************/        
       3 CLPRO_O,        
        4 DAEFPRO  DEC FIXED(7),        #############################################        
        4 NOSQRUE  BIN FIXED(15),       ############################################        
        4 CDTYPRO  CHAR(2),             ##################################################        
        4 CDTYEMP  CHAR(2),             ##################################################        
        4 CDPOEMP  CHAR(4),             ##################################################        
        4 LOPOEMP  CHAR(20),            #################################################        
        4 TXDETVA  DEC FIXED(3),        #############################################        
        4 NUDETVA  CHAR(9),             ##################################################        
        4 LTCMPRO  CHAR(40),            #################################################        
        4 LTCMEMP  CHAR(40),            #################################################        
        4 CDHANDI  CHAR(1),             ##################################################        
        4 CDRETVA  CHAR(1),             ##################################################        
        4 CDASTVA  CHAR(1),             ##################################################        
        4 CDTRANS  CHAR(1),             ##################################################        
        4 TBEGCOD(16)  BIT(1),          ###############################################        
                                       /*--!  !01:SECTEUR PRIVE   */        
                                       /*--!  !02:SECTEUR PUBLIC  */        
                                       /*--!  !03:SECT.ASSOCIATIF */        
        4 CDFONCT  CHAR(1),             ##################################################        
        4 CDGEPRO  CHAR(2),             ##################################################        
        4 CDGEEMP  CHAR(2),             ##################################################        
        4 CDTAENT  CHAR(2),             ##################################################        
        4 FILL_32  CHAR(50),         ####################################################        
 /*****************************************************************/        
 /* SEGMENT SIGNALETIQUE ACTIVITES COMPLEMENTAIRES                */        
 /*****************************************************************/        
       3 CLACC_O,        
        4 NOSQACC  BIN FIXED(15),       #############################################        
        4 CDTYACC  CHAR(2),             ###################################################        
        4 LTCMACC  CHAR(40),            ##################################################        
        4 TBEGCOD(16)  BIT(1),          ################################################        
        4 CDTYASC  CHAR(2),             ###################################################        
        4 LTLIACC  CHAR(30),            ##################################################        
        4 FILL_33  CHAR(50),         ####################################################        
 /*****************************************************************/        
 /* SEGMENT SIGNALETIQUE DES CONTACTS                             */        
 /*****************************************************************/        
       3 CLCON_O,        
        4 NOIDCLI  DEC FIXED(9),        ################################################        
        4 TBEGCOD(16)  BIT(1),          ##################################################        
        4 FILL_34  CHAR(50),         ####################################################        
 /*****************************************************************/        
 /* SEGMENT SIGNALETIQUE DES ADRESSES                             */        
 /*****************************************************************/        
       3 CLADR_O,        
        4 CDTYADR  CHAR(2),           #####################################################        
        4 DAEFPRO  DEC FIXED(7),      ################################################        
        4 LTADNO1  CHAR(30),          ####################################################        
        4 LTADNO2  CHAR(30),          ####################################################        
        4 CDADRSO  CHAR(3),           #####################################################        
        4 LTADADR  CHAR(30),          ####################################################        
        4 NOADCPO  CHAR(5),           #####################################################        
        4 NOADBTE  CHAR(5),           #####################################################        
        4 CDADCPO  CHAR(6),           #####################################################        
        4 LOADLOC  CHAR(20),          ####################################################        
        4 CDADPAY  CHAR(3),           #####################################################        
        4 NUADTEL  CHAR(15),          ####################################################        
        4 NUADFAX  CHAR(15),          ####################################################        
        4 TBEGCOD(16)  BIT(1),        ##################################################        
        4 NOCPLPR  CHAR(10),          ####################################################        
        4 FILL_35  CHAR(50),         ####################################################        
 /*****************************************************************/        
 /* SEGMENT SIGNALETIQUE COMPLEMENT D ADRESSE                     */        
 /*****************************************************************/        
       3 CLCPL_O,        
        4 CDTYACC  CHAR(2),              #####################################################        
        4 LTCLCPL  CHAR(30),             ####################################################        
        4 TBEGCOD(16)  BIT(1),           ##################################################        
        4 FILL_36  CHAR(50),         ####################################################        
 /*****************************************************************/        
 /* SEGMENT SIGNALETIQUE DES CONTACTS PRIVILEGIES                 */        
 /*****************************************************************/        
       3 CLCOP_O,        
        4 NOIDAFF(10)  CHAR(6),           #################################################        
        4 TBEGCOD(16)  BIT(1),            ##################################################        
        4 FILL_37  CHAR(50),         ####################################################        
 /*****************************************************************/        
 /* SEGMENT COMPLEMENT SIGNALETIQUE                               */        
 /*****************************************************************/        
       3 CLCOM_O,        
        4 NOIDCLI  DEC FIXED(9),     ################################################        
        4 DADECAF  DEC FIXED(7),     ################################################        
        4 DAPERMI  DEC FIXED(7),     ################################################        
        4 TBNBCTC(5),        
         5 CDTYCTC  CHAR(2),         ####################################################        
         5 NBCONTR  DEC FIXED(7),    ###############################################        
        4 NBENFAN  BIN FIXED(15),    ###############################################        
        4 NBENFHA  BIN FIXED(15),    ###############################################        
        4 NBAUTCH  BIN FIXED(15),    ###############################################        
        4 NOID_CI  DEC FIXED(7),     ################################################        
        4 DACIDEN  DEC FIXED(7),     ################################################        
        4 DAENVAG  DEC FIXED(7),     ################################################        
        4 NBENVAG  DEC FIXED(3),     ################################################        
        4 TBEGCOD(16)  BIT(1),       ##################################################        
                                     /*--!  !01 CD CHEF DE MENA.:'Y'  */        
                                     /*--!  !02 CD CHEF DE MENA.:'N'  */        
                                     /*--!  !03 CD MDP : ENVOI CLIENT */        
                                     /*--!  !04 CD ACC. INFOS NET     */        
        4 NOPERMI  CHAR(10),         ####################################################        
        4 CDLGSEC  CHAR(1),          #####################################################        
        4 CDORAFF  CHAR(2),          #####################################################        
        4 CDNATCL  CHAR(3),          #####################################################        
        4 LTPRECL  CHAR(15),         ####################################################        
        4 NUGSMCL  CHAR(15),         ####################################################        
        4 NOSEQUI  CHAR(3),          ####################################################        
                                     /*--!  !GENERE ALEATOIREMENT    */        
        4 CDGSTAM  CHAR(1),          ####################################################        
                                     /*--!  !VAL. POSS : I/R/S/BLANC */        
                                     /*--!  !I : ISRT 1ERE DEM DE MDP*/        
                                     /*--!  !R : NEW MDP-GARDE USERID*/        
                                     /*--!  !S : SUP MDP POUR USERID */        
        4 CDGSPWD  CHAR(1),          ####################################################        
                                     /*--!  !EMPECHE LA DEM. DE PLS  */        
                                     /*--!  !MDP SIMULTANEMENT       */        
                                     /*--!  !VAL. POSS : E/U/P/BLANC */        
                                     /*--!  !E : DMD DE MDP EN COURS */        
                                     /*--!  !U : USERID EXPEDIE      */        
                                     /*--!  !P : MDP EXPEDIE         */        
        4 CDORIDE  CHAR(1),          #####################################################        
                                     /*--!  !VAL. POSS : ALPHANUM.    */        
                                     /*--!  !A: ASSURANCE             */        
                                     /*--!  !B: BANQUE                */        
        4 CDWOCK1  CHAR(1),          #####################################################        
        4 CDWOCK2  CHAR(1),          #####################################################        
        4 CDETCIV  CHAR(2),          #####################################################        
        4 CDCHAL1  CHAR(2),          #####################################################        
        4 CDCHAL2  CHAR(3),          #####################################################        
        4 CDMAJCL  CHAR(2),          #####################################################        
        4 LTMAJCL  CHAR(30),         ####################################################        
        4 AFFINIT(5),        
         5 CDAFIN1  CHAR(2),         ####################################################        
         5 CDAFIN2  CHAR(15),        ###################################################        
         5 CDFAMIL  CHAR(1),         ####################################################        
        4 CDCIDEN  CHAR(1),          #####################################################        
        4 DADERMS  PIC'(7)9',        ###################################################        
        4 NBCONMS  PIC'(5)9',        ###################################################        
        4 DAEXPCI  PIC'(7)9',        ###################################################        
        4 DAABNWL  PIC'(7)9',        ###################################################        
        4 CDSTACI  CHAR(1),          #####################################################        
        4 DASTACI  PIC'(07)9',       ##################################################        
        4 NOBCEAF  CHAR(10),         ####################################################        
        4 CDCTF2F  CHAR(1),          #####################################################        
        4 CDPEP    CHAR(1),          #####################################################        
        4 CDCOMMEN CHAR(1),          #####################################################        
        4 CDPTIENF CHAR(1),          #####################################################        
        4 CDEINVO  CHAR(1),          #####################################################        
        4 FILL_38  CHAR(49),         ####################################################        
 /*****************************************************************/        
 /* SEGMENT SIGNALETIQUE DES RELATIONS                            */        
 /*****************************************************************/        
       3 CLREL_O,        
        4 NOSEQRE  BIN FIXED(15),          ###############################################        
        4 NOIDREL  CHAR(2),                #####################################################        
        4 CDTYREL  CHAR(1),                #####################################################        
        4 NOCLREL  DEC FIXED(7),           ################################################        
        4 TBEGCOD(16)  BIT(1),             ##################################################        
        4 REC_VOTE  CHAR(27),              ###################################################        
        4 DAASSEM  DEC FIXED(7),           ################################################        
        4 FILL_39  CHAR(50),         ####################################################        
 /*****************************************************************/        
 /* SEGMENT AUTRES PRENOMS                                        */        
 /*****************************************************************/        
       3 CLPRE_O,        
        4 LTPRCL1  CHAR(15),                ####################################################        
        4 LTPRCL2  CHAR(15),                ####################################################        
        4 TBEGCOD(16)  BIT(1),              ##################################################        
        4 FILL_40  CHAR(50),         ####################################################        
 /*****************************************************************/        
 /* SEGMENT SIGNALETIQUE ADRESSE E-MAIL                           */        
 /*****************************************************************/        
       3 CLEML_O,        
        4 DAADEML  DEC FIXED(7),      ################################################        
        4 TBEGCOD(16)  BIT(1),        ##################################################        
                                      /*--!  !1 - ADRESSE INACTIVE    */        
        4 LTADEML  CHAR(50),          ####################################################        
        4 LTORIGI  CHAR(10),          ####################################################        
        4 CDPREML  CHAR(1),           #####################################################        
        4 FILL_41  CHAR(50),         ####################################################        
 /*****************************************************************/        
 /* SEGMENT SIGNALETIQUE DEVIS                                    */        
 /*****************************************************************/        
       3 CLDEV_O,        
        4 DADVINT  DEC FIXED(11),   #############################################        
        4 NODVINT  DEC FIXED(13),   #############################################        
        4 CDIDINT  DEC FIXED(9),    ##############################################        
        4 HHMMINT  DEC FIXED(5),    ##############################################        
        4 TBEGCOD(16)  BIT(1),      ################################################        
                                    /*--!  ! 1 - AFFICHABLE MYSMAP  */        
                                    /*--!  ! 2 - DELETE MYSMAP      */        
                                    /*--!  ! 3 - SAVE CRM PUR       */        
        4 CDTYPDV  CHAR(2),         ###################################################        
        4 CDORIDV  CHAR(2),         ###################################################        
        4 CDTYPRO  CHAR(7),         ###################################################        
        4 FILL_42  CHAR(50),         ####################################################        
 /*****************************************************************/        
 /* SEGMENT PRODUIT CLIENT                                        */        
 /*****************************************************************/        
       3 PROCL_O,        
 /*K*/  4 NOIDAFF  DEC FIXED(7),     /*NO!  !NO D'AFFILIE             */        
 /*K*/  4 NOIDPOL  DEC FIXED(9),     /*NO!  !NO. DE POLICE            */        
        4 NOIDPAC  DEC FIXED(9),     ################################################        
        4 CDTYPOL  CHAR(2),          #####################################################        
        4 CDIDPRD  CHAR(8),          #####################################################        
        4 CDIDGES  CHAR(8),          #####################################################        
        4 CDCMPRO  CHAR(1),          #####################################################        
                                     /*--!  ! 1: LIEGE                */        
                                     /*--!  ! 2  HASSELT              */        
                                     /*--!  ! 3: BRUXELLES            */        
                                     /*--!  ! ^: INCONNU              */        
        4 CDEGPOL  CHAR(1),          #####################################################        
                                     /*--!  ! A: ACTIF                */        
                                     /*--!  ! C: CLOTURE              */        
                                     /*--!  ! P: PASSIF               */        
                                     /*--!  ! S: SUSPENDU             */        
                                     /*--!  ! D: DEVIS/PROJET         */        
                                     /*--!  ! O: OFFRE                */        
                                     /*--!  ! ?: INCONNU              */        
        4 CDCATPO  CHAR(11),         ####################################################        
        4 CDOCAAR  CHAR(4),          #####################################################        
        4 CDOCADP  CHAR(4),          #####################################################        
        4 CDMOTDP  CHAR(2),          #####################################################        
        4 CDGRPAF  CHAR(7),          #####################################################        
        4 CDFRAPO  CHAR(1),          #####################################################        
        4 CDPREML  CHAR(1),          #####################################################        
                                     /*--!  ! S: SEMESTRIEL           */        
                                     /*--!  ! M: MENSUEL              */        
                                     /*--!  ! Q: QUADRIMESTRIEL       */        
                                     /*--!  ! T: TRIMESTRIEL          */        
                                     /*--!  ! B: BIMESTRIEL           */        
                                     /*--!  ! U: UNIQUE               */        
                                     /*--!  ! ^: INCONNU              */        
        4 CDFRFRA  CHAR(1),          #####################################################        
                                     /*--!  ! Y: YES                  */        
                                     /*--!  ! N: NO                   */        
                                     /*--!  ! ^: INCONNU              */        
        4 CDADPOL  CHAR(1),          #####################################################        
                                     /*--!  ! Y: YES                  */        
                                     /*--!  ! N: NO                   */        
                                     /*--!  ! ^: INCONNU              */        
        4 CDDVPOL  CHAR(3),          #####################################################        
                                     /*--!  ! BEF                     */        
                                     /*--!  ! EUR                     */        
        4 CDCLAPO  CHAR(1),          #####################################################        
                                     /*--!  ! G: GROUPE               */        
                                     /*--!  ! I: INDIVIDUELLE         */        
                                     /*--!  ! ^: INCONNU              */        
        4 NOCPTPO  CHAR(12),         ####################################################        
        4 NODOMPO  CHAR(12),         ####################################################        
        4 NBRAPPO  PIC'9',           ######################################################        
        4 NBSINAC  DEC FIXED(7),     ################################################        
        4 DACMPSI  DEC FIXED(7),     ################################################        
        4 DAEFFPO  DEC FIXED(7),     ################################################        
        4 DAEXPPO  DEC FIXED(7),     ################################################        
        4 DAECHPO  DEC FIXED(4),     ################################################        
        4 PRTRMBA  DEC FIXED(15),    ###############################################        
        4 PRTRMTO  DEC FIXED(15),    ###############################################        
        4 LTINFCP  CHAR(220),        ###################################################        
        4 FILL_43  CHAR(50),         ####################################################        
 /*****************************************************************/        
 /* <<< EXPLORATION DES RELATIONS D UN CLIENT (RELAT)             */        
 /*****************************************************************/        
       3 NBELMTB_RLA  BIN FIXED(15), ############################################        
       3 TBIDELM_RLA(50),        
         4 CDNATRE    CHAR(2),       #################################################        
         4 NOAFFRE    FIXED (7),     ###############################################        
 /*****************************************************************/        
 /* <<< EXPLORATION DES RELATIONS D UN CLIENT (CLREL)             */        
 /*****************************************************************/        
       3 NBELMTB_REL  BIN FIXED(15), ############################################        
       3 TBIDELM_REL(50),        
        4 NOSEQRE  BIN FIXED(15),          ###############################################        
        4 NOIDREL  CHAR(2),                #####################################################        
        4 CDTYREL  CHAR(1),                #####################################################        
        4 NOCLREL  DEC FIXED(7),           ################################################        
        4 TBEGCOD(16)  BIT(1),             ##################################################        
        4 REC_VOTE  CHAR(27),              ###################################################        
        4 DAASSEM  DEC FIXED(7),           ################################################        
 /*****************************************************************/        
 /* <<< EXPLORATION DES HISTORIQUES D'UN CLIENT                   */        
 /*****************************************************************/        
       3 NBELMTB_HIS  BIN FIXED(15), ############################################        
       3 TBIDELM_HIS(50),        
        4 NOSQAFF  BIN FIXED(15),     ###############################################        
        4 NBSQAFF  BIN FIXED(15),     ###############################################        
        4 CDCMGES  CHAR(8),           #####################################################        
        4 DAMAJAF  DEC FIXED(7),      ################################################        
        4 HHMAJAF  DEC FIXED(7),      ################################################        
        4 NOIDTER  CHAR(8),           #####################################################        
        4 LTNMAFF  CHAR(30),          ####################################################        
        4 LTEXTNM  CHAR(30),          ####################################################        
        4 CDRSAFF  CHAR(1),           #####################################################        
        4 CDSEXAF  CHAR(1),           #####################################################        
        4 CDLGEAF  CHAR(1),           #####################################################        
        4 DANAIAF  DEC FIXED(10),     ###############################################        
        4 LTNMCDS  CHAR(21),          ####################################################        
        4 LTRUEAF  CHAR(25),          ####################################################        
        4 CDCPOAF  CHAR(6),           #####################################################        
        4 LTLOCAF  CHAR(25),          ####################################################        
        4 CDPAYAF  CHAR(3),           #####################################################        
        4 LTLINAI  CHAR(30),          ####################################################        
        4 LTPROAF  CHAR(30),          ####################################################        
        4 NOTL1AF  DEC FIXED(3),      ################################################        
        4 NOTL2AF  DEC FIXED(9),      ################################################        
        4 NOTLBUR  CHAR(16),          ####################################################        
        4 NBFACAF  PIC'9',            ######################################################        
        4 CDINSAF  CHAR(2),           #####################################################        
        4 NOCPTAF  PIC'(12)9',        ##################################################        
        4 LTCOMAF  CHAR(30),          ####################################################        
        4 LTNMCOU  CHAR(30),          ####################################################        
        4 CDRSCOU  CHAR(1),           #####################################################        
        4 LTRUECO  CHAR(30),          ####################################################        
        4 CDCPOCO  CHAR(6),           #####################################################        
        4 LTLOCCO  CHAR(25),          ####################################################        
        4 CDPAYCO  CHAR(3),           #####################################################        
        4 LTNM1MB  CHAR(30),          ####################################################        
        4 LTNM2MB  CHAR(30),          ####################################################        
        4 NOHA1AF  BIN FIXED(15),     ###############################################        
        4 NOHA2AF  CHAR(4),           #####################################################        
        4 NOFA1AF  DEC FIXED(3),      ################################################        
        4 NOFA2AF  DEC FIXED(9),      ################################################        
        4 CDCHAL1  CHAR(2),           #####################################################        
        4 CDETCIV  CHAR(2),           #####################################################        
        4 CDORGAF  CHAR(2),           #####################################################        
        4 CDRCTAF  CHAR(2),           #####################################################        
        4 NOGSMAF  CHAR(15),          ####################################################        
        4 DADECAF  DEC FIXED(7),      ################################################        
        4 CDNATAF  CHAR(3),           #####################################################        
        4 RSVHIST  CHAR(93),          ####################################################        
 /*****************************************************************/        
 /* <<< EXPLORATION DES ADRESSE E-MAIL                            */        
 /*****************************************************************/        
       3 NBELMTB_EML  BIN FIXED(15), ############################################        
       3 TBIDELM_EML(50),        
        4 DAADEML  DEC FIXED(7),      ################################################        
        4 TBEGCOD(16)  BIT(1),        ##################################################        
                                      /*--!  !1 - ADRESSE INACTIVE    */        
        4 LTADEML  CHAR(50),          ####################################################        
        4 LTORIGI  CHAR(10),          ####################################################        
        4 CDPREML  CHAR(1),           #####################################################        
 /*****************************************************************/        
 /* <<< EXPLORATION DES ENSEMBLES                                 */        
 /*****************************************************************/        
       3 NBELMTB_ENS  BIN FIXED(15), ############################################        
       3 TBIDELM_ENS(50),        
        4 TBIDENS(2)  CHAR(7),       ##################################################        
 /*****************************************************************/        
 /* <<< EXPLORATION DES POLICES                                   */        
 /*****************************************************************/        
       3 NBELMTB_POL  BIN FIXED(15), ############################################        
       3 TBIDELM_POL(99),        
        4 NOIDPOL  DEC FIXED(8),   ###############################################        
        4 CDTYPOL  CHAR(2),        ####################################################        
        4 CDINTAG  DEC FIXED(7),   ###############################################        
                                   /*--!  !A REMPLACER PAR CDAGINT   */        
        4 NODERAV  DEC FIXED(3),   ###############################################        
        4 TBCDPOL(24)  BIT(1),     #################################################        
                                   /*--!  !01: POLICE COURT TERME    */        
                                   /*--!  !02: FACT MS PAR SOUS GR   */        
                                   /*--!  !03: PRESENCE AD. POLICE   */        
                                   /*--!  !04: MUTATION DE SOCIETE   */        
                                   /*--!  !       SMAP <---> MEGA    */        
                                   /*--!  !05: MS : ATTESTATION      */        
                                   /*--!  !06: BILINGUE/TRILINGUE    */        
                                   /*--!  !07: SINISTRE EN D1        */        
                                   /*--!  !08: SINISTRE EN SA        */        
                                   /*--!  !09: SINISTRE EN AC        */        
                                   /*--!  !10: MEMO POLICE           */        
                                   /*--!  !22: POLICE SOUS PACKAGE   */        
                                   /*--!  !23: POLICE PACKAGE        */        
                                   /*--!  !24: CHGT AFFILIE          */        
 /*****************************************************************/        
 /* <<< EXPLORATION DES PRODUITS                                  */        
 /*****************************************************************/        
       3 NBELMTB_PRO  BIN FIXED(15), ############################################        
       3 TBIDELM_PRO(50),        
        4 NOIDPOL  DEC FIXED(9),   ###############################################        
        4 NOIDPAC  DEC FIXED(9),   ###############################################        
        4 CDTYPOL  CHAR(2),        ####################################################        
         
 /*****************************************************************/        
 /* <<< EXPLORATION DES DEVIS                                     */        
 /*****************************************************************/        
       3 NBELMTB_DEV  BIN FIXED(15), ##########################################        
       3 TBIDELM_DEV(99),        
        4 DADVINT  DEC FIXED(11),   #############################################        
        4 NODVINT  DEC FIXED(13),   #############################################        
        4 CDIDINT  DEC FIXED(9),    ##############################################        
        4 HHMMINT  DEC FIXED(5),    ##############################################        
        4 TBEGCOD(16)  BIT(1),      ################################################        
                                    /*--!  ! 1 - AFFICHABLE MYSMAP  */        
                                    /*--!  ! 2 - DELETE MYSMAP      */        
                                    /*--!  ! 3 - SAVE CRM PUR       */        
        4 CDTYPDV  CHAR(2),         ###################################################        
        4 CDTYPRO  CHAR(7),         ###################################################        
        4 CDORIDV  CHAR(2);         ###################################################        
         
         
 /* AFIN D'EVITER LES PROBLEMES DE STRUCTURE (DESCRIPTOR), JE REDEFINIS        
    LE NOUVEAU CHAMPS SUR LES FILLERS DES STRUCTURE INPUT ET OUTPUT        
    ==> LA STRUCTURE NE CHANGE DONC PAS ET LES PROGRAMMES UTILISANT        
    LE KS1005 NE SONT PAS A RECOMPILER */        
         
 DCL CDDEFCT_I  CHAR(02)  BASED(ADDR(KS1005J.INPUT.CLPRO_I.FILL_11));        
 DCL CDREVME_I  CHAR(01)        
                DEF  KS1005J.INPUT.CLPRO_I.FILL_11 POS(3);        
 DCL CDENFAN_I  CHAR(01)        
                DEF  KS1005J.INPUT.CLPRO_I.FILL_11 POS(4);        
 DCL CDDEFCT_O  CHAR(02)  BASED(ADDR(KS1005J.OUTPUT.CLPRO_O.FILL_32));        
 DCL CDREVME_O  CHAR(01)        
                DEF  KS1005J.OUTPUT.CLPRO_O.FILL_32 POS(3);        
 DCL CDENFAN_O  CHAR(01)        
                DEF  KS1005J.OUTPUT.CLPRO_O.FILL_32 POS(4);        
         
 /*********************************************************************        
    METHODE : CONSULT_XXXXX (CONSULTATION)        
              XXXXX = AFFIL       PCB:DS101        
                      POLIC        
                      ADPOL        
                      ADAFF        
                      ADCOU        
         
              XXXXX = COMPL       PCB:DS102        
         
              XXXXX = HISAF       PCB:DS128        
         
              XXXXX = PROCL       PCB:DS129        
         
              XXXXX = CLACT       PCB:DS132        
                      CLPRO        
                      CLACC        
         
              XXXXX = CLCON       PCB:DS134        
                      CLADR        
                      CLCPL        
                      CLCOP        
         
              XXXXX = CLCOM       PCB:DS137        
                      CLREL        
                      CLPRE        
         
    METHODE : CREAT_XXXXX (CREATION)        
              XXXXX = AFFIL       PCB:DS101        
                      POLIC        
                      ADPOL        
                      ADAFF        
                      ADCOU        
                      RELAT        
                      ENSEM        
         
              XXXXX = COMPL       PCB:DS102        
         
              XXXXX = HISAF       PCB:DS128        
         
              XXXXX = CLACT       PCB:DS132        
                      CLPRO        
                      CLACC        
         
              XXXXX = CLCON       PCB:DS134        
                      CLADR        
                      CLCPL        
                      CLCOP        
         
              XXXXX = CLCOM       PCB:DS137        
                      CLREL        
                      CLPRE        
                      CLEML        
         
    METHODE : MODIF_XXX (MODIFICATION)        
              XXXXX = AFFIL       PCB:DS101        
                      POLIC        
                      ADPOL        
                      ADAFF        
                      ADCOU        
                      ENSEM        
         
              XXXXX = COMPL       PCB:DS102        
         
              XXXXX = HISAF       PCB:DS128        
         
              XXXXX = CLACT       PCB:DS132        
                      CLPRO        
                      CLACC        
         
              XXXXX = CLCON       PCB:DS134        
                      CLADR        
                      CLCPL        
                      CLCOP        
         
              XXXXX = CLCOM       PCB:DS137        
                      CLREL        
                      CLPRE        
         
    METHODE : SUPPR_XXXXX (SUPPRESSION)        
              XXXXX = AFFIL       PCB:DS101        
                      POLIC        
                      ADPOL        
                      ADAFF        
                      ADCOU        
                      RELAT       REMPLIR TOTALEMENT RELAT_I        
                      ENSEM        
         
              XXXXX = COMPL       PCB:DS102        
         
              XXXXX = HISAF       PCB:DS128        
         
              XXXXX = CLACT       PCB:DS132        
                      CLPRO        
                      CLACC        
         
              XXXXX = CLCON       PCB:DS134        
                      CLADR        
                      CLCPL        
                      CLCOP        
         
              XXXXX = CLCOM       PCB:DS137        
                      CLREL        
                      CLPRE        
                      CLEML       SUPPRESSION GLOBALE        
         
         
    METHODE : EXIST_XXXXX (EXISTENCE)        
              XXXXX = A DEFINIR        
         
    METHODES EXPLORATION: EXPLO_1P_XXXXX  1ERE PAGE        
    ====================  EXPLO_PS_XXXXX  PAGE SUIVANTE        
                          EXPLO_PP_XXXXX  PAGE PRECEDENTE        
         
         
    XXXXX = CLREL (SIGNALETIQUE DES RELATIONS)        
    XXXXX = HISAF (HISTORIQUE DU SIGNALETIQUE D UN AFFILIE)        
         
    METHODES EXPLORATION SANS PAGINATION : EXPLO_XXXXX        
    =====================================        
         
    XXXXX = RELAT (RELATION ENTRE AFFILIES)        
    XXXXX = CLEML (ADRESSES E-MAIL )        
    XXXXX = ENSEM (ENSMBLES)        
    XXXXX = POLIC (POLICES)        
    XXXXX = PROCL (PRODUITS)        
    XXXXX = CLDEV (DEVIS)        
         
 **********************************************************************/        
   /* INTERFACE SERVICE SIGNALETIQUE      */        
         
 KA2151J_P.DEU02PCB  = GA2016J.DEU02PCB;        
 KA2151J_P.DA215PCB  = GA2016J.DA215PCB;        
 KA2151J_P.DA215$PCB = GA2016J.DA215$PCB;        
 KA2151J_P.DA2152PCB = GA2016J.DA2152PCB;        
 KA2151J_P.DA216PCB  = GA2016J.DA216PCB;        
 KA2231J_P.DEU02PCB  = GA2016J.DEU02PCB;        
 KA2231J_P.DA216PCB  = GA2016J.DA216PCB;        
 KA2231J_P.DA223PCB  = GA2016J.DA223PCB;        
 KS1005J.PTRPCB.DEU02PCB = GA2016J.DEU02PCB;    ##################################        
 KS1005J.PTRPCB.DS101PCB = GA2016J.DS101PCB;    ##################################        
 KS1005J.PTRPCB.DS102PCB = GA2016J.DS102$PCB;   #################################        
 KS1005J.PTRPCB.DS128PCB = GA2016J.DS128PCB;    ##################################        
 KS1005J.PTRPCB.DS132PCB = GA2016J.DS132PCB;    ##################################        
 KS1005J.PTRPCB.DS134PCB = GA2016J.DS134PCB;    ##################################        
 KS1005J.PTRPCB.DS137PCB = GA2016J.DS137PCB;    ##################################        
 /* NRB - TDMOHL - GENERATION LE 05/06/2008 - 12:55        LGTH=00274 */        
 /*****************************************************/        
 /*  TABLE MAIN :                                     */        
 /*****************************************************/        
         
 DCL  1 TBSM_MAIN ,                         #############################################################        
                                            /*TB!  !DSM25   !C1TAB    */        
                                            /*TB!  !DDO03   !C1TAB    */        
                                            /*TB!  !DIB15   !C1TAB    */        
                                            /*TB!  !DCR01   !CRTABLE  */        
                                            /*TB!  !DLG01   !TABLE    */        
                                            /*TB!  !DGZ02   !GZTABLE  */        
                                            /*TB!  !DNC02   !NCTABLE  */        
 /*K*/ 2 TBTXCOD  CHAR(4),                  /*CD!  !CODE TABLE        */        
 /*K*/ 2 TBTXA01  CHAR(20),                 /*CD!  !ARGUMENT          */        
       2 TBTXL01  CHAR(250);                ####################################################        
         
         
    DCL 1 SSA_C1TAB,        
         2 FIL1         CHAR (8)       INIT ('C1TAB  '),        
         2 FIL2         CHAR (1)       INIT ('*'),        
         2 CC           CHAR (3)       INIT ('---'),        
         2 PAR          CHAR (1)       INIT ('('),        
         2 FIL3         CHAR (8)       INIT ('KC1TAB  '),        
         2 OPER         CHAR (2)       INIT ('= '),        
         2 VALUE        CHAR (24),        
         2 FIL4         CHAR (1)       INIT (')');        
         
   /* DC105 */        
 /* NRB - TDMKIP - GENERATION LE 24/01/2007 - 17:02        LGTH=00300 */        
 /****************************************************************        
 *  MARQUES DE VOITURES PARTICULIERS (MARKET = BE , VEHTYPE = 10)*        
 ****************************************************************/        
         
 DCL  1 A2EUT11 ,                        ###############################################################        
 /*K*/ 2 CDTYPTB  CHAR(2),               /*CD!  !TYPE DE SEGMENT (11) */        
 /*K*/ 2 NOIDMAR  DEC FIXED(7),          /*NO!  !NO. DE LA MARQUE     */        
 /*K*/ 2 FILLKEY  CHAR(16),              /*FI!  !RESERVE              */        
       2 KA2EUT1  CHAR(8),               ######################################################        
       2 LTMARQU  CHAR(40),              #####################################################        
       2 KA2EUT2  DEC FIXED(7),          #################################################        
       2 KA2EUT3  CHAR(16),              #####################################################        
       2 CDTTERR  PIC'9',                #######################################################        
       2 DATECRE  DEC FIXED(7),          #################################################        
       2 DATEMAJ  DEC FIXED(7),          #################################################        
       2 DADEBIM  PIC'(6)9',             ####################################################        
       2 DAFINIM  PIC'(6)9',             ####################################################        
       2 TBEGCOD(16)  BIT(1),            ###################################################        
       2 FILLER  CHAR(187);              #####################################################        
         
    DCL 1 SSA_A2EUT11,        
         2 FIL1         CHAR (8)       INIT ('A2EUTAX'),        
         2 FIL2         CHAR (1)       INIT ('*'),        
         2 CC           CHAR (3)       INIT ('---'),        
         2 PAR          CHAR (1)       INIT ('('),        
         2 FIL3         CHAR (8)       INIT ('KA2EUTAX'),        
         2 OPER         CHAR (2)       INIT ('= '),        
         2 VALUET       CHAR (2)       INIT ('11'),        
         2 VALUE1       DEC FIXED(7),        
         2 VALUEF       CHAR (16)      INIT (' '),        
         2 FIL4         CHAR (1)       INIT (')');        
         
    DCL 1 SSA2_A2EUT11,        
         2 FIL1         CHAR (8)       INIT ('A2EUTAX'),        
         2 FIL2         CHAR (1)       INIT ('*'),        
         2 CC           CHAR (3)       INIT ('---'),        
         2 PAR          CHAR (1)       INIT ('('),        
         2 FIL3         CHAR (8)       INIT ('KA2EUTI2'),        
         2 OPER         CHAR (2)       INIT ('= '),        
         2 VALUET       CHAR (2)       INIT ('11'),        
         2 VALUE1       CHAR (08)      INIT (' '),        
         2 VALUE2       CHAR (40),        
         2 VALUE3       DEC FIXED(7),        
         2 VALUEF       CHAR (16)      INIT (' '),        
         2 FIL4         CHAR (1)       INIT (')');        
         
 /* NRB - TDMKIP - GENERATION LE 24/01/2007 - 17:03        LGTH=00300 */        
 /****************************************************************        
 *  MODELES DE VOITURES PARTICULIERS (MARKET = BE , VEHTYPE = 10)*        
 ****************************************************************/        
         
 DCL  1 A2EUT12 ,                        ###############################################################        
 /*K*/ 2 CDTYPTB  CHAR(2),               /*CD!  !TYPE DE SEGMENT      */        
 /*K*/ 2 NOIDMAR  DEC FIXED(7),          /*NO!  !NO. DE MARQUE (T11)  */        
 /*K*/ 2 NOIDMOD  DEC FIXED(7),          /*NO!  !NO. DE MODELE        */        
 /*K*/ 2 FILLKEY  CHAR(12),              /*FI!  !RESERVE              */        
       2 KA2EUT1  CHAR(4),               ######################################################        
       2 KA2EUT2  DEC FIXED(7),          #################################################        
       2 LTMODEL  CHAR(40),              #####################################################        
       2 KA2EUT3  DEC FIXED(7),          #################################################        
       2 KA2EUT4  CHAR(16),              #####################################################        
       2 CDTTERR  PIC'9',                #######################################################        
       2 DATECRE  DEC FIXED(7),          #################################################        
       2 DATEMAJ  DEC FIXED(7),          #################################################        
       2 DADEBIM  PIC'(6)9',             ####################################################        
       2 DAFINIM  PIC'(6)9',             ####################################################        
       2 TBEGCOD(16)  BIT(1),            ###################################################        
       2 FILLER  CHAR(187);              #####################################################        
         
    DCL 1 SSA_A2EUT12,        
         2 FIL1         CHAR (8)       INIT ('A2EUTAX'),        
         2 FIL2         CHAR (1)       INIT ('*'),        
         2 CC           CHAR (3)       INIT ('---'),        
         2 PAR          CHAR (1)       INIT ('('),        
         2 FIL3         CHAR (8)       INIT ('KA2EUTAX'),        
         2 OPER         CHAR (2)       INIT ('= '),        
         2 VALUET       CHAR (02)      INIT ('12'),        
         2 VALUE1       DEC FIXED(7),        
         2 VALUE2       DEC FIXED(7),        
         2 VALUEF       CHAR (12)      INIT (' '),        
         2 FIL4         CHAR (1)       INIT (')');        
         
    DCL 1 SSA2_A2EUT12,        
         2 FIL1         CHAR (8)       INIT ('A2EUTAX'),        
         2 FIL2         CHAR (1)       INIT ('*'),        
         2 CC           CHAR (3)       INIT ('---'),        
         2 PAR          CHAR (1)       INIT ('('),        
         2 FIL3         CHAR (8)       INIT ('KA2EUTI2'),        
         2 OPER         CHAR (2)       INIT ('= '),        
         2 VALUET       CHAR (02)      INIT ('12'),        
         2 VALUE1       CHAR (04)      INIT (' '),        
         2 VALUE2       DEC FIXED(7),        
         2 VALUE3       CHAR (40),        
         2 VALUE4       DEC FIXED(7),        
         2 VALUEF       CHAR (16)      INIT (' '),        
         2 FIL4         CHAR (1)       INIT (')');        
 /* NRB - TDMGAS - GENERATION LE 01/06/2010 - 10:40        LGTH=00300 */        
 /**************************************************************        
 *  TYPES DE VOITURES PARTICULIERS (MARKET = BE , VEHTYPE = 10)*        
 **************************************************************/        
         
 DCL  1 A2EUT13 ,                       ###############################################################        
 /*K*/ 2 CDTYPTB  CHAR(2),              /*CD!  !TYPE DE SEGMENT (13)  */        
 /*K*/ 2 NOIDMAR  DEC FIXED(7),         /*NO!  !NO ID MARQUE (T11)    */        
 /*K*/ 2 NOIDMOD  DEC FIXED(7),         /*NO!  !NO ID MODELE (T12)    */        
 /*K*/ 2 NOIDTYP  DEC FIXED(7),         /*NO!  !NO ID TYPE            */        
 /*K*/ 2 FILLKEY  CHAR(8),              /*FI!  !RESERVE               */        
       2 KA2EUT1  DEC FIXED(7),         #################################################        
       2 KA2EUT2  DEC FIXED(7),         #################################################        
       2 LTTYPEV  CHAR(60),             #####################################################        
       2 DADEBIM  PIC'(6)9',            ####################################################        
       2 DAFINIM  PIC'(6)9',            ####################################################        
       2 TXTCLAS  CHAR(8),              ######################################################        
       2 TXTCATV  CHAR(8),              ######################################################        
       2 TXTCARO  CHAR(8),              ######################################################        
       2 NBRPORT  DEC FIXED(3),         #################################################        
       2 NPLAMIN  DEC FIXED(3),         #################################################        
       2 NPLAMAX  DEC FIXED(3),         #################################################        
       2 NBRTRAN  DEC FIXED(3),         #################################################        
       2 NBSIEGE  CHAR(10),             #####################################################        
       2 NBTYPKW  DEC FIXED(3),         #################################################        
       2 NBCVDIN  DEC FIXED(3),         #################################################        
       2 NBCVFIS  DEC FIXED(5,2),       ###############################################        
       2 TXTBOIT  CHAR(8),              ######################################################        
       2 NBVITES  DEC FIXED(3),         #################################################        
       2 NBRCYLI  DEC FIXED(3),         #################################################        
       2 TYPCYLI  DEC FIXED(5),         #################################################        
       2 POIDVID  DEC FIXED(5),         #################################################        
       2 POIDTRA  DEC FIXED(5),         #################################################        
       2 POIDMAX  DEC FIXED(5),         #################################################        
       2 HAUTEUR  DEC FIXED(5),         #################################################        
       2 LARGEUR  DEC FIXED(5),         #################################################        
       2 LONGUEU  DEC FIXED(5),         #################################################        
       2 CAPRESE  DEC FIXED(5,1),       ###############################################        
       2 TXTCARB  CHAR(8),              ######################################################        
       2 CDSPORT  CHAR(1),              ######################################################        
       2 CDSPOSE  CHAR(1),              ######################################################        
       2 TAXETMC  DEC FIXED(9),         #################################################        
       2 CDVOLSM  CHAR(1),              ######################################################        
       2 CDDMSMA  CHAR(1),              ######################################################        
       2 DERPRIX  DEC FIXED(9),         #################################################        
       2 ANNEPRI  PIC'(4)9',            ####################################################        
       2 MOISPRI  PIC'99',              ######################################################        
       2 CDTTERR  PIC'9',               #######################################################        
       2 DATECRE  DEC FIXED(7),         #################################################        
       2 DATEMAJ  DEC FIXED(7),         #################################################        
       2 CDOMETH  CHAR(1),              ######################################################        
       2 CDDMETH  CHAR(1),              ######################################################        
       2 TCO2EMI  DEC FIXED(5),         #################################################        
       2 CDTYOP3  CHAR(1),              ######################################################        
       2 CDTYDM3  CHAR(1),              ######################################################        
       2 CDECOV2  CHAR(1),              ######################################################        
       2 TXTMOTE  CHAR(8),              ######################################################        
       2 FILLER  CHAR(60);              ######################################################        
         
    DCL 1 SSA_A2EUT13,        
         2 FIL1         CHAR (8)       INIT ('A2EUTAX'),        
         2 FIL2         CHAR (1)       INIT ('*'),        
         2 CC           CHAR (3)       INIT ('---'),        
         2 PAR          CHAR (1)       INIT ('('),        
         2 FIL3         CHAR (8)       INIT ('KA2EUTAX'),        
         2 OPER         CHAR (2)       INIT ('= '),        
         2 VALUET       CHAR (02)      INIT ('13'),        
         2 VALUE1       DEC FIXED(7),        
         2 VALUE2       DEC FIXED(7),        
         2 VALUE3       DEC FIXED(7),        
         2 VALUEF       CHAR (08),        
         2 FIL4         CHAR (1)       INIT (')');        
         
    DCL 1 SSA2_A2EUT13,        
         2 FIL1         CHAR (8)       INIT ('A2EUTAX'),        
         2 FIL2         CHAR (1)       INIT ('*'),        
         2 CC           CHAR (3)       INIT ('---'),        
         2 PAR          CHAR (1)       INIT ('('),        
         2 FIL3         CHAR (8)       INIT ('KA2EUTI2'),        
         2 OPER         CHAR (2)       INIT ('= '),        
         2 VALUET       CHAR (02)      INIT ('13'),        
         2 VALUE1       DEC FIXED(7),        
         2 VALUE2       DEC FIXED(7),        
         2 VALUE3       CHAR (60),        
         2 FIL4         CHAR (1)       INIT (')');        
 /* NRB - TDMKIP - GENERATION LE 01/03/2005 - 15:55        LGTH=00300 */        
 /************************************************************        
 *  PRIX DES TYPES DE VOITURES PARTICULIERS                  *        
 *  (MARKET = BE , VEHTYPE = 10)                             *        
 ************************************************************/        
         
 DCL  1 A2EUT14 ,                        ###############################################################        
 /*K*/ 2 CDTYPTB  CHAR(2),               /*CD!  !TYPE DE SEGMENT (14) */        
 /*K*/ 2 NOIDTYP  DEC FIXED(7),          /*NO!  !NO. ID TYP (T13)     */        
 /*K*/ 2 DATEDEB  DEC FIXED(7),          /*DC!  !DATE DEBUT VALIDITE  */        
 /*K*/ 2 FILLKEY  CHAR(12),              /*FI!  !RESERVE              */        
       2 PRIHTVA  DEC FIXED(9),          #################################################        
       2 PRITVAC  DEC FIXED(9),          #################################################        
       2 TAUXTVA  DEC FIXED(5,2),        ###############################################        
       2 DATECRE  DEC FIXED(7),          #################################################        
       2 DATEMAJ  DEC FIXED(7),          #################################################        
       2 FILLER  CHAR(257);              #####################################################        
         
    DCL 1 SSA_A2EUT14,        
         2 FIL1         CHAR (8)       INIT ('A2EUTAX'),        
         2 FIL2         CHAR (1)       INIT ('*'),        
         2 CC           CHAR (3)       INIT ('---'),        
         2 PAR          CHAR (1)       INIT ('('),        
         2 FIL3         CHAR (8)       INIT ('KA2EUTAX'),        
         2 OPER         CHAR (2)       INIT ('= '),        
         2 VALUET       CHAR (2)       INIT ('14'),        
         2 VALUE1       DEC FIXED(7),        
         2 VALUE2       DEC FIXED(7),        
         2 VALUEF       CHAR (12),        
         2 FIL4         CHAR (1)       INIT (')');        
 /* NRB - TDMKIP - GENERATION LE 25/03/2005 - 15:18        LGTH=00300 */        
 /************************************************************        
 *  EQUIPEMENTS POUR  VOITURES PARTICULIERS                  *        
 *  (SERIE/OPTIONS/PACKAGES)                                 *        
 *  (MARKET = BE , VEHTYPE = 10)                             *        
 ************************************************************/        
         
 DCL  1 A2EUT15 ,                        ###############################################################        
 /*K*/ 2 CDTYPTB  CHAR(2),               /*CD!  !TYPE DE SEGMENT (15) */        
 /*K*/ 2 NOIDTYP  DEC FIXED(7),          /*NO!  !NO. ID TYPE (T13)    */        
 /*K*/ 2 NOIDADD  DEC FIXED(11),         /*NO!  !NO. ID ADDITION      */        
 /*K*/ 2 FILLKEY  CHAR(10),              /*FI!  !RESERVE              */        
       2 DATEDEB  DEC FIXED(7),          #################################################        
       2 DATEFIN  DEC FIXED(7),          #################################################        
       2 NOIDEQT  DEC FIXED(7),          #################################################        
       2 NOIDFLA  PIC'9',                #######################################################        
       2 NOIDFLP  PIC'9',                #######################################################        
       2 PRIHTVA  DEC FIXED(9),          #################################################        
       2 PRITVAC  DEC FIXED(9),          #################################################        
       2 TAUXTVA  DEC FIXED(5,2),        ###############################################        
       2 DATECRE  DEC FIXED(7),          #################################################        
       2 DATEMAJ  DEC FIXED(7),          #################################################        
       2 FILLER  CHAR(243);              #####################################################        
         
    DCL 1 SSA_A2EUT15,        
         2 FIL1         CHAR (8)       INIT ('A2EUTAX'),        
         2 FIL2         CHAR (1)       INIT ('*'),        
         2 CC           CHAR (3)       INIT ('---'),        
         2 PAR          CHAR (1)       INIT ('('),        
         2 FIL3         CHAR (8)       INIT ('KA2EUTAX'),        
         2 OPER         CHAR (2)       INIT ('= '),        
         2 VALUET       CHAR (2)       INIT ('15'),        
         2 VALUE1       DEC FIXED(7),        
         2 VALUE2       DEC FIXED(11),        
         2 VALUEF       CHAR (10),        
         2 FIL4         CHAR (1)       INIT (')');        
 /* NRB - TDMKIP - GENERATION LE 21/11/2005 - 16:41        LGTH=00300 */        
 /************************************************************        
 *  CONTENU DES PACKS POUR  VOITURES PARTICULIERS            *        
 *  (MARKET = BE , VEHTYPE = 10)                             *        
 ************************************************************/        
         
 DCL  1 A2EUT16 ,                       ###############################################################        
 /*K*/ 2 CDTYPTB  CHAR(2),              /*CD!  !TYPE DE SEGMENT (16)  */        
 /*K*/ 2 NOIDTYP  DEC FIXED(7),         /*NO!  !NO. ID TYPE (T13)     */        
 /*K*/ 2 NOIDPAC  DEC FIXED(7),         /*NO!  !NO. ID PACK (EQT T14) */        
 /*K*/ 2 NOIDEQT  DEC FIXED(7),         /*NO!  !NO. ID EQT (EQT T17)  */        
 /*K*/ 2 DATEDEB  DEC FIXED(7),         /*DC!  !DATE DEBUT VALIDITE   */        
 /*K*/ 2 FILLKEY  CHAR(4),              /*FI!  !RESERVE               */        
       2 NOIDFLA  PIC'9',               #######################################################        
       2 DATEFIN  DEC FIXED(7),         #################################################        
       2 PRIHTVA  DEC FIXED(9),         #################################################        
       2 PRITVAC  DEC FIXED(9),         #################################################        
       2 DATECRE  DEC FIXED(7),         #################################################        
       2 DATEMAJ  DEC FIXED(7),         #################################################        
       2 FILLER  CHAR(255);             #####################################################        
         
    DCL 1 SSA_A2EUT16,        
         2 FIL1         CHAR (8)       INIT ('A2EUTAX'),        
         2 FIL2         CHAR (1)       INIT ('*'),        
         2 CC           CHAR (3)       INIT ('---'),        
         2 PAR          CHAR (1)       INIT ('('),        
         2 FIL3         CHAR (8)       INIT ('KA2EUTAX'),        
         2 OPER         CHAR (2)       INIT ('= '),        
         2 VALUET       CHAR (2)       INIT ('16'),        
         2 VALUE1       DEC FIXED(7),        
         2 VALUE2       DEC FIXED(7),        
         2 VALUE3       DEC FIXED(7),        
         2 VALUE4       DEC FIXED(7),        
         2 VALUEF       CHAR (04),        
         2 FIL4         CHAR (1)       INIT (')');        
 /* NRB - TDMKIP - GENERATION LE 08/06/2007 - 09:33        LGTH=00300 */        
 /************************************************************        
 *  TEXTES EQUIPEMENTS POUR VOITURES PARTICULIERS            *        
 *  (MARKET = BE , VEHTYPE = 10)                             *        
 ************************************************************/        
         
 DCL  1 A2EUT17 ,                       ###############################################################        
 /*K*/ 2 CDTYPTB  CHAR(2),              /*CD!  !TYPE DE SEGMENT (17)  */        
 /*K*/ 2 NOIDEQT  DEC FIXED(7),         /*NO!  !NO. ID EQT            */        
 /*K*/ 2 FILLKEY  CHAR(16),             /*FI!  !RESERVE               */        
       2 LTTXTEQ(2)  CHAR(80),          ##################################################        
       2 LTTXTST(2)  CHAR(40),          ##################################################        
       2 DATECRE  DEC FIXED(7),         #################################################        
       2 DATEMAJ  DEC FIXED(7),         #################################################        
       2 TXTESAC  CHAR(8),              ######################################################        
       2 FILLER  CHAR(22);              ######################################################        
         
    DCL 1 SSA_A2EUT17,        
         2 FIL1         CHAR (8)       INIT ('A2EUTAX'),        
         2 FIL2         CHAR (1)       INIT ('*'),        
         2 CC           CHAR (3)       INIT ('---'),        
         2 PAR          CHAR (1)       INIT ('('),        
         2 FIL3         CHAR (8)       INIT ('KA2EUTAX'),        
         2 OPER         CHAR (2)       INIT ('= '),        
         2 VALUET       CHAR (2)       INIT ('17'),        
         2 VALUE1       DEC FIXED(7),        
         2 VALUEF       CHAR (16),        
         2 FIL4         CHAR (1)       INIT (')');        
 /* NRB - TDMKIP - GENERATION LE 14/06/2010 - 14:27        LGTH=00070 */        
 /*******************************************        
 *  DB DES COMPOSTEURS INTERNET ( DEVIS A2 )*        
 ********************************************/        
 DCL  1 XICOMA2 ,                     ###############################################################        
 /*K*/ 2 CDTYPCO  CHAR(1),            /*CD!  !CODE TYPE DE COMPOSTEUR */        
 /*K*/ 2 CDTYPOL  CHAR(2),            /*CD!  !CODE TYPE DE POLICE     */        
 /*K*/ 2 CDCOMPO  CHAR(12),           /*CD!  !CLE DU COMPOSTEUR       */        
       2 DADVCOU  PIC'(6)9',          ####################################################        
       2 NODVCOU  PIC'(4)9',          ####################################################        
       2 NODVSUP  PIC'(4)9',          ####################################################        
       2 RESERVE  CHAR(41);           #####################################################        
         
    DCL 1 SSA_XICOMA2,        
         2 FIL1         CHAR (8)       INIT ('XICOMPO'),        
         2 FIL2         CHAR (1)       INIT ('*'),        
         2 CC           CHAR (3)       INIT ('---'),        
         2 PAR          CHAR (1)       INIT ('('),        
         2 FIL3         CHAR (8)       INIT ('KXICOMPO'),        
         2 OPER         CHAR (2)       INIT ('= '),        
         2 VALUE        CHAR (15),        
         2 FIL4         CHAR (1)       INIT (')');        
   /* acc}s composteur devis */        
 /* NRB - TDMDIN - GENERATION LE 31/01/2006 - 14:00        LGTH=00274 */        
         
 /*-------------------------------------------------------------------*/        
 /*-- TYPE DE MARQUE                                                  */        
 /*-------------------------------------------------------------------*/        
 DCL  1 TBSM_RPTY ,                  #############################################################        
                                     /*TB!  !DSM25   !C1TAB           */        
                                     /*--!  !L'2  CDINSPO             */        
 /*K*/ 2 TBTXCOD  CHAR(4),           /*CD!  !CODE TABLE               */        
 /*K*/ 2 TBTXA01  CHAR(20),          /*CD!  !ARGUMENT                 */        
       2 LTMQVEH(3)  CHAR(20),       ##################################################        
       2 CDVISIN  CHAR(1),           ######################################################        
       2 CDEURTX  CHAR(3),           ######################################################        
       2 FILLER  CHAR(185),          #####################################################        
       2 CDEGARG  CHAR(1);           ######################################################        
 /* NRB - TDMEBN - Generation le 10/12/2002 - 08:59        Lgth=00274 */        
 /*-------------------------------------------------------------------*/        
 /*-- AUTRES MARQUES TABLE REPD - REDEF SUR HEUDEBA                   */        
 /*-------------------------------------------------------------------*/        
 DCL  1 TBSM_PER1 ,                  #############################################################        
                                     /*TB!  !DSM25   !C1TAB           */        
                                     /*TB!  !DDO03   !C1TAB           */        
                                     /*TB!  !DCR01   !CRTABLE         */        
                                     /*--!  !=DESCRIPTION ARGUMENT    */        
 /*K*/ 2 TBTXCOD  CHAR(4),           /*CD!  !CODE TABLE               */        
 /*K*/ 2 TBTXA01  CHAR(20),          /*CD!  !ARGUMENT LG 2            */        
       2 LTNMPER  CHAR(30),          #####################################################        
       2 CDRSPER  CHAR(1),           ######################################################        
       2 CDLGPER  CHAR(1),           ######################################################        
       2 NOTL1PE  CHAR(3),           ######################################################        
       2 NOTL2PE  CHAR(3),           ######################################################        
       2 NOTL3PE  CHAR(9),           ######################################################        
       2 LTRUEPE  CHAR(30),          #####################################################        
       2 LTLOCPE  CHAR(25),          #####################################################        
       2 CDCPOPE  CHAR(6),           ######################################################        
       2 CDPAYPE  CHAR(3),           ######################################################        
       2 CDUPEAF  CHAR(1),           ######################################################        
                                     /*--!  !REPARATEUR PILOTE        */        
                                     /*--!  !CODE SOCIETE EN MS       */        
       2 NOCPTFI  PIC'(12)9',        ###################################################        
       2 NOTVAPE  CHAR(9),           ######################################################        
       2 TBEGADR(8)  BIT(1),         ####################################################        
                                     /*--!  !BIT1:ON=NON RACCOR. INFX */        
                                     /*--!  !2: NOM COMPL EN SOUS-TA  */        
                                     /*--!  !3: + DE 1 COMMENTAIRE    */        
                                     /*--!  !5: F EN SOUS-TAB         */        
                                     /*--!  !6: N                     */        
                                     /*--!  !7: A                     */        
                                     /*--!  !8: CODE DILIGENCE D      */        
       2 NOEXINF  CHAR(5),           ######################################################        
       2 NOTF1PE  CHAR(3),           ######################################################        
       2 NOTF2PE  CHAR(3),           ######################################################        
       2 NOTF3PE  CHAR(9),           ######################################################        
       2 TBAJAVO(4)  CHAR(2),        ###################################################        
       2 CDSQALP  CHAR(2),           ######################################################        
       2 CDSIESO  CHAR(1),           ######################################################        
       2 CDTYPE_R(4)  CHAR(3),       ##################################################        
       2 HEUFINP  CHAR(4),           ######################################################        
       2 TBJOOUV(7)  CHAR(1),        ###################################################        
       2 CDSOUTA  CHAR(1),           ######################################################        
       2 CDTYPE  CHAR(3),            #######################################################        
       2 CDRLMUT  CHAR(6),           ######################################################        
                                     /*--!  !OU SIGNALETIQUE          */        
       2 CDDECLA  CHAR(1),           ######################################################        
       2 CDTYAPR(5)  CHAR(1),        ###################################################        
                                     /*--!  ! APPARTENANCE RESEAU Y/N */        
       2 FILLER1  CHAR(34),          #####################################################        
       2 CDVISIN  CHAR(1),           ######################################################        
       2 FILLER  CHAR(10),           ######################################################        
       2 CDEGARG  CHAR(1);           ######################################################        
 /* NRB - TDMWEL - Generation le 21/02/2002 - 16:15        Lgth=02010 */        
 /* NRB - TDMSAU - Generation le 27/03/2000 - 09:51        Lgth=02010 */        
 /*******************        
 *  SEGMENT SCRATCH *        
 *******************/        
 DCL  1 SMSCRAT ,                           ###############################################################        
                                            /*DB!  !DCR10   !SMSCRAT  */        
                                            /*DB!  !DDO09   !SMSCRAT  */        
 /*K*/ 2 NOIDSCR  CHAR(10),                 /*CD!  !NOM DE LA SCRATCH */        
       2 LTNMSCR  CHAR(2000);               ###################################################        
         
         
  DCL 1 SSA_SMSCRAT,        
         2 FIL1         CHAR (8)       INIT ('SMSCRAT'),        
         2 FIL2         CHAR (1)       INIT ('*'),        
         2 CC           CHAR (3)       INIT ('---'),        
         2 PAR          CHAR (1)       INIT ('('),        
         2 FIL3         CHAR (8)       INIT ('KSMSCRAT'),        
         2 OPER         CHAR (2)       INIT ('= '),        
         2 VALUE        CHAR (10),        
         2 FIL4         CHAR (1)       INIT (')');        
  /*DCL   LTNMSCR_R        CHAR (2000)      DEF SMSCRAT.LTNMSCR ; */        
  DCL   LTNMSCR_R CHAR (2000) BASED(ADDR(SMSCRAT.LTNMSCR)) ;        
         
 /********************************************        
 *                    SPA                    *        
 ********************************************/        
 /*---------------------------------------------------------- SCENARI */        
 /*  DFINITION DES VARIABLES D'INITIALISATION DU SCENARIO             */        
 /*  ----------------------------------------------------             */        
              /* BLOCAGE CODE OPERATION */        
              /* NOUVEAU CANEVAS */        
         
 /*---------------------------------------------------------- SPAAREA */        
 DCL     SPA001_P            PTR;        
 DCL 1   SPA001_R            BASED(SPA001_P),        
      2  CDPOSTE             CHAR (4),        
      2  LTPOSTE             CHAR (25),        
      2  RESERVE             CHAR (1);        
 DCL 1   SCENARI             BASED(SPA001_P),        
      2  NOPGACT             CHAR (1),       #########################################        
      2  NOPGPRV(6)          CHAR (1),       #########################################        
      2  NUMIDLL(6)          BIN FIXED(15),  ####################################        
      2  TBCATOP             CHAR (06),      ########################################        
      2  CDTYSEL             CHAR (01),      ########################################        
      2  NBPAGE1             PIC '99',       #########################################        
      2  TBSCENA (16)        BIT (1);        ##########################################        
         
 DCL     SPA002_P            PTR;        
 DCL 1   SCENA02             BASED(SPA002_P),        
      2  NOIDCLI             CHAR (08),      ########################################        
      2  NOIDSCR             PIC '9999',     #######################################        
      2  RFSIGNA             CHAR (08);      ########################################        
         
 SPA001_P = ADDR(SPA.LTOPTR2);        
 SPA002_P = ADDR(SPA.LTRUE1A);        
         
 DCL DADESIN_SPA_F          FIXED DEC(7) BASED (ADDR(SPA.DADESIN_C));        
         
 DCL 1   SPA        BASED(GA2016J.SPA_PTR),        
         
         
     /*  PARTIE FIXE  */        
         
      2  LL_SPA              BIN FIXED(15),        
      2  XXXX                CHAR (4),        
      2  TRANSAC             CHAR (8),        
      2  MSG_SPA             CHAR (1),      ##########################################        
      2  CDTYECR             CHAR (01),     ###############################        
      2  CDRTTSS             CHAR (02),     ########################################        
      2  NORFPRT             CHAR (08),     ##################################        
      2  CDSCTRN             CHAR (01),     #########################################        
      2  CDATTRN             CHAR (02),     ########################################        
      2  LTSCTRN             CHAR (04),     ####################################        
      2  CDEVTRN             CHAR (01),     #########################################        
      2  CDUTTRN             CHAR (08),     #########################################        
      2  CDOPTRN             CHAR (05),     #################################        
      2  TBRETRN(6)          CHAR (08),     #####################################        
      2  TBFCACT(24)         BIT  (1),      ######################################        
      2  CMDEXEC             CHAR (01),     ########################################        
      2  LTOPTRN             CHAR (30),     ######################################        
      2  LTOPTR2             CHAR (30),     ######################################        
      2  TRANS1              CHAR (08),     #######################################        
      2  TRANS2              CHAR (08),     #######################################        
      2  CDLGTRN             PIC '9',       #######################################        
      2  NOIDAFF             FIXED (7),     ################################        
      2  LTNMAFF             CHAR (30),     ##############################        
      2  CDRSAFF             CHAR (1),      #######################################        
      2  CDSEXAF             CHAR (1),      ##############################        
      2  CDLGEAF             CHAR (1),      ###############################        
      2  CDPOGEO             FIXED(5),      #########################################        
      2  NORULOC             FIXED(7),      #########################################        
      2  LTRUE1A             CHAR (20),     ##################################        
      2  CDCPOAF             CHAR (06),     ##############################        
      2  LTLOCAF             CHAR (25),     ##################################        
      2  NOHA1AF             BIN FIXED(15), #############################        
      2  NOHA1FR             CHAR (01),     ##################################        
      2  NOHA2AF             CHAR (04),     #####################################        
      2  LTRUEAF             CHAR(25),      #######################        
      2  CDPAYAF             CHAR(03),      #############################        
      2  NOIDPOL             FIXED (8),     ################################        
      2  CDTYPOL             CHAR (2),      ##################################        
      2  CDLGPOL             CHAR (1),      ######################################        
      2  CDETAPO             CHAR (1),      ##########################################        
      2  LTNMALP             CHAR (06),     #####################################        
      2  NODOMPO             FIXED(11),     ######################################        
      2  NOCPTPO             FIXED(11),     #####################################        
      2  NOIDNAI             FIXED (7),     ##################################        
      2  NOIDPLQ             CHAR (5),      ################################        
      2  NOIDCHA             CHAR (20),     ################################        
      2  TBTYPAF             BIT (240),     ################################        
                                            /* 60 : CHOIX EURO  */        
      2  TBSEXAF (2)         CHAR (01),     #####################################        
      2  CDGRPCL             CHAR (01),     #####################################        
      2  CDCMGES             CHAR (08),     ####################################        
      2  CDCMPRO             CHAR (01),     #######################################        
      2  NOTL1AF             FIXED (3),     ######################################        
      2  NOTL2AF             FIXED (9),     ######################################        
      2  NOIDSIN             FIXED (9),     ######################################        
      2  NOPPAFF             FIXED (7),     ########################################        
      2  CDCATOP             CHAR (01),     ########################################        
      2  LTOPCOM             CHAR (30),     ########################################        
      2  TRANS3              CHAR (08),     ########################################        
      2  NOORAFF             FIXED (7),     ######################################        
      2  NOIDFAC             CHAR (03),     ####################################        
      2  DANAIAF             FIXED (10),    ###################################        
      2  NOIDFND             CHAR  (03),    #################################        
      2  NOIDMAT             CHAR  (11),    #####################################        
      2  NONATAF             FIXED (11),    ##############################        
      2  LTABRFP             CHAR  (30),    ##############################        
                                            /*  OU CAISSE ET TRANSIT*/        
                                            /* VOIR SPACODEF        */        
                                            /* OU GROUPE+MEDECIN    */        
                                            /* OU RENTE T1          */        
      2  CDEGCOU             CHAR  (01),    ########################################        
      2  TBEGCOD_AFF         BIT   (40),    ########################################        
      2  CDNATPA_RT          CHAR  (02),    ########################################        
                                            /* D5: NUMERO DU PROPRIET.*/        
      2  DAIMPPA_RT          FIXED (5),     #########################################        
      2  CDAPPPR             CHAR  (02),    #######################################        
      2  CDCATTR             CHAR (01),     ###############################        
      2  CDRFPRT             CHAR (03),     #########################################        
      2  NOAVECO             PIC'(3)9',     #########################################        
      2  NOIDFAM             FIXED (7),     ####################################        
                                            /* NO INTERVENANT PRODUCT.*/        
      2  CDTRASW             CHAR  (01),    #######################################        
      2  TBCDCLI             CHAR  (09),    #######################################        
      2  CDALCLI             CHAR  (01),    #######################################        
      2  CDLGFAM             CHAR  (01),    #######################################        
      2  CDLGRUE             CHAR  (01),    #######################################        
      2  NOIDREM             PIC '99',      ################################        
      2  NBSINPO             FIXED BIN(15), #################################        
      2  CDEVTRA             CHAR (01),     ####################################        
      2  NOAF1EX             FIXED(07),     #####################################        
      2  SW_MEMOSIN          CHAR (1),      ######################################        
      2  NOAF2EX             BIN FIXED (15),################################        
      2  ANSINPO             PIC '99',      #######################################        
      2  CDTYFND             CHAR  (01),    ####################################        
                                            /* EN SINISTRE, = A SI*/        
                                            /* PAIEMENT TYPE 89 */        
      2  DADESIN_C           CHAR  (04),    ####################################        
      2  NOIDCRT_SC          FIXED (7),     #####################################        
      2  NOIDSIN_RL          FIXED (9),     #######################################        
      2  CDTYPOL_RL          CHAR  (02),    ######################################        
      2  TBEGGES (8)         BIT   (01),    ######################################        
                                            /* 1=SUIVI GESTIONNAIRE */        
                                            /* 2=SUPER GESTIONNAIRE */        
                                            /* 3=COMMANDE DE MAJ    */        
                                            /* 4=CDE NON PROTEGEE   */        
                                            /* 5= ON=KERNEL CONVERTI*/        
                                            /* 6= ON=NOUVEAU CANEVAS*/        
                                            /* 7=DEVISE OUTPUT T.T. */        
                                            /* 8=CLAUSIER TYPE "U"  */        
      2  NORTMEM             CHAR  (02),    ############################        
      2  CDDVTRN             CHAR  (01),    ######################################        
      2  CDPGTRN             CHAR  (01),    ######################################        
      2  CDDVPOL             CHAR  (01),    ######################################        
      2  CDMODTT             CHAR  (01),    ######################################        
      2  NOTYPDC             PIC '99',      ########################################        
         
     /*  PARTIE VARIABLE : A L'USAGE D'UNE TRANSACTION APPELANTE */        
         
            /* SPA FIXE                         */        
 /*------------------------------------------------------------------*/        
 /*          UTILISE :          GA2016                               */        
 /*------------------------------------------------------------------*/        
 /* DCL 1    SPA                                                     */        
 /*------------------------------------------------------------------*/        
 /* ---- SPA COMPLEMENTAIRE LONGUEUR 200 --------------------------- */        
      2  MEMOCMD,                           ##############################################################        
       3 CDNATOP             CHAR(01),      #########################################        
       3 CDTYPOP             CHAR(01),      #########################################        
       3 CDOBJOP             CHAR(03),      #########################################        
      2  LTOBJOP             CHAR(75),      #########################################        
      2  NOSQMEM             BIN FIXED(15), ####################################        
      2  CDTTAPP             CHAR(2),       ##########################################        
      2  CDAPPEL             CHAR(1),       ##########################################        
      2  CDMMSEL             CHAR(3),       ##########################################        
      2  LTINTKN             CHAR(20),      #########################################        
                                            /* VOIR SPAAREAK         */        
      2  CDLASTK             CHAR(1),       ##########################################        
      2  NOIDRSQ             FIXED(05),     ########################################        
      2  NOLTGEN             CHAR(13),      #########################################        
      2  RSVSPAC             CHAR(75),      #########################################        
 /* ---------------------------------------------------------------- */        
      2  INFOS_USER, #####################################        
         3 NOIDUSR   PIC'(7)9',        
         3 NOSQUSR   PIC'99',        
         3 TYPUSER   CHAR(7),        
         3 CDLGUSR   CHAR(1),        
         3 TBEGUSR(16) BIT(1), ####################################        
         
         3 CDSTAT    CHAR(05),        
         3 LTSITE    CHAR(10),        
         3 CDAFGRP   CHAR(07),        
         3 CDMSETH   CHAR(01), ##################################        
         3 CDTYSOU   CHAR(5),        
      2   SPAS1096,        
 /*       sert au retour d'identification quand la personne n'est        
          pas encore affiliee , elle ne peut pas continuer ...        
          PS : ces donnees sont utilisees dans l'identification !!!  */        
       3   CDDEST            CHAR(05),    #########################################        
       3   NODEVI            CHAR(13),    #########################################        
                                          /* 00SAAMMJJnnnn           */        
       3   CDMODULO          CHAR(02),    #########################################        
       3   LTEMAIL           CHAR(50),        
       3   CDTYPRO           CHAR(2),     ##########################################        
       3   CDGEPRO           CHAR(2),     ##########################################        
       3   FILLSP1           CHAR(30),        
         
      2   SPAVAR,        
         
       3   LTOBJOP_016       CHAR(75), #########################################        
         
 /*       Infos identification : Uniquement si SPA.NOIDAFF > 0       */        
       3   IDENTI,        
        4   CDRSAFF          CHAR (1),        
        4   NOIDAFF          FIXED(7),        
        4   LTNMAFF          CHAR (30),        
        4   LTPRAFF          CHAR (15),        
        4   DANAIAF          PIC'(8)9', ########################################        
        4   CDSEXAF          CHAR (1),        
        4   CDLGEAF          CHAR (1),        
        4   LTRUEAF          CHAR (25),        
        4   NOHA1AF          BIN FIXED(15),        
        4   NOHA2AF          CHAR (04),        
        4   LTLOCAF          CHAR (25),        
        4   CDCPOAF          CHAR (06),        
        4   EMAILAF          CHAR (50),        
        4   CDTYPRO          CHAR(2),  ##########################################        
        4   CDGEPRO          CHAR(2),  ##########################################        
        4   DADEPER          PIC'(8)9', ########################################        
         
       3   CDTYPOP           CHAR(01), #########################################        
       3   CDLIMIT           CHAR(01), #########################################        
       3   CDBLOCK           CHAR(01), #########################################        
       3   NEWDEVI           CHAR(01), #########################################        
       3   NOIDDEV           CHAR(13), #########################################        
       3   DEVISAF           CHAR(13), #########################################        
       3   VERSDEV           FIXED(03),########################################        
       3   AUTORSO           CHAR(01), #########################################        
 /*   R_ETAPE = "A2016n" pour etre sr de raz la SPAVAR !!!          */        
       3   R_ETAPE           CHAR(06), #########################################        
       3   DAVALID           CHAR(10), #########################################        
       3   NBRELAN           PIC '9',  ##########################################        
         
       3   FILLSP2           CHAR(10),        
         
 /*       vehicule choisi en guidance WA2083                         */        
      2   SCENARIO_1,        
 /*       ===========                                                */        
       3   ANNCSTR           PIC'(4)9',   ########################################        
       3   MARDEBU           CHAR(40),    #########################################        
       3   TXTCARB           CHAR(08),    #########################################        
         
       3   NOIDMAR           FIXED(07),        
       3   NOIDMOD           FIXED(07),        
       3   NOIDTYP           FIXED(07),        
       3   LTMARQU           CHAR(40),        
       3   LTMODEL           CHAR(40),        
       3   LTTYPEV           CHAR(40),        
       3   NBRTRAN           FIXED(03),        
       3   NBTYPKW           FIXED(03),        
       3   CDTYOP3           CHAR(01),    ##########################################        
       3   CDTYDM3           CHAR(01),    ##########################################        
       3   PRIHTVA           FIXED(9,2),        
       3   NBRPORT           FIXED(03),        
       3   LTBOITE           CHAR(50),        
       3   LTCARBU           CHAR(50),        
       3   TYPCYLI           FIXED(05),        
       3   NBCVDIN           FIXED(03),        
       3   NBVITES           FIXED(03),        
       3   CDSPORT           CHAR(01),        
       3   POIDVID           FIXED(05),        
       3   TAXETMC           FIXED(9,2),        
       3   DAFINIM           PIC'(6)9',        
       3   CDECOV2           CHAR(01),     #########################################        
         
 /*       Options montes d'origine et accessoires supplementaires    */        
 /*       08.06.2010 New Tarifs : on ne passe plus sur cette page    */        
      2   SCENARIO_4,        
 /*       ===========                                                */        
 /*        
       3   TAB_OPT(100),        
        4   NOIDTXT          FIXED(07),        
        4   PRIOPTI          FIXED(09,2),        
 */        
 /*       les 14 accessoires/options e memoriser dans le devis    */        
       3   TAB_SUP(14),        
        4   LTOPTSU          CHAR(50),        
        4   PRIOPSU          FIXED(09,2),        
 /*       Options selectionnees                                      */        
 /*    3   SEL_OPT(100)      CHAR(01),          Y/N                  */        
       3   TOTALAC           FIXED(9,2),        
         
 /*       Infos conducteur                                           */        
      2   SCENARIO_5,        
 /*       ===========                                                */        
       3   DANAIPR           PIC'(8)9',      ############################        
       3   CDPOPRE           PIC'(4)9',        
       3   VACATVH           FIXED(9,2),        
       3   CDPOSRM           CHAR(1),        ##########################################        
       3   CDUSAVH           CHAR(1),        ##########################################        
       3   CDCDC26           CHAR(1),        ##########################################        
       3   CDASTMC           CHAR(1),        ##########################################        
       3   BOVHOCC           CHAR(1),        ##########################################        
       3   NBSINIS           PIC '99',       #########################################        
       3   DAPERMI           PIC'(8)9',      ########################################        
       3   BOAUTCP           CHAR(1),        ##########################################        
       3   CDTYPRO           CHAR(2),        ##########################################        
       3   CDGEPRO           CHAR(2),        ##########################################        
       3   BOHOREC           CHAR(1),        ##########################################        
       3   NBKMPAN           PIC'(6)9',      ########################################        
       3   AGEPREN           PIC'99',        ##########################################        
       3   STARTOK           CHAR(01),       #########################################        
 /*        Si CDJEUNE = 1=> voir donnees du scenario 8               */        
       3   CDJEUNE           PIC'9',         ###########################################        
       3   AGEPERM           PIC'99',        ##########################################        
         
 /*       Resultat devis auto                                        */        
      2   SCENARIO_6,        
 /*       ===========                                                */        
       3   CDPADIV           CHAR(02),       #########################################        
       3   CDBMDET           PIC'99',        ##########################################        
       3   CDCIBCL           CHAR(02),       #########################################        
       3   CDPROMO           CHAR(01),       #########################################        
                                             /* 1= eco + > 10.000kms */        
                                             /* 2= < 10.000kms       */        
                                             /* 3= < 10.000kms + eco */        
       3   NBKMAVH           PIC'999',       #########################################        
       3   RESULTAT_AUTO,        
        4   MTGARCI          FIXED(13,2),    ######################################        
        4   MTGACAS          FIXED(13,2),    ######################################        
        4   MTGACA1          FIXED(13,2),    ######################################        
        4   MTGAASS          FIXED(13,2),    ######################################        
         
 /*         mobility                                                 */        
        4   MTGAMOB          FIXED(13,2),    ######################################        
        4   MTGAMO1          FIXED(13,2),    ######################################        
        4   MTGAMO2          FIXED(13,2),    ######################################        
         
 /*         Montants mini omniums                                    */        
        4   MTGAOM1          FIXED(13,2),    ######################################        
        4   MTGAOM2          FIXED(13,2),    ######################################        
         
 /*         Montants des omniums pour chaque niveau de franchise     */        
        4   TB_OMNI(3),        
          5  MTGAOM3         FIXED(13,2),    ######################################        
          5  MTGAOM4         FIXED(13,2),    ######################################        
         
        4   TBPRIME(20),        
          5  CDTYGAR          CHAR(03),      ########################################        
          5  CDTFGAR          CHAR(02),      ########################################        
          5  NUVSTRF          PIC'99',       #########################################        
          5  MTPBMRD          FIXED(13,2),   #####################################        
         
       3   RESULTAT_AUTO_PROMO,        
        4   MTGARCI          FIXED(13,2),    ######################################        
        4   MTGACAS          FIXED(13,2),    ######################################        
        4   MTGACA1          FIXED(13,2),    ######################################        
        4   MTGAASS          FIXED(13,2),    ######################################        
         
 /*         mobility                                                 */        
        4   MTGAMOB          FIXED(13,2),    ######################################        
        4   MTGAMO1          FIXED(13,2),    ######################################        
        4   MTGAMO2          FIXED(13,2),    ######################################        
         
 /*         Montants mini omniums                                    */        
        4   MTGAOM1          FIXED(13,2),    ######################################        
        4   MTGAOM2          FIXED(13,2),    ######################################        
         
 /*         Montants des omniums pour chaque niveau de franchise     */        
        4   TB_OMNI(3),        
          5  MTGAOM3         FIXED(13,2),    ######################################        
          5  MTGAOM4         FIXED(13,2),    ######################################        
         
        4   TBPRIME(20),        
          5 CDTYGAR          CHAR(03),       #########################################        
          5 CDTFGAR          CHAR(02),       #########################################        
          5 NUVSTRF          PIC'99',        ##########################################        
          5 MTPBMRD          FIXED(13,2),    ######################################        
         
       3   RESULTAT_REM,        
        4   MTRMRCI          FIXED(13,2),    ######################################        
        4   MTRMVO1          FIXED(13,2),    ######################################        
        4   MTRMIN1          FIXED(13,2),    ######################################        
        4   MTRMBRI          FIXED(13,2),    ######################################        
        4   MTRMDM3          FIXED(13,2),    ######################################        
        4   MTRMDM4          FIXED(13,2),    ######################################        
         
        4   TBPRIME(10),        
          5 CDTYGAR          CHAR(03),       #########################################        
          5 CDTFGAR          CHAR(02),       #########################################        
          5 NUVSTRF          PIC'99',        ##########################################        
          5 MTPBMRD          FIXED(13,2),    ######################################        
         
 /*       Garanties choisies                                         */        
       3   SELECT_GAR,        
        4   CDSERCI          CHAR(01),       #########################################        
        4   CDSECAS          CHAR(01),       #########################################        
        4   CDSECA1          CHAR(01),       #########################################        
        4   CDSEASS          CHAR(01),       #########################################        
        4   CDTYPOM          CHAR(01),       #########################################        
                                             /* choisie : 1,2,3,4    */        
        4   CDNIVFR          CHAR(01),       #########################################        
                                             /* choisi 1,2,3         */        
                                             /* !!! si jeune         */        
        4   CDSEMOB          CHAR(01),       #########################################        
        4   CDSEMO1          CHAR(01),       #########################################        
         
 /*       pour la remorque                                           */        
        4   CDRMRCI          CHAR(01),       #########################################        
        4   CDRMVO1          CHAR(01),       #########################################        
        4   CDRMIN1          CHAR(01),       #########################################        
        4   CDRMBRI          CHAR(01),       #########################################        
        4   CDRMDM3          CHAR(01),       #########################################        
        4   CDRMDM4          CHAR(01),       #########################################        
         
 /*       Infos remorque                                             */        
      2   SCENARIO_7,        
 /*       ===========                                                */        
       3   LTMARRM           CHAR(15),        
       3   ANCSTRM           PIC'(4)9',        
       3   MTCATRM           FIXED(9,2),        
       3   MTACTRM           FIXED(9,2),        
       3   NUPDSRM           PIC'(5)9',        
         
 /*       Infos tarif jeune                                          */        
      2   SCENARIO_8,        
 /*       ===========                                                */        
       3   NBSINDM           PIC'99',        
       3   CDJEUFA           CHAR(01), #########################################        
       3   CDTY2PO           CHAR(01), #########################################        
       3   CDSTACO           CHAR(01), #########################################        
       3   CDENFCH           CHAR(01), #########################################        
       3   CDSTART           CHAR(01), #########################################        
         
 /*       souscription 1                                             */        
      2   SCENARIO_9,        
 /*       ===========                                                */        
       3   NUMCPIE           CHAR(5),  ##########################################        
       3   NOIDPOC           CHAR(15), #########################################        
       3   DAECHRC           CHAR(08), #########################################        
       3   CDRESRI           CHAR(01), #########################################        
       3   CDTYPRE           CHAR(01), #########################################        
       3   NUMSMRS           CHAR(06), #########################################        
         
 /*       souscription 2                                             */        
      2   SCENARIO_10,      #########################################################        
 /*       ===========                                                */        
       3   LTNOMCO           CHAR(30), #########################################        
       3   LTPRECO           CHAR(30), #########################################        
       3   DANAICO           CHAR(08), #########################################        
       3   LTEMPPR           CHAR(20), #########################################        
       3   CDTYPPR           CHAR(01), #########################################        
       3   CDCONAL           CHAR(1),  ##########################################        
       3   CDCONIV           CHAR(1),  ##########################################        
       3   CDCONFU           CHAR(1),  ##########################################        
       3   NBSINVO           PIC'9',   ###########################################        
       3   NBSINDM           PIC'9',   ###########################################        
       3   NBDEPER           PIC'9',   ###########################################        
         
 /*       souscription 3                                             */        
      2   SCENARIO_11,       #########################################################        
 /*       ===========                                                */        
       3   LTNMHA1           CHAR(30), #########################################        
       3   LTPRHA1           CHAR(30), #########################################        
       3   DANAIS1           PIC'(8)9',########################################        
       3   ANPERM1           CHAR(04), #########################################        
       3   CDQUHA1           CHAR(01), #########################################        
       3   LTQUHA1           CHAR(12), #########################################        
       3   LTNMHA2           CHAR(30), #########################################        
       3   LTPRHA2           CHAR(30), #########################################        
       3   DANAIS2           PIC'(8)9',########################################        
       3   ANPERM2           CHAR(04), #########################################        
       3   CDQUHA2           CHAR(01), #########################################        
       3   LTQUHA2           CHAR(12), #########################################        
       3   LTNMHA3           CHAR(30), #########################################        
       3   LTPRHA3           CHAR(30), #########################################        
       3   DANAIS3           PIC'(8)9',########################################        
       3   ANPERM3           CHAR(04), #########################################        
       3   CDQUHA3           CHAR(01), #########################################        
       3   LTQUHA3           CHAR(12), #########################################        
         
 /*       souscription 4                                             */        
      2   SCENARIO_12,       #########################################################        
 /*       ===========                                                */        
       3   NUPLQVH           CHAR(07), #########################################        
       3   LTCHAVH           CHAR(17), #########################################        
       3   NUPLQRM           CHAR(07), #########################################        
       3   LTCHARM           CHAR(17), #########################################        
       3   DAEFFRC           PIC'(8)9',########################################        
       3   DAEFFAU           PIC'(8)9',########################################        
       3   CDMODPA           CHAR(01), #########################################        
       3   NBKMCPT           FIXED(7), #########################################        
         
      2   FILLER             CHAR(112);        
         
 /********************************************************************/        
 /* CDPROMO : code promo permanente (nov 2009)                       */        
 /* 1 = 15% sur RC  et Omnium                                        */        
 /* si moins de 10000 kms/an                                         */        
 /*                                                                  */        
 /* 2 = 25% sur RC  et 15% sur Omnium                                */        
 /* si moins de 10000 kms/an ET vehicule eco                         */        
 /*                                                                  */        
 /* 3 = 10% sur RC                                                   */        
 /* si vehicule eco (et pas < 10000kms/an)                           */        
 /********************************************************************/        
             /* SPA VARIABLE                     */        
         
 /***************************************/        
 /*    DESCRIPTION DU MESSAGE D'ERREUR  */        
 /***************************************/        
 DCL 1 PAGEER BASED(GA2016J.PAGEER_PTR),        
         
 /************************************************************/        
 /*    PAGE D'ERREUR                                         */        
 /************************************************************/        
      2  LL                 BIN FIXED(15),        
      2  ZZ                 BIN FIXED(15),        
      2  LPG                CHAR (1),        
      2  LTOPTRN            CHAR(30),        
      2  LTMETRN            CHAR(79),        
      2  CDLGTRN            CHAR(01),   ##############################        
      2  LTRTPG1            CHAR(79),   ##############################        
      2  LTRTPG2            CHAR(79),   ##############################        
      2  LTRTPG3            CHAR(79);   ##############################        
         
         
 /*================== CONSTANTES ================================*/        
         
 DCL ON                  BIT(1)     VALUE('1'B);        
 DCL OFF                 BIT(1)     VALUE('0'B);        
 DCL NUM                 CHAR(10)   VALUE('0123456789');        
 DCL NUMB                CHAR(11)   VALUE('0123456789 ');        
 DCL OK                  BIT(1)     INIT('0'B);        
         
 /********************************************************************/        
 /*     DECLARATION DES CARACTERES POUR TABLE 274                    */        
 /********************************************************************/        
         
 DCL MINUS274 CHAR (41)        
              VALUE ('abcdefghijklmnopqrstuvwxyzeee');        
         
      /*CARACTERES MINUSCULES EN CODE PAGE 274*/        
 /********************************************************************/        
 /*     DECLARATION DES CARACTERES POUR TABLE 500                    */        
 /********************************************************************/        
         
 DCL MINUS500 CHAR (41)        
              VALUE ('abcdefghijklmnopqrstuvwxyz{}@\');        
         
      /*CARACTERES MINUSCULES EN CODE PAGE 500*/        
 /********************************************************************/        
 /*     DECLARATION DES CARACTERES POUR TABLE 274 ET TABLE 500       */        
 /********************************************************************/        
         
 DCL MINUS CHAR (41);        
 DCL MAJUS CHAR (41)        
           VALUE ('ABCDEFGHIJKLMNOPQRSTUVWXYZEEEEUUUAAAIIOOC');        
         
                        /*CARACTERES MAJUSCULES + DECLARATION DE MINUS*/        
         
 /*================== VARIABLES =================================*/        
         
 DCL ERREUR       STATIC BIT(1)     INIT('0'B);        
         
 DCL CDRTPGM_W    STATIC CHAR (09)  INIT ('');        
         
 DCL (IND,I, J, K ,X, Y) FIXED BIN (31);        
         
 /**************************************************        
 * AUTRES DECLARATIONS                             *        
 **************************************************/        
         
 DCL A2EUT11_R   CHAR(STG(A2EUT11)) BASED(ADDR(A2EUT11));        
 DCL A2EUT12_R   CHAR(STG(A2EUT12)) BASED(ADDR(A2EUT12));        
 DCL A2EUT13_R   CHAR(STG(A2EUT13)) BASED(ADDR(A2EUT13));        
 DCL A2EUT17_R   CHAR(STG(A2EUT17)) BASED(ADDR(A2EUT17));        
         
 /*================== VARIABLES =================================*/        
 DCL ANNCSTR_W               PIC'9999';        
 DCL MARDEBU_W        CHAR(40);        
 DCL TXTCARB_W        CHAR(08);        
 DCL NOIDMAR_W        FIXED(07);        
 DCL NOIDMOD_W        FIXED(07);        
         
 DCL INTER_C1            CHAR(1);        
 DCL INTER_P1            PIC'9'       DEF INTER_C1;        
 DCL INTER_C2            CHAR(2);        
 DCL INTER_P2            PIC'(2)9'    DEF INTER_C2;        
 DCL INTER_Z2            PIC'Z9';        
 DCL INTER_C3            CHAR(3);        
 DCL INTER_P3            PIC'(3)9'    DEF INTER_C3;        
 DCL INTER_Z3            PIC'ZZ9';        
 DCL INTER_F3            FIXED(03);        
 DCL INTER_C4            CHAR(4);        
 DCL INTER_P4            PIC'(4)9'    DEF INTER_C4;        
 DCL INTER_F4            FIXED(04);        
 DCL INTER_C5            CHAR(5);        
 DCL INTER_P5            PIC'(5)9'    DEF INTER_C5;        
 DCL INTER_Z5            PIC'(4)Z9';        
 DCL INTER_F5            FIXED(05);        
 DCL INTER_C6            CHAR(6);        
 DCL INTER_P6            PIC'(6)9'    DEF INTER_C6;        
 DCL INTER_C7            CHAR(7);        
 DCL INTER_P7            PIC'(7)9'    DEF INTER_C7;        
 DCL INTER_Z7            PIC'ZZZZZZ9';        
 DCL INTER_F7            FIXED(07);        
 DCL INTER_C8            CHAR(8);        
 DCL INTER_P8            PIC'(8)9'    DEF INTER_C8;        
 DCL INTER_F8            FIXED(08);        
 DCL INTER_C9            CHAR(9);        
 DCL INTER_P9            PIC'(9)9'    DEF INTER_C9;        
 DCL INTER_F9            FIXED(09);        
 DCL INTER_P10           PIC'(10)9';        
 DCL INTER_C10           CHAR(10)     DEF INTER_P10;        
 DCL INTER_C11           CHAR(11);        
 DCL INTER_P11           PIC'(11)9'   DEF INTER_C11;        
 DCL INTER_F11           FIXED(11);        
 DCL INTER_F15           FIXED(15);        
 DCL W_NUPDSVH           PIC '99V,9';        
 DCL W_POIDS             FIXED(7,2);        
 DCL W_LGEAF             PIC '9';        
 DCL STAT_W              CHAR(08);        
 DCL DATES1              PIC '(7)9';        
 DCL 1   DATESR1 BASED(ADDR(DATES1)),        
      2  S               PIC '9',        
      2  AA              PIC '99',        
      2  MM              PIC '99',        
      2  JJ              PIC '99';        
         
 DCL DATES2              PIC '(8)9';        
 DCL 1   DATESR2 BASED(ADDR(DATES2)),        
      2  JJ              PIC '99',        
      2  MM              PIC '99',        
      2  AA              PIC '9999';        
 DCL DATES3              CHAR(10);        
 DCL 1   DATESR3 BASED(ADDR(DATES3)),        
      2  JJ              CHAR(02),        
      2  SL1             CHAR(01),        
      2  MM              CHAR(02),        
      2  SL2             CHAR(01),        
      2  AA              CHAR(04);        
 DCL CDRFPRT_W    STATIC CHAR (03)  INIT ('');        
         
 /*================== CONSTANTES ================================*/        
         
 DCL TXTTMC (3)          CHAR(6)     INIT (        
   'T.M.C.'        
  ,'B.I.V.'        
  ,'T.M.C.'        
  );        
         
 DCL CDCARBU_W(3)     CHAR (08);        
 DCL LIBCARB_W(3,2)   CHAR (40);        
         
 CDCARBU_W(1) = 'ESSENCE ';        
 CDCARBU_W(2) = 'DIESEL  ';        
 CDCARBU_W(3) = 'ESSENGAZ';        
         
 LIBCARB_W(1,1) = 'Essence';        
 LIBCARB_W(1,2) = 'Benzine';        
 LIBCARB_W(2,1) = 'Diesel';        
 LIBCARB_W(2,2) = 'Diesel';        
 LIBCARB_W(3,1) = 'Essence et gaz';        
 /*        
 LIBCARB_W(3,2) = 'Benzine of gaz';        
 */        
 LIBCARB_W(3,2) = 'Gas';        
         
 DCL SPAA2GEU_P              PTR;        
 SPAA2GEU_P = ADDR(SPA.INFOS_USER);        
 DCL 1 SPA_IA2083            BASED(SPAA2GEU_P),        
 /*******************************************************************/        
 /* INCLUDE POUR LES ZONES COMMUNES          LENGTH=400   TDMKIP    */        
 /* UTILISATION DE LA GUIDANCE EUROTAX MARQUES/MODELES/TYPES        */        
 /* --------------------------------------------------------        */        
 /* POSSIBILITe D'ACCeS RESTREINTE AUX DONNeES EUROTAX , AVEC       */        
 /* DES CRITeRES DE SeLECTION FACULTATIFS                           */        
         
 /* INPUT :                                                         */        
 /* -------                                                         */        
 /* CDTYPVH : 'VP'=VOITURES, 'UT'=UTILITAIRES (DeFAUT='VP')         */        
 /* ANNECTR : ANNeE DE CONSTRUCTION                                 */        
 /*     Selection des vehicules avec date debut d'importation>=     */        
 /*     ANNECTR et Date fin d'importation <= ANNECTR (ou 0)         */        
 /*     Si ANNECTR = 0 => Pas de selection : on prend tout          */        
 /* CDTTERR : Vehicules TOUT-Terrain                                */        
 /*     Si CDTTERR = Blanc => on prend Tout                         */        
 /*     Si CDTTERR = '0'   => on prend uniqut les NON Tout terrain  */        
 /*     Si CDTTERR = '1'   => on prend uniqut les Tout-terrain      */        
 /* CDSPORT : Vehicules Sportifs                                    */        
 /*     Si CDSPORT = Blanc => on prend Tout                         */        
 /*     Si CDSPORT = '0'   => on prend uniqut les NON sportifs      */        
 /*     Si CDSPORT = '1'   => on prend uniqut les sportifs          */        
 /* CDSPOSE : Vehicules selon segmentation sportive (S1,S2...S5)    */        
 /*     Si CDSPOSE = Blanc => on prend Tout                         */        
 /*     Si CDSPOSE = 'Sn'  => on prend uniqut ceux qui ont Sn       */        
 /* TXTCLAS : Classe de vehicules (Voir DA223 type de texte 0003)   */        
 /*     Si TXTCLAS = Blanc => on prend Tout                         */        
 /*     Si TXTCLAS = '0003nnnn => Ceux qui ont ce code dans TXTCLAS */        
 /* TXTCATV : Categorie vehicules (Voir DA223 type de texte 0004)   */        
 /*     Si TXTCATV = Blanc => on prend Tout                         */        
 /*     Si TXTCATV = '0004nnnn => Ceux qui ont ce code dans TXTCATV */        
 /* TXTCARO : Type de carrosserie (Voir DA223 type de texte 0001)   */        
 /*     Si TXTCARO = Blanc => on prend Tout                         */        
 /*     Si TXTCARO = '0001nnnn => Ceux qui ont ce code dans TXTCARO */        
 /* TXTCARB : Type de carburant   (Voir DA223 type de texte 0010)   */        
 /*     Si TXTCARB = Blanc => on prend Tout                         */        
 /*     Si TXTCARB = '0010nnnn => Ceux qui ont ce code dans TXTCARB */        
 /*   Modif cki :                                                   */        
 /*   si TXTCARB='ESSENCE '                                         */        
 /*      => Selectionnera 00100001 (Essence sans plomb)             */        
 /*                       00100002 (Essence plomb)                  */        
 /*                       00100012 (Essence super sans plomb)       */        
 /*                       00100006 (Essence ou gaz)                 */        
 /*   si TXTCARB='DIESEL  '                                         */        
 /*      => Selectionnera 00100003 (Diesel)                         */        
 /*   si TXTCARB='ESSENGAZ'                                         */        
 /*      => Selectionnera 00100006 (Essence ou gaz)                 */        
 /*                                                                 */        
 /* ANNEIMA Annee d'immatriculation et MOISIMA mois d'immatricul.   */        
 /* Si ANNEIMA = 0 et MOISIMA =0   => TMC OCCAS EST 0               */        
 /* Si ANNEIMA > 0 et MOISIMA >0   => TMC OCCAS diff de 0           */        
 /* ANNEIMA : Annee d'immatriculation                               */        
 /*     Si ANNEIMA = 0     => pas de renseignement cotations        */        
 /*     Si ANNEIMA > 0     => calcul cotation achat et vente        */        
 /* KILOMRE : Kilometrage reel                                      */        
 /*     Si KILOMRE > 0     => les cotes seront ajustees en fonction */        
 /*                           du kilometrage fourni                 */        
 /* LIBMARQ : Libelle de(s) marque(s) e traiter en guidance         */        
 /*     Ex : A? => uniquement les marques dont le libelle commence  */        
 /*                par la lettre A                                  */        
 /*         RO? => uniquement les marques dont le libelle commence  */        
 /*                par les lettres RO                               */        
 /*                                                                 */        
 /* NOIDMAR : NOIDMAR e remettre si appel pour aller direct sur TYPE*/        
 /* NOIDMOD : NOIDMOD e remettre si appel pour aller direct sur TYPE*/        
 /* NOUVEAU : 'O' on veut uniquement les nouveaux vehicules         */        
 /*           ceux dont Date Debut import >= ANNECTR                */        
 /*******************************************************************/        
      2 GA20831J,        
       3 INPUT,        
         4 CDTYPVH               CHAR(02), ####################################        
                                           /* UT = UTILITAIRES      */        
                                           /* MO = MOTOS            */        
         4 ANNECTR               PIC'(4)9',###################################        
         4 CDTTERR               CHAR(01), ####################################        
         4 CDSPORT               CHAR(01), ####################################        
         4 CDSPOSE               CHAR(02), ####################################        
         4 TXTCLAS               CHAR(08), ####################################        
         4 TXTCATV               CHAR(08), ####################################        
         4 TXTCARO               CHAR(08), ####################################        
         4 TXTCARB               CHAR(08), ####################################        
         4 ANNEIMA               PIC'(4)9',###################################        
         4 MOISIMA               PIC'(2)9',###################################        
         4 KILOMRE               PIC'(9)9',###################################        
         4 LIBMARQ               CHAR(40), ####################################        
         
         4 NOIDMAR               PIC'(7)9',###################################        
         4 NOIDMOD               PIC'(7)9',###################################        
         4 NOUVEAU               CHAR(01), ####################################        
         4 CDOPTRN               CHAR(05), ####################################        
         4 FILLER                CHAR(115),        
       3 OUTPUT,        
         4 NOIDMAR               PIC'(7)9',###################################        
         4 NOIDMOD               PIC'(7)9',###################################        
         4 NOIDTYP               PIC'(7)9',###################################        
         4 LTMARQU               CHAR(40), ####################################        
         4 LTMODEL               CHAR(40), ####################################        
         4 LTTYPEV               CHAR(60), ####################################        
         4 DADEBIM               PIC'(6)9',###################################        
         4 DAFINIM               PIC'(6)9',###################################        
         4 NBRTRAN               FIXED(03),###################################        
         4 NBTYPKW               FIXED(03),###################################        
         4 TXTCARB               CHAR(08), ####################################        
         4 CDSPORT               CHAR(01), ####################################        
         4 CDCABRI               CHAR(01), ####################################        
         4 CDVOLSM               CHAR(01), ####################################        
         4 CDDMSMA               CHAR(01), ####################################        
         4 PRIHTVA               FIXED(09),###################################        
         4 PRITVAC               FIXED(09),###################################        
         4 COTAREV               FIXED(09),###################################        
         4 COTARAC               FIXED(09),###################################        
         4 CDOMETH               CHAR(01), ####################################        
         4 CDDMETH               CHAR(01), ####################################        
         4 TMC_NOUV              FIXED(09),###################################        
         4 TMC_OCCAS             FIXED(09),###################################        
         4 NBCVFIS               DEC FIXED(5,2),   ##############################        
         4 FILLER                CHAR(132),        
        /* Guidance Eurotax                     */        
      2 FILLER               CHAR(01);        
         
 DCL 1  SAVERETOUR  LIKE GA20831J.OUTPUT   STATIC;        
         
 /* TDMKIP 29/10/08 */        
 /*********************************************************************/        
 /* INTERFACE ROUTINE D'INITIALISATION TS1008                         */        
 /*********************************************************************/        
         
 DCL 1 JS1D40,        
       2 PTRPCB,        
         3 ALTPCB          PTR,        
         
 /******************  I N P U T ***************************************/        
      2  INPUT,        
         3 NOIDAFF  DEC FIXED(7), ###############################################        
         3 CDKERNL  CHAR(02),     ###################################################        
         
 /****************** O U T P U T **************************************/        
      2  OUTPUT,        
         3 FILLER   CHAR(20);        
 /*********************************************************************/        
 DCL XS1D40  ENTRY;  ########################################################        
         
 /***************************/        
 /*    FICHIERS             */        
 /***************************/        
 DCL SYSPRINT FILE STREAM OUTPUT PRINT;        
         
 /***************************/        
 /*    DESCRIPTION DU MID   */        
 /***************************/        
 DCL 1 MID1 BASED(GA2016J.MID_PTR),        
 /* >>> HEADER DU MID         */        
      2   LL                  BIN FIXED(15),        
      2   Z1                  CHAR(1),        
      2   Z2                  CHAR(1),        
      2   HEADER,        
       3  TRANSAC             CHAR (08),  ############################        
       3  NOIDCLI             CHAR (08),  ############################        
       3  NOIDSCR             CHAR (04),  ############################        
       3  RFSIGNA             CHAR (08),  ############################        
       3  CDLGTRN             CHAR (01),  ############################        
       3  CDDVTRN             CHAR (01),  ############################        
       3  CLE                 CHAR (01),  ############################        
       3  CDOPTRN             CHAR (05),  ############################        
       3  CDIDSES             CHAR (01),  ############################        
       3  NODOACT             CHAR (02),  ############################        
       3  RESERVE             CHAR (07),  ############################        
 /*     HEADER DU MID     <<< */        
         
 /* ------------------------------------------------------------ */        
 /* DCL 1   MID1   UTILISE : TA2016   TA2016   GA20161           */        
 /* ------------------------------------------------------------ */        
  /* INFOS_STAT */        
 /*-----------------------------------------------------------*/        
 /*   MID    UTILISE POUR LES STATISTIQUES DU SITE ETHIAS     */        
 /*-----------------------------------------------------------*/        
 /* CKI 17.02.06 : SI MFS => AJOUT DANS INPUT JSM328M LONG 59 */        
 /*   (VOIR PPH102)                                           */        
 /*-----------------------------------------------------------*/        
      2  CDLGPAG     CHAR (01),        
      2  CDENTREE    CHAR (01),        
      2  CDTYPVI     CHAR (07),        
      2  NOPGACT     CHAR (16),        
      2  NOPGDEM     CHAR (16),        
      2  NOIDUSR     PIC '(07)9',        
      2  NOSQUSR     PIC '99',        
      2  BANNER      CHAR (09),        
      2  LTMARQU              CHAR(40),        
      2  ANNCSTR              CHAR(04),        
      2  TXTCARB              CHAR(08);        
         
 /***************************/        
 /*    DESCRIPTION DU MOD   */        
 /***************************/        
 DCL 1 PAGE1 BASED(GA2016J.PAGE_PTR),        
 /* >>> HEADER PAGE 1       */        
      2  LL                 BIN FIXED(15),        
      2  ZZ                 BIN FIXED(15),        
      2  LPG                CHAR(02),        
      2  SCA                CHAR(02),        
      2  CDEXTOP            CHAR(08),  ##################################        
      2  NOIDSCR            CHAR(04),  ##################################        
      2  RFSIGNA            CHAR(08),  ##################################        
      2  CDLGTRN            CHAR(01),  ##################################        
      2  CDSCTRN            CHAR(01),  ##################################        
      2  LTSCTRN_A          CHAR(08),        
      2  LTSCTRN            CHAR(04),        
      2  LTOPTRN            CHAR(30),        
      2  CDOPTRN_A          CHAR(08),        
      2  CDOPTRN            CHAR(05),        
      2  BOMETRN            CHAR(01),        
      2  LTMETRN            CHAR(79),        
      2  RESERVE            CHAR(10),        
 /*     HEADER PAGE  1  <<< */        
 /* -------------------------------------------------------------- */        
 /* DCL 1   PAGE1     TRANSACTION: TA2016   TA2016   GA20161       */        
 /* -------------------------------------------------------------- */        
 /* >>> HEADER 2 MOD      */        
      2  LTRFCSR            CHAR (07),  ####################################        
      2  NURFCSI            CHAR (03),  ####################################        
      2  NURFCSJ            CHAR (03),  ####################################        
      2  LTRFPOS            CHAR (07),  ####################################        
      2  NURFPSI            CHAR (03),  ####################################        
      2  NURFPSJ            CHAR (03),  ####################################        
      2  CDBTENT            CHAR (10),  ####################################        
      2  LTOPCDE            CHAR (60),  ####################################        
      2  RSERVE2            CHAR (60),  ####################################        
 /*     HEADER 2 MOD  <<< */        
      2 NOIDUSR         PIC'(7)9',        
      2 NOSQUSR         PIC '99',        
      2 NEWUSER         CHAR(1),        
      2 CDENTREE        CHAR (01),        
      2 NOIDPAG         CHAR(07),        
         
      2  LTMARQU            CHAR(40),        
         
      2  ANNCSTR            CHAR(04),        
      2  TAB_ANN(15),        
       3  ANNCSTR           CHAR(04),        
         
      2  TXTCARB            CHAR(08),        
      2  TB_CARB(03),        
       3  TXTCARB           CHAR(08),        
       3  LIBCARB           CHAR(50);        
         
 DCL  1  PAGE1TXT       CHAR(STG(PAGE1)) BASED(ADDR(PAGE1));        
         
         
 /********************************************        
 * DECLARATION DES PCB                       *        
 ********************************************/        
 /*---------------------------------------------------------- PCBINIT */        
 /*------------------------------------------------------ END PCBINIT */        
 /*-------------------------------------------------------- FCTINIVA */        
    DCL  CEETDLI ENTRY OPTIONS (ASM);        
    DCL  PLITDLI ENTRY;        
    DCL  GN    CHAR(4)               VALUE ('GN  ');        
    DCL  GU    CHAR(4)               VALUE ('GU  ');        
    DCL  GHU   CHAR(4)               VALUE ('GHU ');        
    DCL  GNP   CHAR(4)               VALUE ('GNP ');        
    DCL  GHN   CHAR(4)               VALUE ('GHN ');        
    DCL  GHNP  CHAR(4)               VALUE ('GHNP');        
    DCL  GCV   CHAR(4)               VALUE ('GCV ');        
    DCL  ISRT  CHAR(4)               VALUE ('ISRT');        
    DCL  DLET  CHAR(4)               VALUE ('DLET');        
    DCL  REPL  CHAR(4)               VALUE ('REPL');        
    DCL  CHNG  CHAR(4)               VALUE ('CHNG');        
    DCL  LOG   CHAR(4)               VALUE ('LOG ');        
    DCL  STAT  CHAR(4)               VALUE ('STAT');        
    DCL  ROLL  CHAR(4)               VALUE ('ROLL');        
    DCL  ROLB  CHAR(4)               VALUE ('ROLB');        
    DCL  PURG  CHAR(4)               VALUE ('PURG');        
    DCL  CMD   CHAR(4)               VALUE ('CMD ');        
    DCL  GCMD  CHAR(4)               VALUE ('GCMD');        
    DCL  CHKP  CHAR(4)               VALUE ('CHKP');        
    DCL  XRST  CHAR(4)               VALUE ('XRST');        
    DCL  DEQ   CHAR(4)               VALUE ('DEQ ');        
    DCL  ONE   FIXED BIN (31)        VALUE (0001B);        
    DCL  TWO   FIXED BIN (31)        VALUE (0010B);        
    DCL  THREE FIXED BIN (31)        VALUE (0011B);        
    DCL  FOUR  FIXED BIN (31)        VALUE (0100B);        
    DCL  FIVE  FIXED BIN (31)        VALUE (0101B);        
    DCL  SIX   FIXED BIN (31)        VALUE (0110B);        
    DCL  SEVEN FIXED BIN (31)        VALUE (0111B);        
    DCL  EIGHT FIXED BIN (31)        VALUE (1000B);        
    DCL  NINE  FIXED BIN (31)        VALUE (1001B);        
 /*----------------------------------------------------- END FCTINIVA */        
 /*-------------------------------------------------------- DBPCBMSK */        
   DCL      DC105PCB             PTR;        
    DCL  LKEY_DC105 FIXED BINARY(31,0);        
         
    DCL  1  DC105           BASED(DC105PCB) ,        
         
           2  DBDNAME              CHAR(8),        
           2  SEGLEVEL             CHAR(2),        
           2  STATUS               CHAR(2),        
           2  PROCOPT              CHAR(4),        
           2  RESERVED             CHAR(4),        
           2  SEGNAME              CHAR(8),        
           2  KEYLEN               FIXED BIN(31),        
           2  SENSEG               FIXED BIN(31),        
           2  KEYAREA              CHAR(LKEY_DC105 REFER(DC105.KEYLEN));        
         
 /*---------------------------------------------------- END DBPCBMSK */        
 DC105PCB= GA2016J.DC105PCB;        
         
 /*-------------------------------------------------------- TPPCBMSK */        
   DCL ALTPCB PTR;        
    DCL  1  ALT      BASED(ALTPCB),        
           2  LTERM                CHAR(8),        
           2  RESERVED             CHAR(2),        
           2  STATUS               CHAR(2),        
           2  DATEIMS              FIXED(7),        
           2  TIMEIMS              FIXED(7,1),        
           2  SEQUENCE             BIN FIXED(31),        
           2  MODNAME              CHAR(8),        
           2  USERFIELD            CHAR(8);        
 /*---------------------------------------------------- END TPPCBMSK */        
 ALTPCB= GA2016J.ALTPCB;        
         
 /*-------------------------------------------------------- DBPCBMSK */        
   DCL      DA215PCB             PTR;        
    DCL  LKEY_DA215 FIXED BINARY(31,0);        
         
    DCL  1  DA215           BASED(DA215PCB) ,        
         
           2  DBDNAME              CHAR(8),        
           2  SEGLEVEL             CHAR(2),        
           2  STATUS               CHAR(2),        
           2  PROCOPT              CHAR(4),        
           2  RESERVED             CHAR(4),        
           2  SEGNAME              CHAR(8),        
           2  KEYLEN               FIXED BIN(31),        
           2  SENSEG               FIXED BIN(31),        
           2  KEYAREA              CHAR(LKEY_DA215 REFER(DA215.KEYLEN));        
         
 /*---------------------------------------------------- END DBPCBMSK */        
 DA215PCB= GA2016J.DA215PCB;        
         
 /*-------------------------------------------------------- DBPCBMSK */        
   DCL      DA215$PCB             PTR;        
         
    DCL  LKEY_DA215$ FIXED BINARY(31,0);        
         
    DCL  1  DA215$           BASED(DA215$PCB) ,        
         
           2  DBDNAME              CHAR(8),        
           2  SEGLEVEL             CHAR(2),        
           2  STATUS               CHAR(2),        
           2  PROCOPT              CHAR(4),        
           2  RESERVED             CHAR(4),        
           2  SEGNAME              CHAR(8),        
           2  KEYLEN               FIXED BIN(31),        
           2  SENSEG               FIXED BIN(31),        
           2  KEYAREA              CHAR(LKEY_DA215$ REFER(DA215$.KEYLEN)        
 );        
 /*---------------------------------------------------- END DBPCBMSK */        
 DA215$PCB= GA2016J.DA215$PCB;        
         
 /*-------------------------------------------------------- DBPCBMSK */        
   DCL      DA2152PCB             PTR;        
         
    DCL  LKEY_DA2152 FIXED BINARY(31,0);        
         
    DCL  1  DA2152           BASED(DA2152PCB) ,        
         
           2  DBDNAME              CHAR(8),        
           2  SEGLEVEL             CHAR(2),        
           2  STATUS               CHAR(2),        
           2  PROCOPT              CHAR(4),        
           2  RESERVED             CHAR(4),        
           2  SEGNAME              CHAR(8),        
           2  KEYLEN               FIXED BIN(31),        
           2  SENSEG               FIXED BIN(31),        
           2  KEYAREA              CHAR(LKEY_DA2152 REFER(DA2152.KEYLEN)        
 );        
 /*---------------------------------------------------- END DBPCBMSK */        
 DA2152PCB= GA2016J.DA2152PCB;        
         
 /*-------------------------------------------------------- DBPCBMSK */        
   DCL      DA216PCB             PTR;        
    DCL  LKEY_DA216 FIXED BINARY(31,0);        
         
    DCL  1  DA216           BASED(DA216PCB) ,        
         
           2  DBDNAME              CHAR(8),        
           2  SEGLEVEL             CHAR(2),        
           2  STATUS               CHAR(2),        
           2  PROCOPT              CHAR(4),        
           2  RESERVED             CHAR(4),        
           2  SEGNAME              CHAR(8),        
           2  KEYLEN               FIXED BIN(31),        
           2  SENSEG               FIXED BIN(31),        
           2  KEYAREA              CHAR(LKEY_DA216 REFER(DA216.KEYLEN));        
         
 /*---------------------------------------------------- END DBPCBMSK */        
 DA216PCB= GA2016J.DA216PCB;        
         
 /*-------------------------------------------------------- DBPCBMSK */        
   DCL      DA223PCB             PTR;        
    DCL  LKEY_DA223 FIXED BINARY(31,0);        
         
    DCL  1  DA223           BASED(DA223PCB) ,        
         
           2  DBDNAME              CHAR(8),        
           2  SEGLEVEL             CHAR(2),        
           2  STATUS               CHAR(2),        
           2  PROCOPT              CHAR(4),        
           2  RESERVED             CHAR(4),        
           2  SEGNAME              CHAR(8),        
           2  KEYLEN               FIXED BIN(31),        
           2  SENSEG               FIXED BIN(31),        
           2  KEYAREA              CHAR(LKEY_DA223 REFER(DA223.KEYLEN));        
         
 /*---------------------------------------------------- END DBPCBMSK */        
 DA223PCB= GA2016J.DA223PCB;        
         
 /*-------------------------------------------------------- DBPCBMSK */        
   DCL      DSM88PCB             PTR;        
    DCL  LKEY_DSM88 FIXED BINARY(31,0);        
         
    DCL  1  DSM88           BASED(DSM88PCB) ,        
         
           2  DBDNAME              CHAR(8),        
           2  SEGLEVEL             CHAR(2),        
           2  STATUS               CHAR(2),        
           2  PROCOPT              CHAR(4),        
           2  RESERVED             CHAR(4),        
           2  SEGNAME              CHAR(8),        
           2  KEYLEN               FIXED BIN(31),        
           2  SENSEG               FIXED BIN(31),        
           2  KEYAREA              CHAR(LKEY_DSM88 REFER(DSM88.KEYLEN));        
         
 /*---------------------------------------------------- END DBPCBMSK */        
 DSM88PCB= GA2016J.DSM88PCB;        
         
 /*-------------------------------------------------------- DBPCBMSK */        
   DCL      DEU02PCB             PTR;        
    DCL  LKEY_DEU02 FIXED BINARY(31,0);        
         
    DCL  1  DEU02           BASED(DEU02PCB) ,        
         
           2  DBDNAME              CHAR(8),        
           2  SEGLEVEL             CHAR(2),        
           2  STATUS               CHAR(2),        
           2  PROCOPT              CHAR(4),        
           2  RESERVED             CHAR(4),        
           2  SEGNAME              CHAR(8),        
           2  KEYLEN               FIXED BIN(31),        
           2  SENSEG               FIXED BIN(31),        
           2  KEYAREA              CHAR(LKEY_DEU02 REFER(DEU02.KEYLEN));        
         
 /*---------------------------------------------------- END DBPCBMSK */        
 DEU02PCB= GA2016J.DEU02PCB;        
         
 /********************************************        
 * GESTION DES ERREURS                       *        
 ********************************************/        
 DCL 1   MESS_TRACE  STATIC,                ################################################        
      2  LL_TR              BIN FIXED(15)   INIT(44),        
      2  ZZ_TR              BIN FIXED(15)   INIT(0),        
      2  TRACE              CHAR(40);        
 DCL 1   TB_TRACE(100) STATIC,        
      2  FLAG_TRACE         CHAR(01),        
      2  MSGE_TRACE         CHAR(40);        
 DCL     ITRACE             BIN FIXED (31)  STATIC;        
 DCL     ERR_MSG     STATIC CHAR(79);        
 DCL     PTRMSG             PTR;        
 DCL 1   ERR_DBA            BASED(PTRMSG),        
      2  FILL1              CHAR(12),        
      2  FILL2              CHAR(04),        
      2  DBD_DBA            CHAR(08),        
      2  FILL3              CHAR(08),        
      2  CALL_DBA           CHAR(10),        
      2  FILL4              CHAR(05),        
      2  KEY_DBA            CHAR(24),        
      2  FILL5              CHAR(05),        
      2  ST_DBA             CHAR(02),        
      2  FILL6              CHAR(01);        
 TB_TRACE(*)='';        
 ITRACE=0;        
 PTRMSG=ADDR(ERR_MSG);        
         
         
 /* VARIABLE PERMETTANT D'AFFICHER LA DATE ET L'HEURE DE COMPILATION */        
         
 /* VARIABLE MAX CHECK POINT : NBR MAX. DE LOTS AUTORISE AVANT CHKPT */        
 /*------------------------------------------------------------ DEBUG */        
 PT: PROC;        
 /******************************/        
 /*       MEMO TRACE           */        
 /******************************/        
 JWB001.TBTRACE_I = JWB001.TBTRACE_I+1;        
 IF JWB001.TBTRACE_I > 100        
    THEN DO;        
         JWB001.TBTRACE_I = 1;        
         JWB001.FLAG_TRACE(*) = '';        
         END;        
 JWB001.FLAG_TRACE(JWB001.TBTRACE_I) = '*';        
 JWB001.MSGE_TRACE(JWB001.TBTRACE_I) = TRACE;        
                               IF JWB001.CDTRACE > 0 THEN        
      PUT SKIP EDIT(TRACE)(A);        
 $END PT;        
         
 DEBUG: PROC;        
 /**************************************/        
 /*       PRINTING   TRACE             */        
 /**************************************/        
 DCL KT BIN FIXED(31);        
 PUT FILE(SYSPRINT) EDIT('- PROGRAM TRACE: -')        
                        (SKIP(3),A)        
                        ('------------------')        
                        (SKIP,A);        
 DO KT=1 TO 100;        
    IF JWB001.MSGE_TRACE(KT)^=''        
       THEN PUT FILE(SYSPRINT)        
            EDIT(JWB001.FLAG_TRACE(KT),        
                 JWB001.MSGE_TRACE(KT))        
                                   (SKIP,A,A);        
 END;        
 PUT FILE(SYSPRINT) EDIT('------------------')        
                        (SKIP,A);        
 $END DEBUG;        
 /*-------------------------------------------------------- END DEBUG */        
 /*-------------------------------------------------------------------*/        
 ERR_DL1:PROC REORDER;        
 /********************************************************************/        
 /*                                                                  */        
 /*                PROCEDURE DL1 : ERREUR DATA BASE                  */        
 /*                                                                  */        
 /********************************************************************/        
 JWB001.CDRTPGM = 'ERR_DL1';        
 PUT PAGE EDIT('A20161',  ' - VERSION DU : * 18.AUG.10 16.17.16 * - ',        
         
               'LAST SV CALL = ',JWB001.LSTCALL,        
               'LAST DB CALL = ',JWB001.LSTSERV)        
              (SKIP,A, A,(2) (SKIP,A,A));        
         
         
 CALL DEBUG;        
         
 $END ERR_DL1;        
 /*-------------------------------------------------------------------*/        
                        /* ERREUR DE DATA BASE - 'ERR_DL1' + JWB001  */        
 ON ERROR SNAP        
    BEGIN ;        
          ON ERROR SYSTEM;        
          PUT PAGE EDIT('A20161', ' - VERSION DU : * 18.AUG.10 16.17.16        
 * - ',        
          ' ON ERROR CONDITION',        
          'ONCODE    = ',ONCODE,        
          'ONLOC     = ',ONLOC,        
          'ONSOURCE  = ',ONSOURCE)        
          (SKIP,A,A,        
           SKIP,A,        
           SKIP,A,F(5),        
           SKIP,A,A(10),        
           SKIP,A,A);        
         
           PUT SKIP EDIT('LAST SERV CALL = ',JWB001.LSTCALL,        
                         'LAST DB2  CALL = ',JWB001.LSTSERV)        
              (SKIP,A,A);        
         
         
          CALL DEBUG;        
          SIGNAL ERROR;        
    END;        
 /*-------------------------------------------------------------------*/        
      /* ERREUR PLI - SANS IOPCB, AVEC JWB001      */        
 /*********************************************************************/        
 /* TDMXXX !   DATE   ! DESCRIPTION DE LA MODIF                       */        
 /* ------ ! -------- ! ----------------------------------------------*/        
 /* TDMOHL ! 22042002 ! AJOUT INCLUDE PCBINIVA,FCTINIVA               */        
 /* TDMOHL ! 28042003 ! CHANGE INCLUDE FCTINIVA -> FCTINIVA           */        
 /* TDMOHL ! 15112004 ! AJOUT DECLARATION XEU100                      */        
 /*********************************************************************/        
 ERRORMSG: PROC(ERRORNUMBER,LANGAGECODE,ERRORMESSAGE) REORDER;        
 /***********************************/        
 /* RECHERCHE D'UN MESSAGE D'ERREUR */        
 /***********************************/        
         
 DCL ERRORNUMBER    CHAR(*),        
     LANGAGECODE    PIC '9',        
     ERRORMESSAGE   CHAR(*);        
         
 DCL XEU100 ENTRY OPTIONS(FETCHABLE);        
         
 /*---------------------------------------------------------- PCBINIT */        
 /*------------------------------------------------------ END PCBINIT */        
 /*-------------------------------------------------------- FCTINIVA */        
    DCL  CEETDLI ENTRY OPTIONS (ASM);        
    DCL  PLITDLI ENTRY;        
    DCL  GN    CHAR(4)               VALUE ('GN  ');        
    DCL  GU    CHAR(4)               VALUE ('GU  ');        
    DCL  GHU   CHAR(4)               VALUE ('GHU ');        
    DCL  GNP   CHAR(4)               VALUE ('GNP ');        
    DCL  GHN   CHAR(4)               VALUE ('GHN ');        
    DCL  GHNP  CHAR(4)               VALUE ('GHNP');        
    DCL  GCV   CHAR(4)               VALUE ('GCV ');        
    DCL  ISRT  CHAR(4)               VALUE ('ISRT');        
    DCL  DLET  CHAR(4)               VALUE ('DLET');        
    DCL  REPL  CHAR(4)               VALUE ('REPL');        
    DCL  CHNG  CHAR(4)               VALUE ('CHNG');        
    DCL  LOG   CHAR(4)               VALUE ('LOG ');        
    DCL  STAT  CHAR(4)               VALUE ('STAT');        
    DCL  ROLL  CHAR(4)               VALUE ('ROLL');        
    DCL  ROLB  CHAR(4)               VALUE ('ROLB');        
    DCL  PURG  CHAR(4)               VALUE ('PURG');        
    DCL  CMD   CHAR(4)               VALUE ('CMD ');        
    DCL  GCMD  CHAR(4)               VALUE ('GCMD');        
    DCL  CHKP  CHAR(4)               VALUE ('CHKP');        
    DCL  XRST  CHAR(4)               VALUE ('XRST');        
    DCL  DEQ   CHAR(4)               VALUE ('DEQ ');        
    DCL  ONE   FIXED BIN (31)        VALUE (0001B);        
    DCL  TWO   FIXED BIN (31)        VALUE (0010B);        
    DCL  THREE FIXED BIN (31)        VALUE (0011B);        
    DCL  FOUR  FIXED BIN (31)        VALUE (0100B);        
    DCL  FIVE  FIXED BIN (31)        VALUE (0101B);        
    DCL  SIX   FIXED BIN (31)        VALUE (0110B);        
    DCL  SEVEN FIXED BIN (31)        VALUE (0111B);        
    DCL  EIGHT FIXED BIN (31)        VALUE (1000B);        
    DCL  NINE  FIXED BIN (31)        VALUE (1001B);        
 /*----------------------------------------------------- END FCTINIVA */        
         
 /*******************************************/        
 /* DB DES TABLES                           */        
 /*******************************************/        
 /*-------------------------------------------------------- DBPCBMSK */        
   DCL      DBTABPCB             PTR;        
    DCL  LKEY_TAB FIXED BINARY(31,0);        
         
    DCL  1  TAB           BASED(DBTABPCB) ,        
         
           2  DBDNAME              CHAR(8),        
           2  SEGLEVEL             CHAR(2),        
           2  STATUS               CHAR(2),        
           2  PROCOPT              CHAR(4),        
           2  RESERVED             CHAR(4),        
           2  SEGNAME              CHAR(8),        
           2  KEYLEN               FIXED BIN(31),        
           2  SENSEG               FIXED BIN(31),        
           2  KEYAREA              CHAR(LKEY_TAB REFER(TAB.KEYLEN));        
         
 /*---------------------------------------------------- END DBPCBMSK */        
 DBTABPCB = JWB001.DBTABLE.DBTABPCB;        
         
 /******************/        
 /* SEGMENT TABLE  */        
 /******************/        
 /* NRB - TDMOHL - GENERATION LE 22/05/2007 - 14:28        LGTH=00274 */        
 /*****************************************************/        
 /*  TABLE MAIN :                                     */        
 /*****************************************************/        
         
 DCL  1 TBGI_MAIN ,                         #############################################################        
                                            /*TB!  !DPH01   !PHTABLE  */        
                                            /*TB!  !DRH01   !RHTABLE  */        
                                            /*TB!  !DND01   !NDTAB    */        
                                            /*TB!  !DSM25   !C1TAB    */        
                                            /*TB!  !DDO03   !C1TAB    */        
                                            /*TB!  !DIB15   !C1TAB    */        
                                            /*TB!  !DCR01   !CRTABLE  */        
                                            /*TB!  !DLG01   !TABLE    */        
                                            /*TB!  !DCT01   !CTTABLE  */        
                                            /*TB!  !DC201   !C2TABLE  */        
                                            /*TB!  !DCI02   !CITAB    */        
                                            /*TB!  !DSMC0   !C1TAB    */        
                                            /*TB!  !DAV01   !AVTABLE  */        
                                            /*TB!  !DCD01   !CDTAB    */        
                                            /*TB!  !DCL01   !CLTABLE  */        
                                            /*TB!  !DCP11   !CPTAB    */        
                                            /*TB!  !DCO39   !COTAB    */        
                                            /*TB!  !DC101   !C1TAB    */        
                                            /*TB!  !DC102   !C1TAB    */        
                                            /*TB!  !DC103   !C1TAB    */        
                                            /*TB!  !DC301   !C3TABLE  */        
                                            /*TB!  !DDP01   !DPTAB    */        
                                            /*TB!  !DGA01   !GATABLE  */        
                                            /*TB!  !DGI01   !GITABLE  */        
                                            /*TB!  !DGZ02   !GZTABLE  */        
                                            /*TB!  !DLP03   !LPTABLE  */        
                                            /*TB!  !DNC02   !NCTABLE  */        
                                            /*TB!  !DPS01   !PSTABLE  */        
                                            /*TB!  !DP101   !P1TABLE  */        
                                            /*TB!  !DRD01   !RDTABLE  */        
                                            /*TB!  !DSP01   !SPTABLE  */        
                                            /*TB!  !DSW02   !SWTAB    */        
                                            /*TB!  !DXI01   !XITABLE  */        
                                            /*TB!  !DFP24   !FPTABLE  */        
       2 TBTXCOD  CHAR(4),                  ######################################################        
       2 TBTXA01  CHAR(20),                 #####################################################        
       2 TBTXL01  CHAR(250);                ####################################################        
         
         
    DCL 1 SSA_C1TAB,        
         2 FIL1         CHAR (8)       INIT ('C1TAB  '),        
         2 FIL2         CHAR (1)       INIT ('*'),        
         2 CC           CHAR (3)       INIT ('---'),        
         2 PAR          CHAR (1)       INIT ('('),        
         2 FIL3         CHAR (8)       INIT ('KC1TAB  '),        
         2 OPER         CHAR (2)       INIT ('= '),        
         2 VALUE        CHAR (24),        
         2 FIL4         CHAR (1)       INIT (')');        
         
 /* NRB - TDMVAN - Generation le 11/04/2000 - 09:20        Lgth=00274 */        
 /******************************************        
 *  SEGMENT TABLE                          *        
 *  MESSAGES D'ERREUR                      *        
 ******************************************/        
         
 DCL  1 TBGI_T004 ,                    #############################################################        
 /*K*/ 2 TBTXCOD  CHAR(4),             /*CD!  !CODE TABLE             */        
 /*K*/ 2 TBTXA01  CHAR(20),            /*CD!  !ARGUMENT DE LA TABLE   */        
       2 LTMEERR(3)  CHAR(66),         ##################################################        
       2 $FILLER$ CHAR(052);           ####################################################        
 /* NRB - TDMOHL - GENERATION LE 17/10/2006 - 09:33        LGTH=00274 */        
 /*-------------------------------------------------------------------*/        
 /*-- DICTIONNAIRE DES MESSAGES D'ERREUR                              */        
 /*-------------------------------------------------------------------*/        
 DCL  1 TBGI_W004 ,                  #############################################################        
                                     /*TB!  !DSM25   !C1TAB           */        
                                     /*TB!  !DCR01   !CRTABLE         */        
                                     /*TB!  !DPH01   !PHTABLE         */        
                                     /*TB!  !DDO03   !C1TAB           */        
                                     /*TB!  !DLG01   !TABLE           */        
                                     /*TB!  !DND01   !NDTAB           */        
                                     /*TB!  !DRH01   !RHTABLE         */        
                                     /*TB!  !DC201   !C2TABLE         */        
                                     /*TB!  !AEDBTAB1!TABLE           */        
                                     /*TB!  !DGZ02   !GZTABLE         */        
                                     /*TB!  !DC301   !C3TABLE         */        
                                     /*--!  !L'06 ERRORNUMBER         */        
 /*K*/ 2 TBTXCOD  CHAR(4),           /*CD!  !CODE TABLE               */        
 /*K*/ 2 TBTXA01  CHAR(20),          /*CD!  !CODE MSG = KKPPPNNNIL    */        
                                     /*--!  !KK  = PROJET             */        
                                     /*--!  !PPP = NO PROGRAMME       */        
                                     /*--!  !NNN = NO MESSAGE         */        
                                     /*--!  !I   = NO SCENARIO        */        
                                     /*--!  !L   = LANGUE (F/N/A/E)   */        
       2 LTMEERR  CHAR(79),          #####################################################        
       2 FILLER  CHAR(170),          #####################################################        
       2 CDEGARG  CHAR(1);           ######################################################        
         
 /*******************************************/        
 /* AUTRES DECLARATIONS                     */        
 /*******************************************/        
 DCL CLAUSE        CHAR(7);        
 DCL METAPCB_W     PTR;        
 DCL CDDFSEG_W     CHAR (8);        
 DCL CDTABLE_W     CHAR (4);        
 DCL CDLGTRN_W     PIC '9';        
 DCL (I,J,L,M,K)   FIXED BIN(31);        
         
 /* SAUVER L'ENVIRONNEMENT */        
         
 METAPCB_W = IEU001.METAPCB;        
 CDDFSEG_W = IEU001.CDDFSEG;        
 CDLGTRN_W = LANGAGECODE;        
         
 IEU001.METAPCB = JWB001.DBTABLE.METAPCB;        
 SSA_C1TAB.FIL1 = JWB001.DBTABLE.LTSGTAB;        
 SSA_C1TAB.FIL3 = 'K' !! SUBSTR(JWB001.DBTABLE.LTSGTAB,1,7);        
 IEU001.CDDFSEG = JWB001.DBTABLE.CDDFTAB;        
         
 ERRORMESSAGE = '';        
 IF ERRORNUMBER = '' THEN        
      ERRORNUMBER = 'UNSPECI';        
         
 DO WHILE (ERRORMESSAGE = '');        
 CDTABLE_W = SUBSTR(JWB001.DBTABLE.CDDFTAB,4,4);        
 IF CDTABLE_W = 'W004' THEN        
      DO;        
      SSA_C1TAB.VALUE = 'W004' !! SUBSTR(ERRORNUMBER,1,9)        
                               !! TRANSLATE(CDLGTRN_W,'FNAE','1234');        
      CALL XEU100(IEU001,FOUR,GU,TAB,TBGI_W004,SSA_C1TAB);        
      END;        
 ELSE DO;        
      SSA_C1TAB.VALUE = CDTABLE_W !! ERRORNUMBER;        
      CALL XEU100(IEU001,FOUR,GU,TAB,TBGI_T004,SSA_C1TAB);        
      END;        
         
 SELECT (IEU001.CDRTPGM);        
   WHEN('  ')        
     IF CDTABLE_W = 'W004' THEN        
          DO;        
          ERRORMESSAGE = TBGI_W004.LTMEERR;        
          IF ERRORMESSAGE = '' THEN        
               ERRORMESSAGE = ERRORNUMBER;        
          END;        
     ELSE DO;        
          IF CDLGTRN_W < 1 ! CDLGTRN_W > 3 THEN        
               ERRORMESSAGE = TBGI_T004.LTMEERR(1);        
          ELSE IF TBGI_T004.LTMEERR(CDLGTRN_W) = '' THEN        
                    ERRORMESSAGE = TBGI_T004.LTMEERR(1);        
               ELSE ERRORMESSAGE = TBGI_T004.LTMEERR(CDLGTRN_W);        
          IF ERRORMESSAGE = '' THEN        
               ERRORMESSAGE = ERRORNUMBER;        
          END;        
   WHEN ('DBAPGE')        
             DO;        
             IF CDTABLE_W = 'W004' THEN        
                  DO;        
                  IF CDLGTRN_W = 1 THEN        
                       ERRORMESSAGE = ERRORNUMBER;        
                  ELSE CDLGTRN_W = 1;        
                  END;        
             ELSE ERRORMESSAGE = ERRORNUMBER;        
             IEU001.CDRTPGM = ' ';        
             END;        
   OTHERWISE DO;        
             CALL ERR_DL1;        
             RETURN;        
             END;        
   END;        
 END;        
         
 /* RETABLIR L'ENVIRONNEMMENT */        
         
 IEU001.METAPCB = METAPCB_W;        
 IEU001.CDDFSEG = CDDFSEG_W;        
         
 L=LENGTH(ERRORMESSAGE);        
 M=L;        
 K=INDEX(ERRORMESSAGE,'#');        
 IF K^=0 & SUBSTR(ERRORMESSAGE,K+7)=''  THEN        
      DO;        
      CLAUSE=SUBSTR(ERRORMESSAGE,K,7);        
      J=INDEX(CLAUSE,' ');        
      IF J=0 & VERIFY(SUBSTR(ERRORMESSAGE,K+8,L-(K+8)),' ')=0 THEN        
           DO;        
           SPA.TBFCACT(2)='1'B;        
           SPA.LTOPCOM=SUBSTR(CLAUSE,2,2)!!'#' !!SUBSTR(CLAUSE,4);        
           SUBSTR(ERRORMESSAGE,K)='';        
           DO J=L TO 1 BY -1        
              WHILE(SUBSTR(ERRORMESSAGE,J,1)=' ');        
           END;        
           IF JWB001.CDEVCLI = '3' THEN        
                SUBSTR(ERRORMESSAGE,J+1)=' (F2:...)'!!HEX3F;        
           ELSE SUBSTR(ERRORMESSAGE,J+1)=' (F2:...)';        
           END;        
      END;        
 ELSE IF JWB001.CDEVCLI = '3' THEN        
           DO;        
           DO I=L BY -1 TO 1 WHILE(SUBSTR(ERRORMESSAGE,I,1) = ' ');        
              M=M-1;                                                            
           END;                                                                 
           SELECT(M);                                                           
             WHEN(0)ERRORMESSAGE=HEX403F;                                       
             WHEN(L);                                                           
             OTHER SUBSTR(ERRORMESSAGE,M+1)=HEX3F;                              
           END;                                                                 
           END;        
 $END ERRORMSG;        
                        /* RECHERCHE MESSAGE D'ERREUR DANS DB TABLES */        
         
 /*-----------------------------------------------*/        
         
 /*******************************        
 *     RACINE DU SCENARIO       *        
 *******************************/        
         
 IF SPA.CDPGTRN ='5' THEN        
  DO;        
   MINUS = MINUS500;        
  END;        
 ELSE        
  DO;        
   MINUS = MINUS274;        
  END;        
         
 IF JWB001.CDTRACE >= 3 THEN        
   DO;        
     PUT SKIP LIST('WA2016 : SCENARIO_1 == R A C I N E ');        
     PUT SKIP LIST('================================== ');        
     PUT SKIP EDIT('SPA.CDLGTRN:',SPA.CDLGTRN)(A);        
     PUT SKIP EDIT('SPA.CDOPTRN:',SPA.CDOPTRN)(A);        
     PUT SKIP EDIT('SPA.MSG_SPA:',SPA.MSG_SPA)(A);        
     PUT SKIP EDIT('SPA.CDEVTRN:',SPA.CDEVTRN)(A);        
     PUT SKIP EDIT('SCENARI.NOPGACT:',SCENARI.NOPGACT)(A);        
     PUT SKIP EDIT('MID1.CDOPTRN:',MID1.CDOPTRN)(A);        
     PUT SKIP EDIT('MID1.CDLGTRN:',MID1.CDLGTRN)(A);        
     PUT SKIP LIST('SPA.INFOS_USER.CDLGUSR:',        
                    SPA.INFOS_USER.CDLGUSR);        
     PUT SKIP LIST('SPA.INFOS_USER.CDSTAT :',        
                    SPA.INFOS_USER.CDSTAT);        
     PUT SKIP LIST('SPA.INFOS_USER.LTSITE :',        
                    SPA.INFOS_USER.LTSITE);        
     PUT SKIP LIST('SPA.INFOS_USER.CDAFGRP:',        
                    SPA.INFOS_USER.CDAFGRP);        
     PUT SKIP LIST('SPA.INFOS_USER.CDMSETH:',        
                    SPA.INFOS_USER.CDMSETH);        
     PUT SKIP LIST('SPA.INFOS_USER.CDTYSOU:',        
                    SPA.INFOS_USER.CDTYSOU);        
     PUT SKIP LIST('SPAS1096.CDDEST =',SPAS1096.CDDEST);        
     PUT SKIP LIST('SPAS1096.NODEVI =',SPAS1096.NODEVI);        
     PUT SKIP LIST('SPAS1096.LTEMAIL=',SPAS1096.LTEMAIL);        
     PUT SKIP LIST('SPAVAR.NOIDDEV=',SPAVAR.NOIDDEV);        
     PUT SKIP LIST('SPA.NOIDAFF:',SPA.NOIDAFF);        
     PUT SKIP LIST('SPA.NOPPAFF:',SPA.NOPPAFF);        
     PUT SKIP LIST('SPA.CDOPTRN =',SPA.CDOPTRN);        
         
     PUT SKIP LIST('SPA.LTEMAIL =',SPA.LTEMAIL);        
     PUT SKIP LIST('INFOS_USER.CDSTAT  =',INFOS_USER.CDSTAT);        
     PUT SKIP LIST('INFOS_USER.CDMSETH =',INFOS_USER.CDMSETH);        
   END;        
         
 IF JWB001.CDTRACE=1        
 THEN DO;        
   PUT SKIP EDIT('--------------------------')(A);        
   PUT SKIP EDIT('!RACINE/CDRTPGM:'!!JWB001.CDRTPGM,'!')(A);        
   PUT SKIP EDIT('!RACINE/BOACCES:',SCENARI.TBSCENA(2),'        !')(A);        
         
   PUT SKIP EDIT('!RACINE/BOVALID:',SCENARI.TBSCENA(4),'        !')(A);        
         
   PUT SKIP EDIT('!RACINE/BOUPDTE:',SCENARI.TBSCENA(7),'        !')(A);        
         
   PUT SKIP EDIT('!RACINE/BOSUITE:',SCENARI.TBSCENA(8),'        !')(A);        
         
   PUT SKIP EDIT('!RACINE/BOSWTCH:',SCENARI.TBSCENA(9),'        !')(A);        
         
   PUT SKIP EDIT('!RACINE/BOSCROL:',SCENARI.TBSCENA(5),'        !')(A);        
         
   PUT SKIP EDIT('!RACINE/BOERRAC:',SCENARI.TBSCENA(3),'        !')(A);        
         
   PUT SKIP EDIT('!RACINE/BOREPOS:',SCENARI.TBSCENA(6),'        !')(A);        
         
   PUT SKIP EDIT('--------------------------')(A);        
 END;        
         
 SELECT(JWB001.LTNMMTH);        
    WHEN('SCENA_INIT')   CALL F1;        
    WHEN('CTX_GET')      CALL F2;        
    WHEN('CTX_SAVE')     CALL F3;        
    WHEN('CTRL_ACCES')   CALL F4;        
    WHEN('PAGE_DFT')     CALL F5;        
    WHEN('PAGE_INIT')    CALL F6;        
    WHEN('PAGE_SCROLL')  CALL F7;        
    WHEN('PAGE_XML')     CALL F8;        
    WHEN('PAGE9_XML')    CALL F9;        
    WHEN('VALID_SYN')    CALL FA;        
    WHEN('VALID_CTX')    CALL FB;        
    WHEN('UPDATE_DB')    CALL FC;        
    WHEN('SWITCH_SC')    CALL FD;        
    WHEN('TEST_SCROLL')  CALL FE;        
    WHEN('CTX_CLEAR')    CALL FF;        
    WHEN('TEST_PF1 ')    CALL FG;        
    WHEN('TEST_BOUTON')  CALL FH;        
    OTHER        
       DO;        
       JWB001.CDRTPGM = 'A20161' !! '01';        
       PUT SKIP LIST( '!!! NOM DE METHODE NON REPERTORIE !!!');        
       PUT SKIP LIST('CONTENU DE L''INTERFACE GA20161:');        
       PUT SKIP EDIT('METHODE =',JWB001.LTNMMTH) (A,A);        
       END;        
 END;        
         
 IF JWB001.CDTRACE=1        
 THEN DO;        
   PUT SKIP EDIT('------------------------------')(A);        
   PUT SKIP EDIT('!END RACINE/CDRTPGM:'!!JWB001.CDRTPGM,'!')(A);        
   PUT SKIP EDIT('!END RACINE/BOACCES:',SCENARI.TBSCENA(2),'        !')(        
 A);        
   PUT SKIP EDIT('!END RACINE/BOVALID:',SCENARI.TBSCENA(4),'        !')(        
 A);        
   PUT SKIP EDIT('!END RACINE/BOUPDTE:',SCENARI.TBSCENA(7),'        !')(        
 A);        
   PUT SKIP EDIT('!END RACINE/BOSUITE:',SCENARI.TBSCENA(8),'        !')(        
 A);        
   PUT SKIP EDIT('!END RACINE/BOSWTCH:',SCENARI.TBSCENA(9),'        !')(        
 A);        
   PUT SKIP EDIT('!END RACINE/BOSCROL:',SCENARI.TBSCENA(5),'        !')(        
 A);        
   PUT SKIP EDIT('!END RACINE/BOERRAC:',SCENARI.TBSCENA(3),'        !')(        
 A);        
   PUT SKIP EDIT('!END RACINE/BOREPOS:',SCENARI.TBSCENA(6),'        !')(        
 A);        
   PUT SKIP EDIT('------------------------------')(A);        
 END;        
 /*-----------------------------------------------*/        
         
 F1: PROC REORDER ;        
     TRACE = 'GA20161 ===> ' !! 'F1';        
         
     CALL PT;        
 /**********************************************        
 * VERIFIER L'EXISTENCE DU SCENARIO            *        
 * CHARGER LA ZONE DE COMMUNICATION 'WKSCENA'  *        
 **********************************************/        
         
 SCENARI.NUMIDLL(LEVEL) = STG(MID1);    ########################################        
         
 IF JWB001.CDTRACE >= 3 THEN        
   DO;        
     PUT SKIP LIST('WA2016 : SCENARIO_1 : F1');        
     PUT SKIP LIST('========================');        
     PUT SKIP LIST('SPA.MSG_SPA=',SPA.MSG_SPA);        
     PUT SKIP LIST('SPA.CDEVTRN=',SPA.CDEVTRN);        
     PUT SKIP LIST('SPA.CDOPTRN=',SPA.CDOPTRN);        
     PUT SKIP LIST('SPA.CDLGTRN=',SPA.CDLGTRN);        
     PUT SKIP LIST('MID1.CDLGTRN=',MID1.CDLGTRN);        
     PUT SKIP LIST('SPA.LTOPCOM=',SPA.LTOPCOM);        
     PUT SKIP LIST('SPA.CDUTTRN=',SPA.CDUTTRN);        
     PUT SKIP LIST('SPAVAR.R_ETAPE=',SPAVAR.R_ETAPE);        
   END;        
         
 CALL $DATES_TIMES;        
 CDRTPGM_W = '';        
 ERREUR = OFF;        
         
 SCENARI.TBSCENA(2) = ON;        
         
 SCENARI.TBSCENA(4) = ON;        
         
 SCENARI.TBSCENA(7) = OFF;        
         
 SCENARI.TBSCENA(8) = OFF;        
         
 SCENARI.TBSCENA(9) = OFF;        
         
 SCENARI.TBSCENA(5) = OFF;        
         
 SCENARI.TBSCENA(3) = OFF;        
         
 SCENARI.TBSCENA(6) = OFF;        
         
 SCENARI.TBSCENA(1) = ON;        
         
 SCENARI.TBSCENA(11) = OFF;        
         
 SCENARI.TBSCENA(12) = OFF;        
         
         
 SELECT(MID1.CDLGTRN);        
   WHEN('1','F') SPA.CDLGTRN = 1;        
   WHEN('2','N') SPA.CDLGTRN = 2;        
   OTHER;        
 END;        
         
 /* Repartir direct en guidance eurotax ? */        
 /* -----------------------------------   */        
 IF SPAVAR.R_ETAPE = 'A20162'   ##################################        
  ! SPAVAR.R_ETAPE = 'A20163'   ##################################        
  ! SPAVAR.R_ETAPE = 'A20164' THEN ##############################        
   DO;        
     SCENARI.TBSCENA(12) = ON;/* Va direct en FH puis FA puis guidance *        
 /        
   END;        
 ELSE        
   DO;        
     /* initialiser les donn{es de la SPA selon CDOPTRN ...*/        
     CALL INIT_OPERATION;        
         
     IF JWB001.CDTRACE >= 3 THEN        
       DO;        
         PUT SKIP LIST('SPA.CDOPTRN=',SPA.CDOPTRN);        
         PUT SKIP LIST('SPA.CDLGTRN=',SPA.CDLGTRN);        
         PUT SKIP LIST('ERREUR=',ERREUR);        
         PUT SKIP LIST('JBW001.CDRTPGM=',JWB001.CDRTPGM);        
         PUT SKIP LIST('SPAVAR.CDTYPOP=',SPAVAR.CDTYPOP);        
         PUT SKIP LIST('SPA.NOIDAFF=',SPA.NOIDAFF);        
         PUT SKIP LIST('SPA.INFOS_USER.CDMSETH:',        
                        SPA.INFOS_USER.CDMSETH);        
         PUT SKIP LIST('SPA.INFOS_USER.CDAFGRP:',        
                        SPA.INFOS_USER.CDAFGRP);        
         PUT SKIP LIST('SPAVAR.R_ETAPE=',SPAVAR.R_ETAPE);        
         PUT SKIP LIST('SPAVAR.NEWDEVI=',SPAVAR.NEWDEVI);        
         PUT SKIP LIST('SPAVAR.NOIDDEV=',SPAVAR.NOIDDEV);        
         PUT SKIP LIST('SPAVAR.IDENTI.NOIDAFF=',        
                        SPAVAR.IDENTI.NOIDAFF);        
         PUT SKIP LIST('SPAVAR.IDENTI.LTNMAFF=',        
                        SPAVAR.IDENTI.LTNMAFF);        
         PUT SKIP LIST('SPAVAR.IDENTI.LTPRAFF=',        
                        SPAVAR.IDENTI.LTPRAFF);        
         PUT SKIP LIST('SPAVAR.IDENTI.CDSEXAF=',        
                        SPAVAR.IDENTI.CDSEXAF);        
         PUT SKIP LIST('SPAVAR.IDENTI.CDLGEAF=',        
                        SPAVAR.IDENTI.CDLGEAF);        
         PUT SKIP LIST('SPAVAR.IDENTI.DANAIAF=',        
                        SPAVAR.IDENTI.DANAIAF);        
         PUT SKIP LIST('SPAVAR.IDENTI.LTRUEAF=',        
                        SPAVAR.IDENTI.LTRUEAF);        
         PUT SKIP LIST('SPAVAR.IDENTI.NOHA1AF=',        
                        SPAVAR.IDENTI.NOHA1AF);        
         PUT SKIP LIST('SPAVAR.IDENTI.NOHA2AF=',        
                        SPAVAR.IDENTI.NOHA2AF);        
         PUT SKIP LIST('SPAVAR.IDENTI.CDCPOAF=',        
                        SPAVAR.IDENTI.CDCPOAF);        
         PUT SKIP LIST('SPAVAR.IDENTI.LTLOCAF=',        
                        SPAVAR.IDENTI.LTLOCAF);        
         PUT SKIP LIST('SPAVAR.IDENTI.EMAILAF=',SPAVAR.IDENTI.EMAILAF);        
         PUT SKIP LIST('SPAVAR.IDENTI.CDTYPRO=',        
                        SPAVAR.IDENTI.CDTYPRO);        
         PUT SKIP LIST('SPAVAR.IDENTI.CDGEPRO=',        
                        SPAVAR.IDENTI.CDGEPRO);        
       END;        
     /* Modif cki le 04.12.2006 ...*/        
     /* Dans un e-mail, il y a des internautes qui modifient le lien.*/        
     /* => attention de ne pas laisser apparatre les infos de qqun  */        
     /* d'autre ...==> probl}me applicatif ...        
         
     /* Modif cki le 16.02.2009 ...        
        Bloquer un utilisateur identifie avec un code postal non        
        numerique (ex: un ancien belge a change d'adresse et habite        
        aux USA avec code postal VA2218        
     */        
         
     IF ERREUR THEN RETURN;        
         
     SELECT(SPA.CDOPTRN);        
       WHEN('A2SOU') DO;        
           SPAVAR.CDTYPOP  = '';        
           SCENARI.NOPGACT = '6';###########################        
           JWB001.CDRTPGM  = 'DUMMY';        
         END;        
       WHEN('A2CDV') DO; ######################################################        
           SPAVAR.CDTYPOP  = '';        
           SCENARI.NOPGACT = '6';        
           JWB001.CDRTPGM  = 'DUMMY';        
         END;        
       WHEN('A2RDV') DO; ######################################################        
           SPAVAR.CDTYPOP  = '';        
           SCENARI.NOPGACT = '6';        
           JWB001.CDRTPGM  = 'DUMMY';        
         END;        
       WHEN('A2MSE') DO; ######################################################        
           SPAVAR.CDTYPOP  = '';        
           SCENARI.NOPGACT = '6';        
           JWB001.CDRTPGM  = 'DUMMY';        
         END;        
       WHEN('A2EDV') DO; ######################################################        
           SPAVAR.CDTYPOP  = '';        
           SCENARI.NOPGACT = '6';        
           JWB001.CDRTPGM  = 'DUMMY';        
         END;        
       OTHER;        
     END;        
   END;        
 /* Sortie avec DUMMY => passe directement e l'ecran NOPGACT        
    et pas par FD ... */        
         
 IF JWB001.CDTRACE >= 3 THEN        
   DO;        
     PUT SKIP LIST('SPA.CDLGTRN=',SPA.CDLGTRN);        
     PUT SKIP LIST('SPAVAR.CDTYPOP=',SPAVAR.CDTYPOP);        
     PUT SKIP LIST('ERREUR=',ERREUR);        
     PUT SKIP LIST('JBW001.CDRTPGM=',JWB001.CDRTPGM);        
     PUT SKIP LIST('SCENARI.NOPGACT=',SCENARI.NOPGACT);        
     PUT SKIP LIST('SPAVAR.CDTYPOP=',SPAVAR.CDTYPOP);        
     PUT SKIP LIST('SPA.CDUTTRN=',SPA.CDUTTRN);        
     PUT SKIP LIST('SPAVAR.R_ETAPE=',SPAVAR.R_ETAPE);        
   END;        
         
     TRACE = 'GA20161 ===> ' !! 'END F1';        
         
     CALL PT;        
 $END F1;        
 /*-----------------------------------------------*/        
 F2: PROC REORDER ;        
     TRACE = 'GA20161 ===> ' !! 'F2';        
         
     CALL PT;        
 /***************************************************/        
 /* RECHARGER LA RUBRIQUE COLLECTEE PAR LA GUIDANCE */        
 /***************************************************/        
 IF JWB001.CDTRACE >= 3 THEN        
   DO;        
     PUT SKIP LIST('RETOUR GUIDANCE EUROTAX');        
     PUT SKIP LIST('=======================');        
     PUT SKIP LIST('SPA.MSG_SPA=',SPA.MSG_SPA);        
     PUT SKIP LIST('SPA.CDOPTRN=',SPA.CDOPTRN);        
     PUT SKIP LIST('JWB001.CDRTPGM=',JWB001.CDRTPGM);        
     PUT SKIP LIST('JWB001.RETOUR=',JWB001.RETOUR);        
     PUT SKIP LIST('SCENARI.CDTYSEL=',SCENARI.CDTYSEL);        
     PUT SKIP LIST('SPA.INFOS_USER.CDMSETH:',        
                    SPA.INFOS_USER.CDMSETH);        
     PUT SKIP LIST('SPA.INFOS_USER.CDAFGRP:',        
                    SPA.INFOS_USER.CDAFGRP);        
     PUT SKIP LIST('SPAVAR.R_ETAPE=',SPAVAR.R_ETAPE);        
   END;        
 SELECT (SCENARI.CDTYSEL);        
   WHEN ('1','2','3','4')        
     DO;        
       SAVERETOUR = SPA_IA2083.GA20831J.OUTPUT, BY NAME;        
       IF JWB001.CDTRACE >= 3 THEN        
         DO;        
           PUT SKIP LIST('SAVERETOUR=',SAVERETOUR);        
         END;        
     END;        
   OTHER;        
 END;        
         
     TRACE = 'GA20161 ===> ' !! 'END F2';        
         
     CALL PT;        
 $END F2;        
 /*-----------------------------------------------*/        
 F3: PROC REORDER ;        
     TRACE = 'GA20161 ===> ' !! 'F3';        
         
     CALL PT;        
 /********************************************        
 * INVOQUER LA GUIDANCE                      *        
 ********************************************/        
 DCL LIBMARQ_W          CHAR(40) VAR;        
 SCENARI.TBSCENA(12) = OFF; /* Pour le retour sinon il ne recharge pas l        
 a page */        
         
 /* Sauver les donn{es avant erase SPAVARI .... */        
 ANNCSTR_W = SCENARIO_1.ANNCSTR;        
 MARDEBU_W = SCENARIO_1.MARDEBU;        
 TXTCARB_W = SCENARIO_1.TXTCARB;        
 NOIDMAR_W = SCENARIO_1.NOIDMAR;        
 NOIDMOD_W = SCENARIO_1.NOIDMOD;        
         
 LIBMARQ_W = SUBSTR(MARDEBU_W,1,39);        
 LIBMARQ_W = TRANSLATE(LIBMARQ_W,MAJUS,MINUS);        
 IF JWB001.CDTRACE >= 3 THEN        
   DO;        
     PUT SKIP LIST('AVANT DEPART GUIDANCE EUROTAX et ERASE SPA');        
     PUT SKIP LIST('==========================================');        
     PUT SKIP LIST('SPA.MSG_SPA=',SPA.MSG_SPA);        
     PUT SKIP LIST('JWB001.CDRTPGM=',JWB001.CDRTPGM);        
     PUT SKIP LIST('JWB001.RETOUR=',JWB001.RETOUR);        
     PUT SKIP LIST('SCENARI.CDTYSEL=',SCENARI.CDTYSEL);        
     PUT SKIP LIST('SPA.INFOS_USER.CDMSETH:',        
                    SPA.INFOS_USER.CDMSETH);        
     PUT SKIP LIST('SPA.INFOS_USER.CDAFGRP:',        
                    SPA.INFOS_USER.CDAFGRP);        
     PUT SKIP LIST('SPAVAR.R_ETAPE=',SPAVAR.R_ETAPE);        
   END;        
         
 /* Erase des donn{es de Spavari... */        
 SPA_IA2083.GA20831J = '';        
 SPA_IA2083.GA20831J.INPUT.CDTYPVH = 'VP';        
 SPA_IA2083.GA20831J.INPUT.ANNECTR = ANNCSTR_W;        
 SPA_IA2083.GA20831J.INPUT.LIBMARQ = TRIM(LIBMARQ_W) !! '?';        
 SPA_IA2083.GA20831J.INPUT.TXTCARB = TXTCARB_W;        
         
 SELECT (SCENARI.CDTYSEL);        
   WHEN ('1','2');        
   WHEN ('3') ########################################        
    DO;        
      SPA_IA2083.GA20831J.INPUT.NOIDMAR = NOIDMAR_W;        
    END;        
   WHEN ('4') #######################################        
    DO;        
      SPA_IA2083.GA20831J.INPUT.NOIDMAR = NOIDMAR_W;        
      SPA_IA2083.GA20831J.INPUT.NOIDMOD = NOIDMOD_W;        
    END;        
   OTHER;        
 END;        
         
 IF SPA.CDOPTRN = 'A2M20'        
   THEN SPA_IA2083.GA20831J.INPUT.CDOPTRN = SPA.CDOPTRN;        
         
 IF JWB001.CDTRACE >= 3 THEN        
   DO;        
     PUT SKIP LIST('SPA.CDOPTRN avant appel guidance eurotax=',        
                    SPA.CDOPTRN);        
     PUT SKIP DATA(SPA_IA2083.GA20831J.INPUT);        
   END;        
         
 SPA.CDOPTRN = 'A2GEU';        
 SPA.TRANSAC = 'WA2083';        
 SPA.TRANS3  = 'WA2016';        
         
     TRACE = 'GA20161 ===> ' !! 'END F3';        
         
     CALL PT;        
 $END F3;        
 /*-----------------------------------------------*/        
 F4: PROC REORDER ;        
     TRACE = 'GA20161 ===> ' !! 'F4';        
         
     CALL PT;        
 /********************************************        
 * CONTROLE D'ACCES AUX RESSOURCES           *        
 ********************************************/        
 SCENARI.TBSCENA(2) = OFF;        
         
         
     TRACE = 'GA20161 ===> ' !! 'END F4';        
         
     CALL PT;        
 $END F4;        
 /*-----------------------------------------------*/        
 F5: PROC REORDER ;        
     TRACE = 'GA20161 ===> ' !! 'F5';        
         
     CALL PT;        
 /********************************************        
 * PAGE1 : VALEURS PAR DEFAUT                *        
 ********************************************/        
 IF JWB001.RETOUR !        
    (JWB001.CDEVCLI ^='3' &  SPA.MSG_SPA = '1')  THEN        
      DO;        
      /*        
      PUT SKIP LIST('MID1.LTMARQU=',MID1.LTMARQU);        
      PUT SKIP LIST('MID1.ANNCSTR=',MID1.ANNCSTR);        
      PUT SKIP LIST('MID1.TXTCARB=',MID1.TXTCARB);        
      */        
      CALL F6;        
      /*        
      PUT SKIP LIST('MID1.LTMARQU=',MID1.LTMARQU);        
      PUT SKIP LIST('MID1.ANNCSTR=',MID1.ANNCSTR);        
      PUT SKIP LIST('MID1.TXTCARB=',MID1.TXTCARB);        
      */        
         
   /* On a des NNNNNNNNNNNNNNNNNNNNNNN dans MID1.LTMARQU?????        
      PAGE1 = MID1, BY NAME; */        
      SCENARI.NBPAGE1 = 1;        
      END;        
 ELSE DO;        
      SUBSTR(PAGE1TXT,09,STG(PAGE1) - 8) = ' ';        
      END;        
         
 PAGE1.LL        = STG(PAGE1);        
 PAGE1.LTSCTRN_A = LOW(2) !! SPA.CDATTRN !! LOW(4);        
         
     TRACE = 'GA20161 ===> ' !! 'END F5';        
         
     CALL PT;        
 $END F5;        
 /*-----------------------------------------------*/        
         
 F6: PROC REORDER ;        
     TRACE = 'GA20161 ===> ' !! 'F6';        
         
     CALL PT;        
 /********************************************        
 * PAGE1 : ACCES DB ET CHARGEMENT PAGE1      *        
 ********************************************/        
 CDRTPGM_W = '';        
 ERREUR = OFF;        
         
 /* Afficher table des ann{es de construction */        
 CALL F6_1;        
         
 IF SPA.LTOPCOM ^= '' THEN        
   DO;        
     CALL ERRORMSG(SUBSTR(SPA.LTOPCOM,1,9),        
                   SPA.CDLGTRN, PAGE1.LTMETRN);        
     SPA.LTOPCOM = '';        
   /*PUT SKIP LIST(PAGE1.LTMETRN);*/        
   END;        
 /*        
 PUT SKIP LIST('SPA.TYPUSER',SPA.TYPUSER);        
 */        
 IF JWB001.CDEVCLI = 'E' & SPA.TYPUSER = 'RA' & ^ERREUR        
    THEN DO;        
      CALL F6_2;        
    END;        
         
 IF ERREUR        
   THEN DO;        
          CALL ERRORMSG(CDRTPGM_W,SPA.CDLGTRN,PAGE1.LTMETRN);        
        END;        
         
     TRACE = 'GA20161 ===> ' !! 'END F6';        
         
     CALL PT;        
 $END F6;        
         
 /*-----------------------------------------------*/        
 F6_1: PROC REORDER ;        
     TRACE = 'GA20161 ===> ' !! 'F6_1';        
         
     CALL PT;        
         
 /**************************************************************        
 * PAGE1 : Charger les 15 ann{es ant{rieures a la date du jour *        
 **************************************************************/        
 DCL  AN_W          PIC'(4)9';        
         
 PAGE1.LTMARQU = SCENARIO_1.LTMARQU;        
 PAGE1.ANNCSTR = SCENARIO_1.ANNCSTR;        
         
 AN_W = #DATE_AAAA;        
 DO I = 1 TO 15;        
   PAGE1.TAB_ANN(I).ANNCSTR = AN_W;        
   AN_W = AN_W - 1;        
 END;        
 PAGE1.TXTCARB = SCENARIO_1.TXTCARB;        
         
 /* Charger les Types de carburants */        
 /*-------------------------------- */        
 PAGE1.TB_CARB(*).TXTCARB = CDCARBU_W(*);        
 PAGE1.TB_CARB(*).LIBCARB = LIBCARB_W(*,SPA.CDLGTRN);        
         
         
 /* Cki le 08.01.08 : site moins20% !!!! */        
 IF SPA.CDOPTRN = 'A2M20'        
   THEN PAGE1.CDEXTOP = 'M20';        
         
     TRACE = 'GA20161 ===> ' !! 'END F6_1';        
         
     CALL PT;        
 $END F6_1;        
         
 /*-----------------------------------------------*/        
 F6_2: PROC REORDER ;        
     TRACE = 'GA20161 ===> ' !! 'F6_2';        
         
     CALL PT;        
         
 /**********************************************************        
 * PAGE2 : Mettre le nom du garage conventionn{ par d{faut *        
 ***********************************************************/        
         
 CALL LEC_TAB('REPD',SUBSTR(SPA.NOIDUSR,4,4),ADDR(TBSM_PER1));        
         
 IF JWB001.CDRTPGM ^= '' !        
         
    TBSM_PER1.CDEGARG = 'N' THEN        
 DO;        
    ERREUR = ON;        
    RETURN;        
 END;        
 IF TBSM_PER1.CDTYPE ^= 'TTM'        
    THEN DO;        
         CALL LEC_TAB('RPTY',TBSM_PER1.CDTYPE,ADDR(TBSM_RPTY));        
         IF JWB001.CDRTPGM = ''        
            THEN DO;        
                 /* Cki le 23.12.09 ne peut pas fonctionner !!!!! */        
                 INTER_C3 = TBSM_RPTY.CDEURTX;        
                 INTER_P7 = INTER_C3;        
                 INTER_F7 = INTER_P7;        
                 CALL LECT_VP_MAK(INTER_F7);        
                 PAGE1.LTMARQU = A2EUT11.LTMARQU;        
            END;        
    END;        
 ELSE IF TBSM_PER1.CDTYPE_R(1) ^= ''        
      THEN DO;        
           CALL LEC_TAB('RPTY',TBSM_PER1.CDTYPE_R(1),ADDR(TBSM_RPTY));        
           IF JWB001.CDRTPGM = ''        
              THEN DO;        
                 /* Cki le 23.12.09 ne peut pas fonctionner !!!!! */        
                 INTER_C3 = TBSM_RPTY.CDEURTX;        
                 INTER_P7 = INTER_C3;        
                 INTER_F7 = INTER_P7;        
                 CALL LECT_VP_MAK(INTER_F7);        
                   PAGE1.LTMARQU = A2EUT11.LTMARQU;        
              END;        
      END;        
 /*        
    PUT SKIP DATA(TBSM_PER1);        
    PUT SKIP DATA(tbsm_rpty.CDEURTX);        
 PAGE1.LTMARQU = SCENARIO_1.LTMARQU;        
 PAGE1.ANNCSTR = SCENARIO_1.ANNCSTR;        
 */        
         
     TRACE = 'GA20161 ===> ' !! 'END F6_2';        
         
     CALL PT;        
 $END F6_2;        
         
 /*-----------------------------------------------*/        
         
 F7: PROC REORDER ;        
     TRACE = 'GA20161 ===> ' !! 'F7';        
         
     CALL PT;        
 /********************************************        
 * PAGE1 : SCROLLING                         *        
 ********************************************/        
     TRACE = 'GA20161 ===> ' !! 'END F7';        
         
     CALL PT;        
 $END F7;        
 /*-----------------------------------------------*/        
         
 F8: PROC REORDER ;        
     TRACE = 'GA20161 ===> ' !! 'F8';        
         
     CALL PT;        
 /********************************************        
 * PAGE1 : PRESENTATION XML                  *        
 ********************************************/        
         
     TRACE = 'GA20161 ===> ' !! 'END F8';        
         
     CALL PT;        
 $END F8;        
 /*-----------------------------------------------*/        
         
 F9: PROC REORDER ;        
     TRACE = 'GA20161 ===> ' !! 'F9';        
         
     CALL PT;        
 /********************************************        
 * PAGE9 : PRESENTATION XML                  *        
 ********************************************/        
         
     TRACE = 'GA20161 ===> ' !! 'END F9';        
         
     CALL PT;        
 $END F9;        
 /*-----------------------------------------------*/        
         
 FA: PROC REORDER ;        
     TRACE = 'GA20161 ===> ' !! 'FA';        
         
     CALL PT;        
 /********************************************        
 * VALIDATION SYNTAXIQUE                     *        
 ********************************************/        
 CALL FE;        
 IF SCENARI.TBSCENA(9) THEN RETURN;        
         
 ERREUR = OFF;        
 CDRTPGM_W = '';        
         
         
 IF JWB001.CDTRACE >= 3 THEN        
   DO;        
     PUT SKIP LIST('MID1.CLE = ',MID1.CLE);        
     PUT SKIP LIST('MID1.ANNCSTR = ',MID1.ANNCSTR);        
     PUT SKIP LIST('MID1.LTMARQU = ',MID1.LTMARQU);        
     PUT SKIP LIST('MID1.TXTCARB = ',MID1.TXTCARB);        
     PUT SKIP LIST('JWB001.RETOUR = ',JWB001.RETOUR);        
     PUT SKIP LIST('SPAVAR.R_ETAPE=',SPAVAR.R_ETAPE);        
   END;        
         
 IF SPAVAR.R_ETAPE = 'A20162'        
  ! SPAVAR.R_ETAPE = 'A20163'        
  ! SPAVAR.R_ETAPE = 'A20164' THEN        
    DO;        
      JWB001.CDRTPGM = 'HELP';        
      SCENARI.CDTYSEL = SUBSTR(SPAVAR.R_ETAPE,6,1);        
      SPAVAR.R_ETAPE = '';        
      SCENARI.TBSCENA(12) = OFF;        
         
      RETURN;        
    END;        
         
 IF JWB001.RETOUR THEN        
   DO;        
     CALL FA_2; #######################################        
   END;        
 ELSE        
   DO;        
     /* Controler le MID avant d{part en guidance eurotax */        
     CALL FA_1;        
         
     IF CDRTPGM_W = '' THEN        
       DO;        
         JWB001.CDRTPGM = 'HELP';        
         SCENARI.CDTYSEL = '1';        
      SCENARI.TBSCENA(12) = OFF;        
         
         RETURN;        
       END;        
   END;        
         
 IF ERREUR        
   THEN DO;        
          JWB001.CDRTPGM = CDRTPGM_W;        
          RETURN;        
        END;        
         
     TRACE = 'GA20161 ===> ' !! 'END FA';        
         
     CALL PT;        
 $END FA;        
 /*-----------------------------------------------*/        
 FA_1: PROC REORDER ;        
     TRACE = 'GA20161 ===> ' !! 'FA_1';        
         
     CALL PT;        
 /*********************************************        
 * VALIDATION SYNTAXIQUE: CTRL ANNCSTR EXISTE *        
 *********************************************/        
 SCENARIO_1.MARDEBU = MID1.LTMARQU;        
         
 IF VERIFY(MID1.ANNCSTR,NUM) > 0        
   THEN DO;        
          CDRTPGM_W = 'A20161' !! '004';        
          ERREUR = ON;        
          RETURN;        
        END;        
         
 INTER_C4 = MID1.ANNCSTR;        
 SCENARIO_1.ANNCSTR = INTER_P4;        
 IF INTER_P4 = '0000'        
  ! INTER_P4 = #DATE_AAAA        
   THEN DO;        
          SCENARIO_1.ANNCSTR = #DATE_AAAA;        
        END;        
         
 SCENARIO_1.TXTCARB = MID1.TXTCARB;        
         
     TRACE = 'GA20161 ===> ' !! 'END FA_1';        
         
     CALL PT;        
 $END FA_1;        
 /*-----------------------------------------------*/        
 FA_2: PROC REORDER ;        
     TRACE = 'GA20161 ===> ' !! 'FA_2';        
         
     CALL PT;        
 /*************************************************        
 * VALIDATION SYNTAXIQUE: RETOUR GUIDANCE EUROTAX *        
 *************************************************/        
 IF JWB001.CDTRACE > 2 THEN        
   DO;        
    PUT SKIP LIST('SAVERETOUR=',SAVERETOUR);        
    PUT SKIP DATA(SAVERETOUR);        
    PUT SKIP LIST('JWB001.CDRTPGM=',JWB001.CDRTPGM);        
   END;        
 IF SAVERETOUR.NOIDMAR = 0        
  ! SAVERETOUR.NOIDMOD = 0        
  ! SAVERETOUR.NOIDTYP = 0 THEN        
   DO;        
     IF ( SCENARIO_1.MARDEBU = ''        
      &   SCENARIO_1.TXTCARB = '' )        
      ! ( SAVERETOUR.LTMARQU = '' ) ###########################        
       THEN DO;        
              SPA.LTOPCOM = '';        
              JWB001.CDRTPGM = 'DUMMY';        
            /*  ERREUR = ON; */        
              RETURN;        
            END;        
       ELSE DO;        
              CDRTPGM_W = 'A20161' !! '007';        
              ERREUR = ON;        
              RETURN;        
            END;        
   END;        
 ELSE        
   DO;        
     SCENARIO_1.NOIDMAR = SAVERETOUR.NOIDMAR;        
     SCENARIO_1.NOIDMOD = SAVERETOUR.NOIDMOD;        
     SCENARIO_1.NOIDTYP = SAVERETOUR.NOIDTYP;        
     SCENARIO_1.LTMARQU = SAVERETOUR.LTMARQU;        
     SCENARIO_1.LTMODEL = SAVERETOUR.LTMODEL;        
     SCENARIO_1.LTTYPEV = SUBSTR(SAVERETOUR.LTTYPEV,1,40);        
     SCENARIO_1.NBRTRAN = SAVERETOUR.NBRTRAN;        
     SCENARIO_1.NBTYPKW = SAVERETOUR.NBTYPKW;        
     SCENARIO_1.PRIHTVA = SAVERETOUR.PRIHTVA / 100.00;        
     /* Il faut quand mme relire A2EUT13 pour autres infos */        
     CALL LECT_VP_TYP(SCENARIO_1.NOIDTYP);        
     IF ERREUR THEN        
       DO;        
         CDRTPGM_W = 'A20161' !! '006';        
         RETURN;        
       END;        
     SCENARIO_1.CDTYOP3 = A2EUT13.CDTYOP3;        
     SCENARIO_1.CDTYDM3 = A2EUT13.CDTYDM3;        
     SCENARIO_1.NBRPORT = A2EUT13.NBRPORT;        
     SCENARIO_1.TYPCYLI = A2EUT13.TYPCYLI;        
     SCENARIO_1.NBCVDIN = A2EUT13.NBCVDIN;        
     SCENARIO_1.NBVITES = A2EUT13.NBVITES;        
     SCENARIO_1.CDSPORT = A2EUT13.CDSPORT;        
     SCENARIO_1.POIDVID = A2EUT13.POIDVID;        
     SCENARIO_1.TAXETMC = A2EUT13.TAXETMC / 100.00;        
     SCENARIO_1.DAFINIM = A2EUT13.DAFINIM;        
     SCENARIO_1.CDECOV2 = A2EUT13.CDECOV2;        
         
 /* !!!!!!!!!!!!!!!!! TEST CKI */        
 IF A2EUT13.NOIDMAR = 10        
    THEN SCENARIO_1.CDECOV2 = '1';        
         
     /* Il faut lire le libell{ de la boite de vitesse */        
     CALL LECT_LIBTXT(A2EUT13.TXTBOIT);        
     IF ERREUR THEN        
       DO;        
         CDRTPGM_W = 'A20161' !! '006';        
         RETURN;        
       END;        
     SCENARIO_1.LTBOITE = KA2231J_O01.LTTEXTE(SPA.CDLGTRN);        
     /* Il faut lire le libell{ du carburant */        
     CALL LECT_LIBTXT(A2EUT13.TXTCARB);        
     IF ERREUR THEN        
       DO;        
         CDRTPGM_W = 'A20161' !! '006';        
         RETURN;        
       END;        
     SCENARIO_1.LTCARBU = KA2231J_O01.LTTEXTE(SPA.CDLGTRN);        
         
     IF JWB001.CDTRACE > 2 THEN        
       DO;        
     PUT SKIP LIST('RETOUR DE GUIDANCE ...');        
     PUT SKIP LIST('SCENARIO_1.NOIDMAR=',SCENARIO_1.NOIDMAR);        
     PUT SKIP LIST('SCENARIO_1.NOIDMOD=',SCENARIO_1.NOIDMOD);        
     PUT SKIP LIST('SCENARIO_1.NOIDTYP=',SCENARIO_1.NOIDTYP);        
     PUT SKIP LIST('SCENARIO_1.LTMARQU=',SCENARIO_1.LTMARQU);        
     PUT SKIP LIST('SCENARIO_1.LTMODEL=',SCENARIO_1.LTMODEL);        
     PUT SKIP LIST('SCENARIO_1.LTTYPEV=',SCENARIO_1.LTTYPEV);        
     PUT SKIP LIST('SCENARIO_1.NBRTRAN=',SCENARIO_1.NBRTRAN);        
     PUT SKIP LIST('SCENARIO_1.NBTYPKW=',SCENARIO_1.NBTYPKW);        
     PUT SKIP LIST('SCENARIO_1.CDTYDM3=',SCENARIO_1.CDTYDM3);        
     PUT SKIP LIST('SCENARIO_1.CDTYOP3=',SCENARIO_1.CDTYOP3);        
     PUT SKIP LIST('SCENARIO_1.PRIHTVA=',SCENARIO_1.PRIHTVA);        
     PUT SKIP LIST('SCENARIO_1.TYPCYLI=',SCENARIO_1.TYPCYLI);        
     PUT SKIP LIST('SCENARIO_1.NBCVDIN=',SCENARIO_1.NBCVDIN);        
     PUT SKIP LIST('SCENARIO_1.LTBOITE=',SCENARIO_1.LTBOITE);        
     PUT SKIP LIST('SCENARIO_1.LTCARBU=',SCENARIO_1.LTCARBU);        
     PUT SKIP LIST('SCENARIO_1.NBVITES=',SCENARIO_1.NBVITES);        
     PUT SKIP LIST('SCENARIO_1.CDSPORT=',SCENARIO_1.CDSPORT);        
     PUT SKIP LIST('SCENARIO_1.POIDVID=',SCENARIO_1.POIDVID);        
     PUT SKIP LIST('SCENARIO_1.TAXETMC=',SCENARIO_1.TAXETMC);        
     PUT SKIP LIST('SCENARIO_1.DAFINIM=',SCENARIO_1.DAFINIM);        
     PUT SKIP LIST('SCENARIO_1.CDECOV2=',SCENARIO_1.CDECOV2);        
       END;        
   END;        
         
     TRACE = 'GA20161 ===> ' !! 'END FA_2';        
         
     CALL PT;        
 $END FA_2;        
 /*-----------------------------------------------*/        
 FB: PROC REORDER ;        
     TRACE = 'GA20161 ===> ' !! 'FB';        
         
     CALL PT;        
 /********************************************        
 * VALIDATION CONTEXTUELLE                   *        
 ********************************************/        
 ERREUR = OFF;        
 CDRTPGM_W = '';        
         
 CALL FE;        
 IF SCENARI.TBSCENA(9) THEN RETURN;        
         
         
 SCENARI.TBSCENA(9) = ON;        
         
 SCENARI.TBSCENA(8) = ON;        
         
         
 IF JWB001.CDTRACE >= 3 THEN        
   DO;        
     PUT SKIP LIST('Scenario_1.ANNCSTR=',SCENARIO_1.ANNCSTR);        
     PUT SKIP LIST('Scenario_1.NOIDMAR=',SCENARIO_1.NOIDMAR);        
     PUT SKIP LIST('Scenario_1.NOIDMOD=',SCENARIO_1.NOIDMOD);        
     PUT SKIP LIST('Scenario_1.NOIDTYP=',SCENARIO_1.NOIDTYP);        
     PUT SKIP LIST('SCENARIO_1.LTMARQU=',SCENARIO_1.LTMARQU);        
     PUT SKIP LIST('SCENARIO_1.LTMODEL=',SCENARIO_1.LTMODEL);        
     PUT SKIP LIST('SCENARIO_1.LTTYPEV=',SCENARIO_1.LTTYPEV);        
     PUT SKIP LIST('SCENARIO_1.NBRTRAN=',SCENARIO_1.NBRTRAN);        
     PUT SKIP LIST('SCENARIO_1.NBTYPKW=',SCENARIO_1.NBTYPKW);        
     PUT SKIP LIST('SCENARIO_1.CDTYOP3=',SCENARIO_1.CDTYOP3);        
     PUT SKIP LIST('SCENARIO_1.CDTYDM3=',SCENARIO_1.CDTYDM3);        
     PUT SKIP LIST('SCENARIO_1.PRIHTVA=',SCENARIO_1.PRIHTVA);        
     PUT SKIP LIST('SCENARIO_1.NBRPORT=',SCENARIO_1.NBRPORT);        
     PUT SKIP LIST('SCENARIO_1.TYPCYLI=',SCENARIO_1.TYPCYLI);        
     PUT SKIP LIST('SCENARIO_1.NBCVDIN=',SCENARIO_1.NBCVDIN);        
     PUT SKIP LIST('SCENARIO_1.LTBOITE=',SCENARIO_1.LTBOITE);        
     PUT SKIP LIST('SCENARIO_1.LTCARBU=',SCENARIO_1.LTCARBU);        
     PUT SKIP LIST('SCENARIO_1.NBVITES=',SCENARIO_1.NBVITES);        
     PUT SKIP LIST('SCENARIO_1.CDSPORT=',SCENARIO_1.CDSPORT);        
     PUT SKIP LIST('SCENARIO_1.POIDVID=',SCENARIO_1.POIDVID);        
     PUT SKIP LIST('SCENARIO_1.TAXETMC=',SCENARIO_1.TAXETMC);        
     PUT SKIP LIST('SCENARIO_1.DAFINIM=',SCENARIO_1.DAFINIM);        
     PUT SKIP LIST('SCENARIO_1.CDECOV2=',SCENARIO_1.CDECOV2);        
   END;        
         
     TRACE = 'GA20161 ===> ' !! 'END FB';        
         
     CALL PT;        
 $END FB;        
 /*-----------------------------------------------*/        
 FC: PROC REORDER ;        
     TRACE = 'GA20161 ===> ' !! 'FC';        
         
     CALL PT;        
 /********************************************        
 * UPDATE DES DB                             *        
 ********************************************/        
         
     TRACE = 'GA20161 ===> ' !! 'END FC';        
         
     CALL PT;        
 $END FC;        
 /*-------------------------------------------------------------------*/        
 FD: PROC REORDER ;        
     TRACE = 'GA20161 ===> ' !! 'FD';        
         
     CALL PT;        
 /********************************************        
 * SWITCHING VERS UN AUTRE SCENARIO          *        
 ********************************************/        
 IF ERREUR THEN        
   DO;        
     IF SPA.CDOPTRN = 'A2DVE' !        
        SPA.CDOPTRN = 'A2CDV' THEN        
       DO;        
         CDRTPGM_W = 'A20161' !! '008';        
         SPA.CDOPTRN = 'SMLDV'; #############################################        
       END;        
     ELSE        
       DO;        
         CDRTPGM_W = 'A20161' !! '006';        
         SPA.CDOPTRN = 'IMENU'; ##################        
       END;        
     CALL ERRORMSG(SUBSTR(CDRTPGM_W,1,9),        
                   SPA.CDLGTRN, SPA.LTOPCOM);        
     RETURN;        
   END;        
         
 IF SCENARI.TBSCENA(3)        
         
   THEN DO;        
          SPA.CDOPTRN = 'IMENU';        
          RETURN;        
        END;        
         
 /* TDMSOX #002# */        
 /*On ne passe plus sur la page ACCessoire WE096 */        
 SCENARI.NOPGACT = '5';        
 JWB001.CDRTPGM = 'DUMMY';        
         
     TRACE = 'GA20161 ===> ' !! 'END FD';        
         
     CALL PT;        
 $END FD;        
 /*-----------------------------------------------*/        
         
 FE: PROC REORDER ;        
     TRACE = 'GA20161 ===> ' !! 'FE';        
         
     CALL PT;        
 /********************************************        
 * TEST SI SCROLLING EST DEMANDE             *        
 ********************************************/        
 SCENARI.TBSCENA(9) = OFF;        
         
 SCENARI.TBSCENA(8) = OFF;        
         
         
     TRACE = 'GA20161 ===> ' !! 'END FE';        
         
     CALL PT;        
 $END FE;        
 /*===================================================================*/        
 FH: PROC REORDER;        
 TRACE = 'GA20161 ===> ' !! 'FH';        
         
 CALL PT;        
 /*********************************************************************/        
 /* TEST PF DE SORTIE RAPIDE                                          */        
 /*********************************************************************/        
         
 /*-------------------------------------------------------------------*/        
 TRACE = 'GA20161 ===> ' !! 'END FH';        
         
 CALL PT;        
 $END FH;        
 /*-----------------------------------------------*/        
         
 FF: PROC REORDER ;        
     TRACE = 'GA20161 ===> ' !! 'FF';        
         
     CALL PT;        
 /********************************************        
 * TEST SI SCROLLING EST DEMANDE             *        
 ********************************************/        
     TRACE = 'GA20161 ===> ' !! 'END FF';        
         
     CALL PT;        
 $END FF;        
 /*-----------------------------------------------*/        
         
 FG: PROC REORDER ;        
     TRACE = 'GA20161 ===> ' !! 'FG';        
         
     CALL PT;        
 /******************************************************        
 * TEST DES TOUCHES EQUIVALENTES A PF1 EN CONFIRMATION *        
 ******************************************************/        
     TRACE = 'GA20161 ===> ' !! 'END FG';        
         
     CALL PT;        
 $END FG;        
 /*-----------------------------------------------*/        
         
 INIT_OPERATION: PROC REORDER ;        
     TRACE = 'GA20161 ===> ' !! 'INIT_OPERATION';        
         
     CALL PT;        
 /******************************************        
 * RECHARGER CERTAINES INFOS SELON CDOPTRN *        
 ******************************************/        
 /* A2DVI => Site Ethias/Mon site Ethias : Faire un devis auto       */        
 /* A2DVE => Site My E.  : Faire un devis                            */        
 /* A2SOU => Site Ethias : retour e-mail avec nouveau affili{        */        
 /*                        quand clic sur souscription               */        
 /* A2CDV => Site My E.  : Consulter un devis                        */        
 /* A2RDV => Relance     : Relance Auto (on vient de WA2014)         */        
 /* A2MSE => Mon Site ETh: Afficher le resultat devis apres Id Light */        
 /* A2EDV => E-mail      : Votre devis  (on vient de WA2014)         */        
         
 SCENARIO_1 = '';        
 SCENARIO_4 = '';        
 SCENARIO_5 = '';        
 SCENARIO_6 = '';        
 SCENARIO_7 = '';        
 SCENARIO_8 = '';        
 SCENARIO_9 = '';        
 SCENARIO_10= '';        
 SCENARIO_11= '';        
 SCENARIO_12= '';        
         
 SPAVAR = '';        
         
 IF JWB001.CDTRACE >= 3 THEN        
   DO;        
     PUT SKIP LIST('GA20161 : infos affilie en SPA =');        
     PUT SKIP LIST('INFOS_USER.CDMSETH =',INFOS_USER.CDMSETH);        
     PUT SKIP LIST('INFOS_USER.CDSTAT  =',INFOS_USER.CDSTAT);        
     PUT SKIP LIST('INFOS_USER.LTSITE  =',INFOS_USER.LTSITE);        
     PUT SKIP LIST('SPA.CDOPTRN =',SPA.CDOPTRN);        
     PUT SKIP LIST('SPA.CDRSAFF =',SPA.CDRSAFF);        
     PUT SKIP LIST('SPA.NOPPAFF =',SPA.NOPPAFF);        
     PUT SKIP LIST('SPA.NOIDAFF =',SPA.NOIDAFF);        
     PUT SKIP LIST('SPA.LTNMAFF =',SPA.LTNMAFF);        
     PUT SKIP LIST('SPA.DANAIAF =',SPA.DANAIAF);        
     PUT SKIP LIST('SPA.CDSEXAF =',SPA.CDSEXAF);        
     PUT SKIP LIST('SPA.CDLGEAF =',SPA.CDLGEAF);        
     PUT SKIP LIST('SPA.LTRUEAF =',SPA.LTRUEAF);        
     PUT SKIP LIST('SPA.NOHA1AF =',SPA.NOHA1AF);        
     PUT SKIP LIST('SPA.NOHA2AF =',SPA.NOHA2AF);        
     PUT SKIP LIST('SPA.CDCPOAF =',SPA.CDCPOAF);        
     PUT SKIP LIST('SPA.LTLOCAF =',SPA.LTLOCAF);        
     PUT SKIP LIST('SPA.LTEMAIL =',SPA.LTEMAIL);        
   END;        
 /* !!!!!!!!!!! On a CDMSETH = Y aussi quand on revient avec A2SOU */        
 /* car on inscrit d'office le nouvel affilie e 'mon site ethias'  */        
         
 /* !!! Il faudra verifier si NOPPAFF est different de NOIDAFF        
    C'est qu'on a souscrit pour quelqu'un d'autre que le conducteur        
    renseigne dans le devis.        
    Donc il faudra recreer un nouveau devis dans le scenario 6        
         
    Avec A2SOU, A2MSE, A2RDV, A2EDV  => on a tjs CDMSETH e Yes        
    Avec A2DVE, A2CDV => on est sur My Ethias (CDMSETH # Yes)        
    Avec A2DVI : on peut avoir les 2        
 */        
         
 IF (INFOS_USER.CDMSETH = 'Y') THEN        
   DO;        
     IF SPA.NOPPAFF = 0        
      & SPA.NOIDAFF = 0 THEN        
       DO;        
         IF JWB001.CDTRACE >= '3' THEN        
           DO;        
             PUT SKIP LIST('CLAIRE : ANOMALIE GA20161, CDMSETH=Yes');        
             PUT SKIP LIST('SPA.CDOPTRN =',SPA.CDOPTRN);        
             PUT SKIP LIST('SPA.NOIDAFF =',SPA.NOIDAFF);        
             PUT SKIP LIST('SPA.NOPPAFF =',SPA.NOPPAFF);        
             PUT SKIP LIST('SPA.EMAILAF =',SPA.EMAILAF);        
             PUT SKIP LIST('INFOS_USER.CDSTAT  =',INFOS_USER.CDSTAT);        
             PUT SKIP LIST('INFOS_USER.LTSITE  =',INFOS_USER.LTSITE);        
             PUT SKIP LIST('INFOS_USER.CDMSETH =',INFOS_USER.CDMSETH);        
           END;        
         /* Probleme applicatif ...*/        
         CDRTPGM_W = 'A20161' !! '006';        
         ERREUR = ON;        
         RETURN;        
       END;        
         
       IF SPA.NOPPAFF = 0        
       THEN SPA.NOPPAFF = SPA.NOIDAFF;        
         
     /* Cki le 02.03.2010 On doit savoir si le NOPPAFF # NOIDAFF car        
        si A2SOU il faut refaire un nouveau devis        
            pour que la souscription s'inscrive sur le S1GSI de celui        
            qui souscrit        
        En principe, avec CDMSETH e Y,        
        on doit avoir necessairement NOPPAFF = NOIDAFF. Mais si        
        on est passe avant avec A2SOU alors qu'on etait sur A2MSE mais        
        que l'on a souscrit pour un nouvel affilie, alors la SPA est        
        restee garnie avec les donnees de l'affilie NOIDAFF.        
        Donc il faut re garnir la SPA avec les donnees de NOPPAFF        
     */        
         
     IF SPA.NOIDAFF = 0 THEN        
       DO;        
         IF SPA.CDOPTRN = 'A2SOU'        
           THEN DO;        
                  /* Probleme applicatif ...*/        
                  CDRTPGM_W = 'A20161' !! '006';        
                  ERREUR = ON;        
                  RETURN;        
                END;        
           ELSE SPA.NOIDAFF = SPA.NOPPAFF;        
       END;        
   END;        
 ELSE        
   IF SPA.CDOPTRN = 'A2MSE' THEN        
     DO;        
       /* Probleme applicatif ...*/        
       CDRTPGM_W = 'A20161' !! '006';        
       ERREUR = ON;        
       RETURN;        
     END;        
         
         
 IF SPA.NOIDAFF > 0 THEN        
   DO;        
     /* Regarnir la SPA avec les donnees de l'affilie NOPPAFF */        
     /* ainsi que la SPAVAR.IDENTI = celui qui fait le devis  */        
         
     CALL LECT_S1AFFIL;        
         
     IF JWB001.CDRTPGM ^= '' THEN        
       DO;        
         IF JWB001.CDTRACE >= '3' THEN        
           DO;        
     PUT SKIP LIST('CLAIRE : ANOMALIE GA20161, Affilie pas trouve');        
            PUT SKIP LIST('JWB001.CDRTPGM =',JWB001.CDRTPGM);        
            PUT SKIP LIST('SPA.CDOPTRN =',SPA.CDOPTRN);        
            PUT SKIP LIST('SPA.NOIDAFF =',SPA.NOIDAFF);        
            PUT SKIP LIST('SPA.NOPPAFF =',SPA.NOPPAFF);        
            PUT SKIP LIST('SPA.EMAILAF =',SPA.EMAILAF);        
            PUT SKIP LIST('INFOS_USER.CDSTAT  =',INFOS_USER.CDSTAT);        
            PUT SKIP LIST('INFOS_USER.LTSITE  =',INFOS_USER.LTSITE);        
            PUT SKIP LIST('INFOS_USER.CDMSETH =',INFOS_USER.CDMSETH);        
           END;        
         /* Probleme applicatif ...*/        
         CDRTPGM_W = 'A20161' !! '006';        
         ERREUR = ON;        
         RETURN;        
       END;        
         
     /* Cki le 16.02.2009 : Bloquer si identifie avec code postal non        
        numerique        
        Ex: client en My Ethias, pas belge !!!        
     */        
     IF VERIFY(SPAVAR.IDENTI.CDCPOAF,NUMB) > 0 THEN        
       DO;        
         /* Probleme applicatif ...*/        
         CDRTPGM_W = 'A20161' !! '006';        
         ERREUR = ON;        
         RETURN;        
       END;        
   END;        
         
         
 IF SPA.CDOPTRN = 'A2DVI' ! SPA.CDOPTRN = 'A2M20' THEN        
   DO;        
     /* Faire un nouveau devis (sur site public OU mon site Ethias)        
        ----------------------        
     */        
     RETURN;        
   END;        
         
 /* On a soit A2DVE , A2SOU, A2MSE, A2CDV , A2RDV, A2EDV */        
 /* ---------------------------------------------------- */        
 IF SPA.CDOPTRN = 'A2MSE' THEN        
   DO;        
     /* On est passe par S1169 avant d'arriver ici et on a affilie        
        l'internaute ET d'office inscrit e mon site Ethias        
        on revient de l'inscription sur mon site ethias        
        et on avait fait un devis pour lequel on va maintenant voir        
        la page resultat        
        Mais, il faut refaire un nouveau devis car la XA2F11 ne        
        renvoi pas le NOSEQRB si on clic +s fois sur le meme mail        
     */        
     SPAVAR.NEWDEVI = 'Y';        
   END;        
         
 IF SPA.CDOPTRN = 'A2DVE' THEN        
   DO; ###########################################        
     RETURN;        
   END;        
         
 /* Reste comme CDOPTRN possible : A2SOU, A2MSE, A2CDV , A2RDV ,A2EDV */        
 /* On relit seulement le devis. Il est recalcule au scenario 6.        
    On fera aussi le Ctrl de risques et les interventions au scenario6        
 */        
         
 SPAVAR.NOIDDEV = SPAS1096.NODEVI;        
         
 SPAVAR.DEVISAF = '  ' !! SUBSTR(SPAVAR.NOIDDEV,8,2) !!        
               SUBSTR(SPAVAR.NOIDDEV,6,2) !!        
               SUBSTR(SPAVAR.NOIDDEV,4,2) !! '/' !!        
               SUBSTR(SPAVAR.NOIDDEV,10,4);        
         
 SPAVAR.CDTYPOP = '';        
         
 IF SPAVAR.NOIDDEV = 0 THEN        
   DO;        
     IF JWB001.CDTRACE >= 3        
       THEN PUT SKIP LIST('Pas de numero de Devis !!!!!');        
         
     CDRTPGM_W = 'A20161' !! '006';        
     ERREUR = ON;        
     RETURN;        
   END;        
         
 CALL RELIRE_DEVIS;        
 IF ERREUR THEN RETURN;        
         
 /* PS : si A2MSE on n'avait pas sauve de choix car on est parti        
         en ID light avant d'afficher le devis        
 */        
 CALL RETROUVER_CHOIX;        
         
 IF SPA.CDOPTRN ^= 'A2MSE'        
   THEN SPAVAR.NEWDEVI = 'N';        
         
 SPAVAR.NBRELAN = 0;        
         
 IF JWB001.CDTRACE >= 3 THEN        
   DO;        
     PUT SKIP LIST('Scenario_1.ANNCSTR=',SCENARIO_1.ANNCSTR);        
     PUT SKIP LIST('Scenario_1.NOIDMAR=',SCENARIO_1.NOIDMAR);        
     PUT SKIP LIST('Scenario_1.NOIDMOD=',SCENARIO_1.NOIDMOD);        
     PUT SKIP LIST('Scenario_1.NOIDTYP=',SCENARIO_1.NOIDTYP);        
     PUT SKIP LIST('Scenario_1.LTMARQU=',SCENARIO_1.LTMARQU);        
     PUT SKIP LIST('Scenario_1.LTMODEL=',SCENARIO_1.LTMODEL);        
     PUT SKIP LIST('Scenario_1.LTTYPEV=',SCENARIO_1.LTTYPEV);        
     PUT SKIP LIST('Scenario_1.NBRTRAN=',SCENARIO_1.NBRTRAN);        
     PUT SKIP LIST('Scenario_1.NBTYPKW=',SCENARIO_1.NBTYPKW);        
     PUT SKIP LIST('Scenario_1.CDTYOP3=',SCENARIO_1.CDTYOP3);        
     PUT SKIP LIST('Scenario_1.CDTYDM3=',SCENARIO_1.CDTYDM3);        
     PUT SKIP LIST('Scenario_1.PRIHTVA=',SCENARIO_1.PRIHTVA);        
     PUT SKIP LIST('Scenario_1.NBRPORT=',SCENARIO_1.NBRPORT);        
     PUT SKIP LIST('Scenario_1.TYPCYLI=',SCENARIO_1.TYPCYLI);        
     PUT SKIP LIST('Scenario_1.NBCVDIN=',SCENARIO_1.NBCVDIN);        
     PUT SKIP LIST('Scenario_1.LTBOITE=',SCENARIO_1.LTBOITE);        
     PUT SKIP LIST('SCENARIO_1.NBVITES=',SCENARIO_1.NBVITES);        
     PUT SKIP LIST('SCENARIO_1.CDSPORT=',SCENARIO_1.CDSPORT);        
     PUT SKIP LIST('SCENARIO_1.POIDVID=',SCENARIO_1.POIDVID);        
     PUT SKIP LIST('SCENARIO_1.TAXETMC=',SCENARIO_1.TAXETMC);        
     PUT SKIP LIST('SCENARIO_1.DAFINIM=',SCENARIO_1.DAFINIM);        
     PUT SKIP LIST('SCENARIO_1.CDECOV2=',SCENARIO_1.CDECOV2);        
         
     PUT SKIP LIST('SCENARIO_5.DANAIPR=',SCENARIO_5.DANAIPR);        
     PUT SKIP LIST('SCENARIO_5.CDPOPRE=',SCENARIO_5.CDPOPRE);        
     PUT SKIP LIST('SCENARIO_5.VACATVH=',SCENARIO_5.VACATVH);        
     PUT SKIP LIST('SCENARIO_5.CDASTMC=',SCENARIO_5.CDASTMC);        
     PUT SKIP LIST('SCENARIO_5.CDTYPRO=',SCENARIO_5.CDTYPRO);        
     PUT SKIP LIST('SCENARIO_5.CDGEPRO=',SCENARIO_5.CDGEPRO);        
     PUT SKIP LIST('SCENARIO_5.BOVHOCC=',SCENARIO_5.BOVHOCC);        
     PUT SKIP LIST('SCENARIO_5.CDUSAVH=',SCENARIO_5.CDUSAVH);        
     PUT SKIP LIST('SCENARIO_5.NBSINIS=',SCENARIO_5.NBSINIS);        
     PUT SKIP LIST('SCENARIO_5.DAPERMI=',SCENARIO_5.DAPERMI);        
     PUT SKIP LIST('SCENARIO_5.BOAUTCP=',SCENARIO_5.BOAUTCP);        
     PUT SKIP LIST('SCENARIO_5.BOHOREC=',SCENARIO_5.BOHOREC);        
     PUT SKIP LIST('SCENARIO_5.NBKMPAN=',SCENARIO_5.NBKMPAN);        
     PUT SKIP LIST('SCENARIO_5.CDCDC26=',SCENARIO_5.CDCDC26);        
     PUT SKIP LIST('SCENARIO_5.CDPOSRM=',SCENARIO_5.CDPOSRM);        
     PUT SKIP LIST('SCENARIO_5.STARTOK=',SCENARIO_5.STARTOK);        
     PUT SKIP LIST('SCENARIO_5.CDJEUNE=',SCENARIO_5.CDJEUNE);        
     PUT SKIP LIST('SCENARIO_5.AGEPREN=',SCENARIO_5.AGEPREN);        
     PUT SKIP LIST('SCENARIO_5.AGEPERM=',SCENARIO_5.AGEPERM);        
         
     PUT SKIP LIST('Scenario_6.CDPADIV=',SCENARIO_6.CDPADIV);        
         
     PUT SKIP LIST('SCENARIO_7.LTMARRM = ',SCENARIO_7.LTMARRM);        
     PUT SKIP LIST('SCENARIO_7.ANCSTRM = ',SCENARIO_7.ANCSTRM);        
     PUT SKIP LIST('SCENARIO_7.MTCATRM = ',SCENARIO_7.MTCATRM);        
     PUT SKIP LIST('SCENARIO_7.MTACTRM = ',SCENARIO_7.MTACTRM);        
     PUT SKIP LIST('SCENARIO_7.NUPDSRM = ',SCENARIO_7.NUPDSRM);        
         
     PUT SKIP LIST('SCENARIO_8.NBSINDM',SCENARIO_8.NBSINDM);        
     PUT SKIP LIST('SCENARIO_8.CDJEUFA',SCENARIO_8.CDJEUFA);        
     PUT SKIP LIST('SCENARIO_8.CDTY2PO',SCENARIO_8.CDTY2PO);        
     PUT SKIP LIST('SCENARIO_8.CDSTACO',SCENARIO_8.CDSTACO);        
     PUT SKIP LIST('SCENARIO_8.CDENFCH',SCENARIO_8.CDENFCH);        
     PUT SKIP LIST('SCENARIO_8.CDSTART',SCENARIO_8.CDSTART);        
         
     PUT SKIP LIST('SPAVAR.VERSDEV =',SPAVAR.VERSDEV);        
         
   END;        
         
     TRACE = 'GA20161 ===> ' !! 'END INIT_OPERATION';        
         
     CALL PT;        
 $END INIT_OPERATION;        
         
 /*-----------------------------------------------*/        
         
 RELIRE_DEVIS: PROC REORDER ;        
     TRACE = 'GA20161 ===> ' !! 'RELIRE_DEVIS';        
         
     CALL PT;        
 /******************************************        
 * RECHARGER CERTAINES INFOS SELON CDOPTRN *        
 ******************************************/        
 /* CKI 16.09.05 : Tmc dans accessoires !!! */        
 JA2F11.PTRPCB.ALTPCB    = GA2016J.ALTPCB;        
 JA2F11.PTRPCB.TABPCB    = GA2016J.DC105PCB;        
 JA2F11.PTRPCB.DSM88PCB  = GA2016J.DSM88PCB;        
 JA2F11.PTRPCB.DSM22PCB  = GA2016J.DSM22PCB;        
 JA2F11.PTRPCB.DS139PCB  = GA2016J.DS139PCB;        
 JA2F11.PTRPCB.DS133PCB  = GA2016J.DS133PCB;        
 JA2F11.PTRPCB.DSM55PCB  = GA2016J.DSM55PCB;        
 JA2F11.PTRPCB.DEU02PCB  = GA2016J.DEU02PCB;        
 JA2F11.INPUT         = '';        
 JA2F11.INPUT.CDTYPOP = 'A';        
 JA2F11.INPUT.CDDVTRN = SPA.CDDVTRN;        
 INTER_C11 = SUBSTR(SPAVAR.NOIDDEV,3,11);        
 JA2F11.INPUT.NOIDDEV = INTER_P11;        
         
 JA2F11.DATA          = '';        
 JA2F11.OUTPUT        = '';        
         
 IF JWB001.CDTRACE >= 3 THEN        
   DO;        
    PUT SKIP EDIT(' avant XA2F11 : lecture devis ')(A);        
    PUT SKIP EDIT(' ============================ ')(A);        
    PUT SKIP DATA(JA2F11);        
         
    PUT SKIP LIST('GA20161,Lecture Devis, CDOPTRN=',SPA.CDOPTRN);        
   END;        
         
 CALL XA2F11(JA2F11,IEU001);        
         
 IF JWB001.CDTRACE >= 3 THEN        
   DO;        
    PUT SKIP EDIT(' apres XA2F11 (relire_devis) ')(A);        
    PUT SKIP EDIT(' =========================== ')(A);        
    PUT SKIP DATA(JA2F11);        
         
   END;        
         
 IF JA2F11.CDRTPGM ^= '' THEN        
   DO;        
     IF JWB001.CDTRACE >= 3 THEN        
       DO;        
         PUT SKIP LIST('Erreur lecture devis anonyme !!!');        
         PUT SKIP EDIT(' apres XA2F11 ')(A);        
         PUT SKIP EDIT(' ============ ')(A);        
         PUT SKIP DATA(JA2F11);        
       END;        
     CDRTPGM_W = 'A20161' !! '006';        
     ERREUR    = ON;        
     RETURN;        
   END;        
         
 INTER_C7 = JA2F11.DATA.VEHIC.CDEURTX;        
 SCENARIO_1.NOIDTYP = INTER_P7;        
 INTER_C4 = JA2F11.DATA.VEHIC.ANCSTVH;        
 SCENARIO_1.ANNCSTR = INTER_P4;        
         
 /* Relire eurotax pour infos v{hicule */        
 /* ---------------------------------- */        
 KA2151J.INPUT = '';        
 KA2151J_A2IXEUT_I.NOIDTYP = SCENARIO_1.NOIDTYP;        
 JWB001.LSTCALL = 'LECT_IDX.1';        
 JWB001.LTNMMTH = 'MAR_MOD_VP_TYP';        
 CALL KA2151(IEU001,JWB001,KA2151J);        
         
 IF JWB001.CDRTPGM ^= ''        
   THEN DO;        
          IF JWB001.CDTRACE >= 3 THEN        
             PUT SKIP LIST('Erreur lecture index eurotax !!!');        
          ERREUR = ON;        
          RETURN;        
        END;        
   ELSE DO;        
          SCENARIO_1.NOIDMAR = KA2151J_A2IXEUT_O.NOIDMAR;        
          SCENARIO_1.NOIDMOD = KA2151J_A2IXEUT_O.NOIDMOD;        
        END;        
         
 /* Relire la marque du vehicule */        
 /* ---------------------------- */        
 KA2151J.INPUT = '';        
 A2EUT11_R       = '';        
 A2EUT11.CDTYPTB = '11';        
 A2EUT11.NOIDMAR = SCENARIO_1.NOIDMAR;        
         
 KA2151J_A2EUTAX_I = A2EUT11_R;        
 JWB001.LSTCALL = 'LECT_TAX.1';        
 JWB001.LTNMMTH = 'CONSULT_VP_MAK';        
 CALL KA2151(IEU001,JWB001,KA2151J);        
         
 IF JWB001.CDRTPGM ^= ''        
   THEN DO;        
          IF JWB001.CDTRACE >= 3 THEN        
            PUT SKIP LIST('Erreur lecture eurotax CONSULT_VP_MAK !!!');        
          ERREUR = ON;        
          RETURN;        
        END;        
   ELSE DO;        
          A2EUT11_R = KA2151J_A2EUTAX_O;        
          SCENARIO_1.LTMARQU = A2EUT11.LTMARQU;        
        END;        
         
 /* Relire le modele du vehicule */        
 /* ---------------------------- */        
 KA2151J.INPUT = '';        
 A2EUT12_R       = '';        
 A2EUT12.CDTYPTB = '12';        
 A2EUT12.NOIDMAR = SCENARIO_1.NOIDMAR;        
 A2EUT12.NOIDMOD = SCENARIO_1.NOIDMOD;        
         
 KA2151J_A2EUTAX_I = A2EUT12_R;        
 JWB001.LSTCALL = 'LECT_TAX.2';        
 JWB001.LTNMMTH = 'CONSULT_VP_MOD';        
 CALL KA2151(IEU001,JWB001,KA2151J);        
         
 IF JWB001.CDRTPGM ^= ''        
   THEN DO;        
          IF JWB001.CDTRACE >= 3 THEN        
            PUT SKIP LIST('Erreur lecture eurotax CONSULT_VP_MOD !!!');        
          ERREUR = ON;        
          RETURN;        
        END;        
   ELSE DO;        
          A2EUT12_R = KA2151J_A2EUTAX_O;        
          SCENARIO_1.LTMODEL = A2EUT12.LTMODEL;        
        END;        
         
 /* Relire le Type   du vehicule */        
 /* ---------------------------- */        
 CALL LECT_VP_TYP(SCENARIO_1.NOIDTYP);        
 IF ERREUR THEN RETURN;        
         
 SCENARIO_1.LTTYPEV = SUBSTR(A2EUT13.LTTYPEV,1,40);        
 SCENARIO_1.NBRTRAN = A2EUT13.NBRTRAN;        
 SCENARIO_1.NBTYPKW = A2EUT13.NBTYPKW;        
 SCENARIO_1.CDTYDM3 = A2EUT13.CDTYDM3;        
 SCENARIO_1.CDTYOP3 = A2EUT13.CDTYOP3;        
 SCENARIO_1.NBRPORT = A2EUT13.NBRPORT;        
 SCENARIO_1.TYPCYLI = A2EUT13.TYPCYLI;        
 SCENARIO_1.NBCVDIN = A2EUT13.NBCVDIN;        
 SCENARIO_1.NBVITES = A2EUT13.NBVITES;        
 SCENARIO_1.CDSPORT = A2EUT13.CDSPORT;        
 SCENARIO_1.POIDVID = A2EUT13.POIDVID;        
 SCENARIO_1.TAXETMC = A2EUT13.TAXETMC / 100.00;        
 SCENARIO_1.DAFINIM = A2EUT13.DAFINIM;        
 SCENARIO_1.CDECOV2 = A2EUT13.CDECOV2;        
         
 /* !!!!!!!!!!!!!!!!! TEST CKI */        
 IF A2EUT13.NOIDMAR = 10        
    THEN SCENARIO_1.CDECOV2 = '1';        
         
 /* lire libelle boite de vitesse */        
 /* ----------------------------- */        
 CALL LECT_LIBTXT(A2EUT13.TXTBOIT);        
 IF ERREUR THEN RETURN;        
 SCENARIO_1.LTBOITE = KA2231J_O01.LTTEXTE(SPA.CDLGTRN);        
 /* lire libelle carburant*/        
 /* ----------------------*/        
 CALL LECT_LIBTXT(A2EUT13.TXTCARB);        
 IF ERREUR THEN RETURN;        
 SCENARIO_1.LTCARBU = KA2231J_O01.LTTEXTE(SPA.CDLGTRN);        
         
 /* Relire le Prix catalogue du vehicule */        
 /* ------------------------------------ */        
 KA2151J.INPUT = '';        
 KA2151J_PRIX_I.CDTYPTB = '14';        
 KA2151J_PRIX_I.NOIDTYP = SCENARIO_1.NOIDTYP;        
 KA2151J_PRIX_I.ANNECTR = SCENARIO_1.ANNCSTR;        
 JWB001.LSTCALL = 'LECT_TAX.4';        
 JWB001.LTNMMTH = 'VP_PRIX';        
 CALL KA2151(IEU001,JWB001,KA2151J);        
         
 IF JWB001.CDRTPGM ^= ''        
   THEN DO;        
          IF JWB001.CDTRACE >= 3 THEN        
            PUT SKIP LIST('Erreur lecture eurotax VP_PRIX !!!');        
          ERREUR = ON;        
          RETURN;        
        END;        
   ELSE DO;        
          SCENARIO_1.PRIHTVA = KA2151J_PRIX_O.PRIHTVA / 100.00;        
        END;        
         
 /* La page 5 : le conducteur */        
 /* ------------------------- */        
 INTER_C8 = JA2F11.DATA.SIGNAL.DANCOJJ !!        
            JA2F11.DATA.SIGNAL.DANCOMM !!        
            JA2F11.DATA.SIGNAL.DANCOAA;        
 SCENARIO_5.DANAIPR = INTER_P8;        
 INTER_C4 = SUBSTR( JA2F11.DATA.SIGNAL.CDCPOCO,1,4);        
 SCENARIO_5.CDPOPRE = INTER_P4;        
         
 INTER_F15 = 0;        
 INTER_F15 = F_MTCTF(JA2F11.DATA.VEHIC.VACATVH,0);        
 SCENARIO_5.VACATVH = INTER_F15; ########################################        
         
 IF JA2F11.DATA.REMORQUE.CDCATRE = '100'        
   THEN SCENARIO_5.CDPOSRM = 'Y';        
         
 IF JA2F11.CDUSPRO = 1        
   THEN SCENARIO_5.CDUSAVH = 'Y';        
   ELSE SCENARIO_5.CDUSAVH = 'N';        
 IF JA2F11.CDJEUCO = '1'        
   THEN SCENARIO_5.CDCDC26 = 'Y';        
   ELSE SCENARIO_5.CDCDC26 = 'N';        
 IF JA2F11.CDASTMC = '1'        
   THEN SCENARIO_5.CDASTMC = 'Y';        
   ELSE SCENARIO_5.CDASTMC = 'N';        
         
 IF JA2F11.CDOLDVH = 'Y'        
   THEN SCENARIO_5.BOVHOCC = 'Y';        
   ELSE SCENARIO_5.BOVHOCC = 'N';        
         
 INTER_P2  = JA2F11.NBSINRC;        
 SCENARIO_5.NBSINIS = INTER_P2;        
         
 INTER_C8 = JA2F11.JJDEPER !! JA2F11.MMDEPER !! JA2F11.AADEPER;        
 IF VERIFY(INTER_C8,NUM) = 0        
   THEN SCENARIO_5.DAPERMI  = INTER_P8;        
   ELSE DO;        
          IF JWB001.CDTRACE >= 3 THEN        
            DO;        
              PUT SKIP LIST('Pas de date de permis dans le devis !!!');        
            END;        
          CDRTPGM_W = 'A20161' !! '006';        
          ERREUR = ON;        
          RETURN;        
        END;        
         
 IF JA2F11.CDPRASS = 'Y'        
   THEN SCENARIO_5.BOAUTCP = 'Y';        
   ELSE SCENARIO_5.BOAUTCP = 'N';        
         
 SCENARIO_5.CDTYPRO = JA2F11.CDTYPRO;        
 SCENARIO_5.CDGEPRO = JA2F11.CDGEPRO;        
         
 IF JA2F11.CDHOREC = '1'        
   THEN SCENARIO_5.BOHOREC = 'Y';        
   ELSE SCENARIO_5.BOHOREC = 'N';        
         
 SCENARIO_5.NBKMPAN = JA2F11.NBKMPRO * 1000;        
         
 INTER_P4 = 0;        
 CALL F_CALCUL_AGE(SCENARIO_5.DANAIPR,INTER_P4);        
 INTER_C2 = SUBSTR(INTER_C4,3,2);        
 SCENARIO_5.AGEPREN = INTER_P2;        
         
 SCENARIO_5.CDJEUNE = 0;        
 SELECT;        
   WHEN(SCENARIO_5.AGEPREN >= 30);        
   WHEN(SCENARIO_5.AGEPREN <  26)        
         SCENARIO_5.CDJEUNE=1; #################################        
   OTHER SCENARIO_5.CDJEUNE=1; #################################        
 END;        
         
 IF SCENARIO_5.CDJEUNE = 1        
  & INFOS_USER.CDAFGRP ^= ''        
   THEN SCENARIO_5.CDJEUNE = 0;        
         
 IF SCENARIO_5.DAPERMI > 0 THEN        
   DO;        
     INTER_P4 = 0;        
     CALL F_CALCUL_AGE(SCENARIO_5.DAPERMI,INTER_P4);        
     INTER_C2 = SUBSTR(INTER_C4,3,2);        
     SCENARIO_5.AGEPERM = INTER_P2;        
   END;        
         
 SCENARIO_5.STARTOK = 'N';        
 IF SCENARIO_5.CDJEUNE = 0        
  ! SCENARIO_5.AGEPREN >= 26        
  ! SCENARIO_5.CDUSAVH = 'Y' THEN        
   DO;        
     SCENARIO_8.CDENFCH = '';        
     SCENARIO_8.CDSTACO = '';        
     SCENARIO_8.CDSTART = '';        
   END;        
 ELSE        
   IF SCENARIO_1.NBTYPKW <= 60        
    & SCENARIO_5.AGEPERM < 4        
     THEN SCENARIO_5.STARTOK = 'Y';        
         
 /* La page 8 : jeune conducteur */        
 /* ---------------------------- */        
 INTER_P2  = JA2F11.NBSINDM;        
 SCENARIO_8.NBSINDM = INTER_P2;        
 SCENARIO_8.CDJEUFA = JA2F11.CDJEFAM;        
 SCENARIO_8.CDTY2PO = JA2F11.CDTY2PO;        
 SCENARIO_8.CDENFCH = JA2F11.CDJEENF;        
 SCENARIO_8.CDSTACO = JA2F11.CDDRIVE;        
 IF JA2F11.CDSTART = '1'        
   THEN SCENARIO_8.CDSTART = 'Y';        
   ELSE SCENARIO_8.CDSTART = 'N';        
         
 /* La page 7 : la remorque */        
 /* ----------------------- */        
 IF SCENARIO_5.CDPOSRM = 'Y' THEN        
   DO;        
     SCENARIO_7.LTMARRM = JA2F11.DATA.REMORQUE.LTMARRE;        
     INTER_C4 = JA2F11.DATA.REMORQUE.ANCSTRE;        
     SCENARIO_7.ANCSTRM = INTER_P4;        
     INTER_F15 = 0;        
     INTER_F15 = F_MTCTF(JA2F11.DATA.REMORQUE.VACATRE,0);        
     SCENARIO_7.MTCATRM = INTER_F15; ########################################        
     INTER_F15 = 0;        
     INTER_F15 = F_MTCTF(JA2F11.DATA.REMORQUE.VAACTRE,0);        
     SCENARIO_7.MTACTRM = INTER_F15; ########################################        
     /* 2450 kg=> JA2F11.NUPDSRE=02,5 => INTER_F15=25 */        
     INTER_F15 = 0;        
     INTER_F15 = F_MTCTF(JA2F11.DATA.REMORQUE.NUPDSRE,1);        
     /*        
     PUT SKIP LIST('Retour KGI012 NUPDSRE,INTER_F15=',INTER_F15);        
     PUT SKIP LIST('JWB001.CDRTPGM=',JWB001.CDRTPGM);        
     */        
     INTER_F15 = INTER_F15 * 100; #############################        
     SCENARIO_7.NUPDSRM = INTER_F15;        
   END;        
         
 /* C'est quand on relit le devis que le CDPADIV est rendu a la place        
    de certaines infos jeunes non m{moris{es par XA2F11        
    (CDJEUFA, CDTY2PO et CDJEUCO !!!! ) */        
 /* De toute faon le devis sera re calcule au scenario 6        
    et on recalcule de CDBMDET et le CDCIBCL et le CDPROMO        
 */        
 SCENARIO_6.CDPADIV = JA2F11.CDPADIV;        
 SCENARIO_6.CDPROMO = JA2F11.CDPROMO;        
         
 SPAVAR.VERSDEV = JA2F11.NOIDVER; ########################################        
         
         
     TRACE = 'GA20161 ===> ' !! 'END RELIRE_DEVIS';        
         
     CALL PT;        
 $END RELIRE_DEVIS;        
         
 /*-----------------------------------------------*/        
         
 RETROUVER_CHOIX: PROC REORDER ;        
     TRACE = 'GA20161 ===> ' !! 'RET_CHOIX';        
         
     CALL PT;        
 /************************************        
 * RETROUVER LES PRIMES CHOISIES     *        
 ************************************/        
 DCL TYGAR                    CHAR(03);        
 DCL TB_TYGAR(13)             CHAR(03);        
 DCL TB_SWGAR(13)             CHAR(01);        
 TB_TYGAR(1)  = 'BR1';        
 TB_TYGAR(2)  = 'IN1';        
 TB_TYGAR(3)  = 'VO1';        
 TB_TYGAR(4)  = 'DM1';        
 TB_TYGAR(5)  = 'DM2';        
 TB_TYGAR(6)  = 'DM3';        
 TB_TYGAR(7)  = 'DM4';        
 TB_TYGAR(8)  = 'BR2';        
 TB_TYGAR(9)  = 'IN2';        
 TB_TYGAR(10) = 'VO2';        
 TB_TYGAR(11) = 'MOB';        
 TB_TYGAR(12) = 'MO1';        
 TB_TYGAR(13) = 'MO2';        
 TB_SWGAR(*)  = '';        
 /*                 P O U R     A U T O       */        
 /*                 -------------------       */        
 DO I = 1 TO 10;        
   TYGAR = JA2F11.VEHIC.TBDEVGA(I).CDTYGAR;        
   SELECT(TYGAR);        
     WHEN('RCI') SCENARIO_6.SELECT_GAR.CDSERCI = 'Y';        
     WHEN('CAS') SCENARIO_6.SELECT_GAR.CDSECAS = 'Y';        
     WHEN('CA1') SCENARIO_6.SELECT_GAR.CDSECA1 = 'Y';        
     WHEN('ASS') SCENARIO_6.SELECT_GAR.CDSEASS = 'Y';        
     WHEN('BR1') TB_SWGAR(1) = 'Y';        
     WHEN('IN1') TB_SWGAR(2) = 'Y';        
     WHEN('VO1') TB_SWGAR(3) = 'Y';        
     WHEN('DM1') TB_SWGAR(4) = 'Y';        
     WHEN('DM2') TB_SWGAR(5) = 'Y';        
     WHEN('DM3') TB_SWGAR(6) = 'Y';        
     WHEN('DM4') TB_SWGAR(7) = 'Y';        
     WHEN('BR2') TB_SWGAR(8) = 'Y';        
     WHEN('IN2') TB_SWGAR(9) = 'Y';        
     WHEN('VO2') TB_SWGAR(10)= 'Y';        
     WHEN('MOB') TB_SWGAR(11)= 'Y';        
     WHEN('MO1') TB_SWGAR(12)= 'Y';        
     WHEN('MO2') TB_SWGAR(13)= 'Y';        
     OTHER;        
   END;        
 END;        
 IF TB_SWGAR(11) = 'Y'        
   THEN SCENARIO_6.SELECT_GAR.CDSEMOB = 'Y';        
 IF TB_SWGAR(12) = 'Y'        
   THEN SCENARIO_6.SELECT_GAR.CDSEMO1 = 'Y';        
         
 /* Voir si mini omnium        
     OU  si Omnium complete        
 */        
 SELECT;        
   WHEN(TB_SWGAR(6) = 'Y') ##################################################        
       SCENARIO_6.SELECT_GAR.CDTYPOM = '1';        
   WHEN(TB_SWGAR(7) = 'Y') ##################################################        
       SCENARIO_6.SELECT_GAR.CDTYPOM = '2';        
   WHEN(TB_SWGAR(4) = 'Y') ##################################################        
       SCENARIO_6.SELECT_GAR.CDTYPOM = '3';        
   WHEN(TB_SWGAR(5) = 'Y') ##################################################        
       SCENARIO_6.SELECT_GAR.CDTYPOM = '4';        
   OTHER;        
 END;        
 IF SCENARIO_6.SELECT_GAR.CDTYPOM = '3'        
  ! SCENARIO_6.SELECT_GAR.CDTYPOM = '4'        
   THEN SCENARIO_6.SELECT_GAR.CDNIVFR = SUBSTR(JA2F11.CDFRANS,2,1);        
         
 IF JWB001.CDTRACE >= 3 THEN        
   DO;        
     PUT SKIP LIST('SCENARIO_6.SELECT_GAR.CDSERCI=',        
                    SCENARIO_6.SELECT_GAR.CDSERCI);        
     PUT SKIP LIST('SCENARIO_6.SELECT_GAR.CDSECAS=',        
                    SCENARIO_6.SELECT_GAR.CDSECAS);        
     PUT SKIP LIST('SCENARIO_6.SELECT_GAR.CDSECA1=',        
                    SCENARIO_6.SELECT_GAR.CDSECA1);        
     PUT SKIP LIST('SCENARIO_6.SELECT_GAR.CDSEASS=',        
                    SCENARIO_6.SELECT_GAR.CDSEASS);        
     PUT SKIP LIST('SCENARIO_6.SELECT_GAR.CDTYPOM=',        
                    SCENARIO_6.SELECT_GAR.CDTYPOM);        
     PUT SKIP LIST('SCENARIO_6.SELECT_GAR.CDNIVFR=',        
                    SCENARIO_6.SELECT_GAR.CDNIVFR);        
     PUT SKIP LIST('SCENARIO_6.SELECT_GAR.CDSEMOB=',        
                    SCENARIO_6.SELECT_GAR.CDSEMOB);        
     PUT SKIP LIST('SCENARIO_6.SELECT_GAR.CDSEMO1=',        
                    SCENARIO_6.SELECT_GAR.CDSEMO1);        
   END;        
 /*                 P O U R     R E M O R Q U E     */        
 /*                 ---------------------------     */        
 IF SCENARIO_5.CDPOSRM ^= 'Y'        
   THEN RETURN;        
         
 /* Voir quelles garanties remorque ont {t{ chosies ? */        
 DO I = 1 TO 9;        
   TYGAR = JA2F11.REMORQUE.TBGARRE(I).CDTYGAR;        
   SELECT(TYGAR);        
     WHEN('RCI') SCENARIO_6.SELECT_GAR.CDRMRCI = 'Y';        
     WHEN('VOL') SCENARIO_6.SELECT_GAR.CDRMVO1 = 'Y';        
     WHEN('INC') SCENARIO_6.SELECT_GAR.CDRMIN1 = 'Y';        
     WHEN('BRI') SCENARIO_6.SELECT_GAR.CDRMBRI = 'Y';        
     WHEN('DM3') SCENARIO_6.SELECT_GAR.CDRMDM3 = 'Y';        
     WHEN('DM4') SCENARIO_6.SELECT_GAR.CDRMDM4 = 'Y';        
     OTHER;        
   END;        
 END;        
 IF JWB001.CDTRACE >= 3 THEN        
   DO;        
     PUT SKIP LIST('SCENARIO_6.SELECT_GAR.CDRMRCI=',        
                    SCENARIO_6.SELECT_GAR.CDRMRCI);        
     PUT SKIP LIST('SCENARIO_6.SELECT_GAR.CDRMVO1=',        
                    SCENARIO_6.SELECT_GAR.CDRMVO1);        
     PUT SKIP LIST('SCENARIO_6.SELECT_GAR.CDRMIN1=',        
                    SCENARIO_6.SELECT_GAR.CDRMIN1);        
     PUT SKIP LIST('SCENARIO_6.SELECT_GAR.CDRMBRI=',        
                    SCENARIO_6.SELECT_GAR.CDRMBRI);        
     PUT SKIP LIST('SCENARIO_6.SELECT_GAR.CDRMDM3=',        
                    SCENARIO_6.SELECT_GAR.CDRMDM3);        
     PUT SKIP LIST('SCENARIO_6.SELECT_GAR.CDRMDM4=',        
                    SCENARIO_6.SELECT_GAR.CDRMDM4);        
   END;        
         
     TRACE = 'GA20161 ===> ' !! 'END RET_CHOIX';        
         
     CALL PT;        
 $END RETROUVER_CHOIX;        
 /*---------------------------------------------- */        
         
 ATTRIB_USER_PASSW: PROC REORDER ;        
     TRACE = 'GA20161 ===> ' !! 'ATTRIB_UP';        
         
     CALL PT;        
 /***************************************************        
 * ATTRIBUE AUTOMATIQUE USERID PASSW POUR MY ETHIAS *        
 ***************************************************/        
 JS1D40 = '';        
 JS1D40.ALTPCB = ALTPCB;        
 JS1D40.INPUT.NOIDAFF = SPAVAR.IDENTI.NOIDAFF;        
 JS1D40.INPUT.CDKERNL = 'A2';        
 CALL XS1D40(IEU001,JWB001,JS1D40);        
 IF JWB001.CDRTPGM ^= ''        
  THEN DO;        
        ERREUR = ON;        
        IF JWB001.CDTRACE >= 3        
          THEN PUT SKIP EDIT('ERREUR XS1D40',JWB001.CDRTPGM)(A);        
        RETURN;        
       END;        
         
     TRACE = 'GA20161 ===> ' !! 'END ENREG_DEV_AFF';        
         
     CALL PT;        
 $END ATTRIB_USER_PASSW;        
         
 /*------------------------------------------------------------------*/        
 LECT_S1AFFIL: PROC REORDER ;        
     TRACE = 'GA20161 ===> ' !! 'LECT_S1AFFIL';        
         
     CALL PT;        
 /****************************************************/        
 /* LECTURE DU SIGNALETIQUE EN VUE DE REMPLIR LA SPA */        
 /****************************************************/        
 KS1005J.INPUT                 = '';        
 KS1005J.INPUT.AFFIL_I.NOIDAFF = SPA.NOIDAFF;        
 JWB001.LTNMMTH                = 'CONSULT_AFFIL';        
 JWB001.LSTCALL                = 'L_S1AFF';        
 CALL KS1005(IEU001,JWB001,KS1005J);        
 SELECT(JWB001.CDRTPGM);        
   WHEN ('')        
    DO;        
     SPA.LTNMAFF = KS1005J.OUTPUT.AFFIL_O.LTNMAFF;        
     SPA.CDRSAFF = KS1005J.OUTPUT.AFFIL_O.CDRSAFF;        
     SPA.CDLGEAF = KS1005J.OUTPUT.AFFIL_O.CDLGEAF;        
     SPA.CDSEXAF = KS1005J.OUTPUT.AFFIL_O.CDSEXAF;        
     SPA.NOHA1AF = KS1005J.OUTPUT.AFFIL_O.NOHA1AF;        
     SPA.NOHA2AF = KS1005J.OUTPUT.AFFIL_O.NOHA2AF;        
     SPA.NORULOC = KS1005J.OUTPUT.AFFIL_O.NORULOC;        
     SPA.DANAIAF = KS1005J.OUTPUT.AFFIL_O.DANAIAF;        
    END;        
   WHEN ('NOTFOUND') DO;        
     IF JWB001.CDTRACE >= 3 THEN        
       DO;        
         PUT SKIP LIST('Pas de signaletique pour afilie ',SPA.NOIDAFF);        
         PUT SKIP LIST('JWB001.CDRTPGM=',JWB001.CDRTPGM);        
       END;        
     RETURN;        
    END;        
   OTHER DO;        
          CALL ERR_DL1;        
          RETURN;        
         END;        
 END;        
         
 SPAVAR.IDENTI.NOIDAFF = SPA.NOIDAFF;        
 I = INDEX(SPA.LTNMAFF,' ');        
 SPAVAR.IDENTI.LTNMAFF = TRIM(SUBSTR(SPA.LTNMAFF,1,I-1));        
 SPAVAR.IDENTI.LTPRAFF = TRIM(SUBSTR(SPA.LTNMAFF,I+1,30-I));        
 SPAVAR.IDENTI.CDRSAFF = SPA.CDRSAFF;        
 INTER_F7 = SPA.DANAIAF; ######################        
 INTER_P7 = INTER_F7;        
 CALL F_CTRL_DA(INTER_C7,'1');        
 IF ERREUR THEN RETURN;        
 SPAVAR.IDENTI.DANAIAF = KGI011J_RO.JJMMAAAA_P8;        
 SPAVAR.IDENTI.CDSEXAF = SPA.CDSEXAF;        
 SPAVAR.IDENTI.CDLGEAF = SPA.CDLGEAF;        
 SPAVAR.IDENTI.NOHA1AF = SPA.NOHA1AF;        
 SPAVAR.IDENTI.NOHA2AF = SPA.NOHA2AF;        
         
 /* Lecture adresse affillie */        
         
 KS1005J.INPUT                 = '';        
 KS1005J.INPUT.ADAFF_I.NOIDAFF = SPA.NOIDAFF;        
 JWB001.LTNMMTH                = 'CONSULT_ADAFF';        
 JWB001.LSTCALL                = 'L_ADAFF';        
 CALL KS1005(IEU001,JWB001,KS1005J);        
 SELECT(JWB001.CDRTPGM);        
   WHEN ('')        
    DO;        
     SPA.LTRUEAF = KS1005J.OUTPUT.ADAFF_O.LTRUEAF;        
     SPA.CDCPOAF = KS1005J.OUTPUT.ADAFF_O.CDCPOAF;        
     SPA.LTLOCAF = KS1005J.OUTPUT.ADAFF_O.LTLOCAF;        
     SPA.CDPAYAF = 'B';        
    END;        
   WHEN ('NOTFOUND') DO;        
     IF JWB001.CDTRACE >= 3 THEN        
       DO;        
         PUT SKIP LIST('Pas de ADAFF pour affilie ',SPA.NOIDAFF);        
         PUT SKIP LIST('JWB001.CDRTPGM=',JWB001.CDRTPGM);        
       END;        
     JWB001.CDRTPGM =''; #############################################        
    END;        
   OTHER DO;        
          CALL ERR_DL1;        
          RETURN;        
         END;        
 END;        
 SPAVAR.IDENTI.LTRUEAF = SPA.LTRUEAF;        
 SPAVAR.IDENTI.LTLOCAF = SPA.LTLOCAF;        
 SPAVAR.IDENTI.CDCPOAF = SPA.CDCPOAF;        
         
 /*LECTURE S1CLPRO pour charger profession  #002 */        
 KS1005J.INPUT                 = '';        
 KS1005J.INPUT.CLPRO_I.NOIDCLI = SPA.NOIDAFF;        
 JWB001.LTNMMTH                = 'CONSULT_CLPRO';        
 JWB001.LSTCALL                = 'L_CLPRO';        
         
 CALL KS1005(IEU001,JWB001,KS1005J);        
 SELECT(JWB001.CDRTPGM);        
   WHEN ('')        
    DO;        
     SPAVAR.IDENTI.CDTYPRO =KS1005J.OUTPUT.CLPRO_O.CDTYPRO;        
     SPAVAR.IDENTI.CDGEPRO =KS1005J.OUTPUT.CLPRO_O.CDGEPRO;        
     /* ???????????????????????????????????        
        Attention, ici la profession pourrait etre differente de        
        celle du tableau 'succint' sur le web ???????????????        
     */        
    END;        
   WHEN ('NOTFOUND') DO;        
     IF JWB001.CDTRACE >= 3 THEN        
       DO;        
         PUT SKIP LIST('Pas de CLPRO pour affilie ',SPA.NOIDAFF);        
         PUT SKIP LIST('JWB001.CDRTPGM=',JWB001.CDRTPGM);        
       END;        
     JWB001.CDRTPGM =''; #############################################        
    END;        
   OTHER DO;        
          CALL ERR_DL1;        
          RETURN;        
         END;        
 END;        
         
 /*LECTURE S1CLCOM pour charger date de permis   */        
         
 KS1005J.INPUT     = '';        
 KS1005J.INPUT.CLCOM_I = '';        
 KS1005J.INPUT.CLCOM_I.NOIDCLI = SPA.NOIDAFF;        
         
 JWB001.LTNMMTH = 'CONSULT_CLCOM';        
 JWB001.LSTCALL = 'LECT_DAPERMI';        
         
 CALL KS1005(IEU001,JWB001, KS1005J);        
 SELECT(JWB001.CDRTPGM);        
   WHEN ('')        
    DO;        
     DATES1 = KS1005J.OUTPUT.CLCOM_O.DAPERMI;        
     IF DATES1 > 0 THEN        
       DO;        
         DATESR2 = DATESR1, BY NAME;        
         SELECT(DATESR1.S);        
           WHEN(0) DATESR2.AA = DATESR1.AA + 1800;        
           WHEN(1) DATESR2.AA = DATESR1.AA + 1900;        
           OTHER   DATESR2.AA = DATESR1.AA + 2000;        
         END;        
         SPAVAR.IDENTI.DADEPER = DATES2;        
       END;        
    END;        
   WHEN ('NOTFOUND') DO;        
     IF JWB001.CDTRACE >= 3 THEN        
       DO;        
         PUT SKIP LIST('Pas de CLCOM pour affilie ',SPA.NOIDAFF);        
         PUT SKIP LIST('Pas de CLCOM pour la Date permis !!!');        
         PUT SKIP LIST('JWB001.CDRTPGM=',JWB001.CDRTPGM);        
       END;        
     JWB001.CDRTPGM =''; #############################################        
    END;        
   OTHER DO;        
          CALL ERR_DL1;        
          RETURN;        
         END;        
 END;        
         
 /* appel service pour rechercher l'adresse e-mail */        
 JS1324         = '';        
 JS1324.PTRPCB.DS137PCB = GA2016J.DS137PCB;        
 JS1324.ENTREE.NOIDAFF  = SPA.NOIDAFF;        
         
 IF JWB001.CDTRACE >= 3 THEN        
   PUT SKIP LIST('JS1324.ENTREE.NOIDAFF=',JS1324.ENTREE.NOIDAFF);        
         
 CALL XS1483(JS1324,IEU001);        
 IF JWB001.CDTRACE >= 3 THEN        
   DO;        
     PUT SKIP LIST('JS1324.SORTIE.LTADEML=',JS1324.SORTIE.LTADEML);        
     PUT SKIP LIST('JS1324.RETURN_CODE.CDRTPGM=',        
                    JS1324.RETURN_CODE.CDRTPGM);        
   END;        
 SPAVAR.IDENTI.EMAILAF=JS1324.SORTIE.LTADEML;        
         
     TRACE = 'GA20161 ===> ' !! 'END LECT_S1AFFIL';        
         
     CALL PT;        
 $END LECT_S1AFFIL;        
         
 /*------------------------------------------------------------------*/        
 F_CTRL_DA: PROC(DATE_P,FORM_P) REORDER ;        
     TRACE = 'GA20161 ===> ' !! 'CTRL_DA';        
         
     CALL PT;        
 /******************        
 * VALIDATION DATE *        
 ******************/        
         
 DCL DATE_P       CHAR(*);        
 DCL FORM_P       CHAR(1);        
 KGI011J_RI     = '';        
 KGI011J_RO     = '';        
 JWB001.LTNMMTH     = 'VALID_DATE';  ###############################        
 KGI011J_RI.CDLGTRN = SPA.CDLGTRN;        
 SELECT(FORM_P);        
   WHEN('1') DO;        
     KGI011J_RI.CDFMTDA    = 'SAAMMJJ_C7';        
     KGI011J_RI.SAAMMJJ_C7 = DATE_P;        
   END;        
   WHEN('2') DO;        
     KGI011J_RI.CDFMTDA     = 'JJMMAAAA_C8';        
     KGI011J_RI.JJMMAAAA_C8 = DATE_P;        
   END;        
   OTHER;        
 END;        
         
 KGI011J_RI.AAPIVOT = 2000;        
 CALL KGI011(IEU001,JWB001,KGI011J);        
         
 IF JWB001.CDRTPGM ^= '' THEN        
   DO;        
     IF JWB001.CDTRACE >= 3 THEN        
       DO;        
         PUT SKIP LIST('VALID_DATE=',DATE_P);        
         PUT SKIP LIST('FORMAT    =',FORM_P);        
         PUT SKIP LIST('JWB001.CDRTPGM=',JWB001.CDRTPGM);        
         PUT SKIP EDIT('ERREUR INTERNE FORMATAGE DATE')(A);        
       END;        
     DATE_P = '00000000';        
     ERREUR = ON;        
   END;        
         
     TRACE = 'GA20161 ===> ' !! 'END CTRL_DA';        
         
     CALL PT;        
 $END F_CTRL_DA;        
         
 /*------------------------------------------------------------------*/        
 F_CALCUL_AGE: PROC(DATE_P,AGE_P) REORDER ;        
     TRACE = 'GA20161 ===> ' !! 'CALCUL_AGE';        
         
     CALL PT;        
         
 DCL DATE_P       PIC'(8)9';        
 DCL AGE_P        PIC'(4)9';        
 AGE_P = 0;        
 /******************        
 * VALIDATION DATE *        
 ******************/        
 KGI011J     = '';        
 KGI011J_RI  = '';        
 KGI011J_RI2 = '';        
 KGI011J_RO  = '';        
 KGI011J_RI.CDLGTRN = SPA.CDLGTRN;        
 KGI011J_RI.CDFMTDA = 'JJMMAAAA_P8';        
 KGI011J_RI.AAPIVOT = 2000;        
 KGI011J_RI.TBEGCOD(01) = '1'B;        
 KGI011J_RI.JJMMAAAA_P8  = DATE_P;        
 KGI011J_RI2.JJMMAAAA_P8 = #DATE_JJMMAAAA;        
 JWB001.LTNMMTH = 'DIFF_2_DATES_366';  ###############################        
 CALL KGI011(IEU001,JWB001,KGI011J);        
         
 SELECT(JWB001.CDRTPGM);        
   WHEN('') DO;        
              AGE_P = KGI011J_RO.NBAARES;        
            END;        
   OTHER DO;        
           IF JWB001.CDTRACE >= 3        
             THEN PUT SKIP LIST('Erreur KGI011 !!!',JWB001.CDRTPGM);        
           ERREUR =ON;        
         END;        
 END;        
         
     TRACE = 'GA20161 ===> ' !! 'END CALCUL_AGE';        
         
     CALL PT;        
 $END F_CALCUL_AGE;        
 /*------------------------------------------------------------------*/        
 LECT_VP_TYP: PROC(NOIDTYP_W) REORDER ;        
     TRACE = 'GA20161 ===> ' !! 'LECT_VP_TYP';        
         
     CALL PT;        
 /*********************************        
 * LIRE SEGMENT TYPE DANS EUROTAX *        
 *********************************/        
 DCL NOIDTYP_W            FIXED(7);        
 KA2151J.INPUT = '';        
 A2EUT13_R       = '';        
 A2EUT13.CDTYPTB = '13';        
 A2EUT13.NOIDMAR = SCENARIO_1.NOIDMAR;        
 A2EUT13.NOIDMOD = SCENARIO_1.NOIDMOD;        
 A2EUT13.NOIDTYP = NOIDTYP_W;        
         
 KA2151J_A2EUTAX_I = A2EUT13_R;        
 JWB001.LSTCALL = 'LECT_TAX.3';        
 JWB001.LTNMMTH = 'CONSULT_VP_TYP';        
 CALL KA2151(IEU001,JWB001,KA2151J);        
         
 IF JWB001.CDRTPGM ^= ''        
   THEN DO;        
          IF JWB001.CDTRACE >= 3 THEN        
            PUT SKIP LIST('Erreur lecture eurotax CONSULT_VP_TYP !!!');        
          ERREUR = ON;        
          RETURN;        
        END;        
   ELSE DO;        
          A2EUT13_R = KA2151J_A2EUTAX_O;        
        END;        
         
         
     TRACE = 'GA20161 ===> ' !! 'END LECT_VP_TYP';        
         
     CALL PT;        
 $END LECT_VP_TYP;        
 /*-----------------------------------------------*/        
 LECT_VP_MAK: PROC(NOIDMAR_W) REORDER ;        
     TRACE = 'GA20161 ===> ' !! 'LECT_VP_MAK';        
         
     CALL PT;        
 /*********************************        
 * LIRE SEGMENT TYPE DANS EUROTAX *        
 *********************************/        
 DCL NOIDMAR_W            FIXED(7);        
 KA2151J.INPUT = '';        
 A2EUT11_R       = '';        
 A2EUT11.CDTYPTB = '11';        
 A2EUT11.NOIDMAR = NOIDMAR_W;        
         
 KA2151J_A2EUTAX_I = A2EUT11_R;        
 JWB001.LSTCALL = 'LECT_MAR.3';        
 JWB001.LTNMMTH = 'CONSULT_VP_MAK';        
 CALL KA2151(IEU001,JWB001,KA2151J);        
         
 IF JWB001.CDRTPGM ^= ''        
   THEN DO;        
          /*        
          PUT SKIP LIST('Erreur lecture eurotax CONSULT_VP_TYP !!!');        
          ERREUR = ON;        
          RETURN;        
          */        
          A2EUT11_R = '';        
          JWB001.CDRTPGM = '';        
        END;        
   ELSE DO;        
          A2EUT11_R = KA2151J_A2EUTAX_O;        
        END;        
         
         
     TRACE = 'GA20161 ===> ' !! 'END LECT_VP_MAK';        
         
     CALL PT;        
 $END LECT_VP_MAK;        
 /*------------------------------------------------------------------*/        
 LECT_LIBTXT: PROC(TXT_W) REORDER ;        
     TRACE = 'GA20161 ===> ' !! 'LECT_LIBTXT';        
         
     CALL PT;        
 /**********************************        
 * LIRE SEGMENT TEXTE DANS EUROTAX *        
 **********************************/        
 DCL TXT_W            CHAR(08);        
 KA2231J.INPUT = '';        
         
 KA2231J_I01.NOIDTXT = TXT_W;        
 JWB001.LSTCALL = 'LECT_LIBTXT.1';        
 JWB001.LTNMMTH = 'CONSULT_TXT';        
 CALL KA2231(IEU001,JWB001,KA2231J);        
         
 IF JWB001.CDRTPGM ^= ''        
   THEN DO;        
          IF JWB001.CDTRACE >= 3 THEN        
            PUT SKIP LIST('Erreur lecture eurotax CONSULT_TXT !!!');        
          ERREUR = ON;        
          RETURN;        
        END;        
         
     TRACE = 'GA20161 ===> ' !! 'END LECT_LIBTXT';        
         
     CALL PT;        
 $END LECT_LIBTXT;        
 /*------------------------------------------------------------------*/        
 LECT_TXTOP: PROC(NOTXT_W) REORDER ;        
     TRACE = 'GA20161 ===> ' !! 'LECT_TXTOP';        
         
     CALL PT;        
 /*********************        
 * LIRE TEXTE OPTIONS *        
 *********************/        
 DCL NOTXT_W              PIC'(7)9';        
 KA2151J.INPUT = '';        
 A2EUT17_R       = '';        
 A2EUT17.CDTYPTB = '17';        
 A2EUT17.NOIDEQT = NOTXT_W;        
         
 KA2151J_A2EUTAX_I = A2EUT17_R;        
 JWB001.LSTCALL = 'LECT_TXTOP.1';        
 JWB001.LTNMMTH = 'CONSULT_VP_TXT';        
 CALL KA2151(IEU001,JWB001,KA2151J);        
         
 IF JWB001.CDRTPGM ^= ''        
   THEN DO;        
          IF JWB001.CDTRACE >= 3 THEN        
          PUT SKIP LIST('Erreur lecture eurotax CONSULT_VP_EQT !!!');        
          ERREUR = ON;        
          RETURN;        
        END;        
   ELSE DO;        
          A2EUT17_R = KA2151J_A2EUTAX_O;        
        END;        
         
         
     TRACE = 'GA20161 ===> ' !! 'END LECT_TXTOP';        
         
     CALL PT;        
 $END LECT_TXTOP;        
         
 /*-----------------------------------------------------------------*/        
 F_MTCTF: PROC(MT_W,DC_W) RETURNS(FIXED(15));        
             TRACE = 'GA20161 ===> ' !! 'F_MTCTF';        
         
             CALL PT;        
 /***********************************        
 * CONVERSION MONTANT CHAR EN FIXED *        
 * RETURN : MONTANT EN FIXED        *        
 ***********************************/        
 DCL MT_W CHAR(*); ################################        
 DCL DC_W PIC '9';   ##################################        
         
 KGI012J = '';        
 KGI012J_RI = '';        
 KGI012J_RO = '';        
 KGI012J_RI.CDFMTMT  = 'LTIN_C25';        
 KGI012J_RI.CDDVTRN  = IEU001.CDDVTRN;        
 KGI012J_RI.CDLGTRN  = SPA.CDLGTRN;        
 KGI012J_RI.LTIN_C25 = MT_W;        
 KGI012J_RI.NBDECIN  = DC_W;        
 JWB001.LTNMMTH = 'VALID_MONTANT';        
 JWB001.LSTCALL = 'FMTCF.1';        
 KGI012J_RI.TBEGCOD(1) = ON;###########################        
 KGI012J_RI.TBEGCOD(2) = ON;#############################################        
 KGI012J_RI.TBEGCOD(3) = ON;#############################################        
 KGI012J_RI.TBEGCOD(5) = ON;#############################################        
 KGI012J_RI.TBEGCOD(7) = ON;#############################################        
         
 CALL KGI012(IEU001,JWB001,KGI012J);        
         
 SELECT(JWB001.CDRTPGM);        
   WHEN('') RETURN(KGI012J_RO.MTMNT_F15);        
   OTHER DO;        
          IF JWB001.CDTRACE >= 3 THEN        
            PUT SKIP EDIT('ERREUR INTERNE CONVERSION MONTANT')(A);        
         ERREUR = ON;        
   END;        
 END;        
         
 RETURN(0);        
         
     TRACE = 'GA20161 ===> ' !! 'END F_MTCTF';        
         
     CALL PT;        
 $END F_MTCTF;        
         
 /*-----------------------------------------------*/        
 LEC_TAB:PROC(NOIDTAB_P,CLETAB_P,TBSMTAB_P);        
 TRACE = 'GA20161 ===> ' !! 'LEC_TAB';        
         
 CALL PT;        
 /*******************************/        
 /* EXPLORATION TABLES DIVERSES */        
 /*******************************/        
 DCL FCT        CHAR(4);        
 DCL NOIDTAB_P  CHAR(*);        
 DCL CLETAB_P   CHAR(*);        
 DCL TBSMTAB_P  PTR;        
 DCL NBITEXP_P  FIXED (2);        
         
 IF JWB001.CDTRACE > 2 THEN        
 DO;        
 PUT SKIP DATA(NOIDTAB_P,CLETAB_P);        
 END;        
         
 JWB001.CDRTPGM = '';        
         
 KGI006J.INPUT = '';        
         
 KGI006J.PTRPCB.DEU02PCB  = DEU02PCB;        
 KGI006J.PTRPCB.DBTABPCB  = DC105PCB;        
         
 KGI006J.INPUT.TBTXCOD         = NOIDTAB_P;        
 KGI006J.INPUT.TBTXA01         = CLETAB_P;        
 KGI006J.INPUT.CDDFSEG         = 'CSMMAIN0';        
 KGI006J.INPUT.GITAB           = TBSMTAB_P;        
 KGI006J.OUTPUT.GITAB          = TBSMTAB_P;        
 KGI006J.DBTABLE.LTSGTAB       = 'C1TAB';        
 KGI006J.DBTABLE.LTSGSTAB      = 'C1STAB';        
 KGI006J.DBTABLE.CDDFTAB       = 'CGIW0040';        
         
 JWB001.LSTCALL                = 'READ_TAB.1';        
 JWB001.LTNMMTH                = 'READ_TAB';        
         
 CALL KGI006(IEU001,JWB001, KGI006J);        
         
 /*-------------------------------------------------------------------*/        
 TRACE = 'GA20161 ===> ' !! 'END LEC_TAB';        
         
 CALL PT;        
 $END LEC_TAB;        
         
 /*------------------------------------------------------------------*/        
 /* --------------- */        
 /*     INCLUDE     */        
 /* --------------- */        
         
 /* ------------------------------------------------------------------*/        
 $$END GA20161;        

 GA20166:PROC OPTIONS(MAIN)(IEU001,JWB001) OPTIONS(FETCHABLE) REORDER;        
 /********************************************************************/        
 /* GA20166                                                          */        
 /*                                                                  */        
 /*          DEVIS AUTO INTERNET ETHIAS / MY ETHIAS / AFFINITY       */        
 /*                                                                  */        
 /*                                                                  */        
 /*               SCENARIO 6 : CALCUL ET AFFICHAGE DEVIS AUTO        */        
 /********************************************************************/        
 /* EURO=YES AUTHOR=TDMKIP/KIPS C.       INTERV= KIPS C.      .......*/        
 /*                                                                  */        
 /********************************************************************/        
 /*  -------------------------------                                 */        
 /*  -  M O D I F I C A T I O N S  -                                 */        
 /*------------------------------------------------------------------*/        
 /* TDMKIP ! 27/08/03 ! CREATION DU PROGRAMME                        */        
 /* TDMDIN ! 12/12/05 ! Ajout du CDOPTRN = A2ADS pour appel Self     */        
 /* TDMTHO ! 17/05/06 ! Ajout routine pour relance automatique       */        
 /* TDMTHO ! 13/12/06 ! Suppression commentaire et re utilisation    */        
 /* ...    ! ...      ! de la routine XS1B53 + re adaptation XA2F11  */        
 /* TDMTHO ! 14/12/06 ! Ajout trace suite a un abend                 */        
 /* TDMTHO ! 20/02/08 ! Ajout fonctionnalit{ DOC1                    */        
 /* TDMSOX ! 10/04/08 ! Ajout MOBILITE PLUS                          */        
 /* TDMSOX ! 24/04/08 ! Ajout Omnium -10.000 km                      */        
 /* TDMTHO ! 10/09/08 ! Ajout DSMB9 pour code a barre devis DOC1     */        
 /* TDMKIP ! 29/10/08 ! Attrib. Userid et password pour My Ethias    */        
 /* TDMDXH ! 05/11/08 ! ADAPTATION TABLE 500                         */        
 /* TDMTHO ! 27/11/08 ! XA2N25 en routine FETCHABLE                  */        
 /* TDMKIP ! 09/01/09 ! PROMO RC pour salon auto 2009                */        
 /* TDMKIP ! 10/03/09 ! Nouveaux tarifs => ajout CDIDTRF='1'         */        
 /*        !          ! Tarifs 2010 !!!! Mettre CDIDTRF = 0          */        
 /* TDMKIP ! 02/04/09 ! Pas de mobility si pas 21 ans                */        
 /* TDMKIP ! 09/11/09 ! Promo permanente                             */        
 /* TDMKIP ! 11/12/09 ! Mon site Ethias                              */        
 /* TDMKIP ! 02/03/10 ! Ajout infos affilie dans le devis SMDV...    */        
 /* TDMSOX ! 03/06/10 ! Nouveaux tarifs auto WE096               #002*/        
 /********************************************************************/        
 /* On peut venir dans le sc{nario 6 avec diff{rents CDOPTRN         */        
 /* A2DVI : devis dans Ethias (on n'est pas encore identifi{)        */        
 /* A2DVE : devis dans My Ethias (on ne doit pas aller dans identif) */        
 /*                                                                  */        
 /* A2SOU : devis dans Ethias,My Ethias,Mon site Ethias              */        
 /*         Retour par mail apres identification complete            */        
 /*         et en vue de souscrire avec affilie pas encore connu     */        
 /* A2RDV : Relance : on clic dans le mail 'votre devis'(A2RIN+A2RDV)*/        
 /*         On peut revenir sur page 6 avec CDTYPOP = S pour         */        
 /*         souscrire ou CDTYPOP = A pour retour au devis            */        
 /* A2CDV : dans My Ethias : afficher un devis                       */        
 /*         On vient du scenario 1 avec CDTYPOP = ''                 */        
 /*         On peut revenir sur page 6 avec CDTYPOP = S pour         */        
 /*         souscrire ou CDTYPOP = A pour retour au devis            */        
 /* A2MSE : devis dans Ethias mais on revient dans Mon site ethias   */        
 /*         pour afficher le resultat. On n'etait pas revenu de      */        
 /*         ID Light car pas encore affilie                          */        
 /* A2M20 : Site moins20% (idem A2DVI)                               */        
 /*                                                                  */        
 /* A2EDV : E-mail  : on clic dans le mail 'votre devis'(A2RIN+A2EDV)*/        
 /*                   mais pas le mail 'relance' !!!                 */        
 /*         On peut revenir sur page 6 avec CDTYPOP = S pour         */        
 /*         souscrire ou CDTYPOP = A pour retour au devis            */        
 /*                                                                  */        
 /* PS : Il est possible de revenir au scenario 6 en remontant dans  */        
 /*    les etapes !! La page E (A2CDV,A2PDV,A2RDV,A2EDV)    contient */        
 /*    un bouton 'retour' qui permet de revenir sur la page 'Devis'  */        
 /*    au scenario 6 avec CDTYPOP = 'V'                              */        
 /*                                                                  */        
 /********************************************************************/        
         
         
 DCL ABS       BUILTIN;        
 DCL ADDR      BUILTIN;        
 DCL CEIL      BUILTIN;        
 DCL DATE      BUILTIN;        
 DCL DATETIME  BUILTIN;        
 DCL DIM       BUILTIN;        
 DCL FLOOR     BUILTIN;        
 DCL INDEX     BUILTIN;        
 DCL LENGTH    BUILTIN;        
 DCL LOW       BUILTIN;        
 DCL MAX       BUILTIN;        
 DCL MIN       BUILTIN;        
 DCL MOD       BUILTIN;        
 DCL NULL      BUILTIN;        
 DCL ONCODE    BUILTIN;        
 DCL ONLOC     BUILTIN;        
 DCL REPEAT    BUILTIN;        
 DCL STG       BUILTIN;        
 DCL SUBSTR    BUILTIN;        
 DCL TIME      BUILTIN;        
 DCL TRANSLATE BUILTIN;        
 DCL UNSPEC    BUILTIN;        
 DCL VERIFY    BUILTIN;        
 /* TDMOHL 03/05/2005 AJOUT DE ONSOURCE, PLIRETC ET PLIRETV */        
 DCL ONSOURCE  BUILTIN;        
 DCL PLIRETC   BUILTIN;        
 DCL PLIRETV   BUILTIN;        
         
 /* TDMSLE : 041103 */        
 DCL CENTER    BUILTIN;        
 DCL LEFT      BUILTIN;        
 DCL RIGHT     BUILTIN;        
 DCL TRIM      BUILTIN;        
 DCL UPPERCASE BUILTIN;        
 DCL PTRADD    BUILTIN;        
 /* TDMSLE FIN : 041103 */        
         
 /* TDMSLE : 041103 -                                         */        
 /*  MISE EN COMMENTAIRE CAR IL FAUT UTILISER 'TRIM' DE VAPLI */        
 /* DCL TRIM      EXT ENTRY RETURNS(CHAR(133) VAR BYVALUE);   */        
 /* DCL LTRIM     EXT ENTRY RETURNS(CHAR(133) VAR BYVALUE);   */        
 /* DCL RTRIM     EXT ENTRY RETURNS(CHAR(133) VAR BYVALUE);   */        
 /* TDMSLE FIN : 041103                                       */        
         
 /*--------------------------------------------------------- ATTRINIT */        
  /* Enterprise PL1*/        
 DCL ATTR1 CHAR(2) VALUE('00C8'X); ##############################        
 DCL ATTR2 CHAR(2) VALUE('00C9'X); ############################        
 DCL ATTR3 CHAR(2) VALUE('00F1'X); ###########################        
 DCL ATTR4 CHAR(2) VALUE('00F9'X); ##############################        
 DCL ATTR5 CHAR(2) VALUE('00E1'X); #######################        
 DCL ATTR6 CHAR(2) VALUE('00F0'X); #############################        
 DCL ATTR7 CHAR(2) VALUE('00F8'X); ################################        
 DCL ATTR8 CHAR(2) VALUE('00D9'X); ################################        
         
 DCL NUMERR_E CHAR(2) VALUE('C0D9'X); ################################        
 DCL ALPERR_E CHAR(2) VALUE('C0C9'X); ################################        
 DCL NUMCSR_E CHAR(2) VALUE('C0D1'X); ################################        
 DCL ALPCSR_E CHAR(2) VALUE('C0C1'X); ################################        
 DCL NUMDEP_E CHAR(2) VALUE('00D1'X); ################################        
 DCL ALPDEP_E CHAR(2) VALUE('00C1'X); ################################        
 DCL NODCSR_E CHAR(2) VALUE('C0C5'X); ################################        
 DCL NODDEP_E CHAR(2) VALUE('00C5'X); ################################        
 DCL NODPRT_E CHAR(2) VALUE('00E5'X); ################################        
         
 DCL HEX00 CHAR(1)   VALUE('00'X);        
 DCL HEX02 CHAR(1)   VALUE('02'X);   ################################        
 DCL HEXFF CHAR(1)   VALUE('FF'X);        
 DCL HEX3F CHAR(1)   VALUE('3F'X);        
 DCL HEX15 CHAR(1)   VALUE('15'X);  ##################        
 DCL HEX4A CHAR(1)   VALUE('4A'X);  ###################        
 DCL HEX403F CHAR(2) VALUE('403F'X);        
 DCL HEX40 CHAR(1)   VALUE('40'X);        
 DCL HEX4B CHAR(1)   VALUE('4B'X);        
 DCL SCA1  CHAR(2)   VALUE('0080'X); #########################        
 DCL SCA2  CHAR(2)   VALUE('00C0'X); ##################################        
 DCL SCA3  CHAR(2)   VALUE('00A0'X); ############################################        
 DCL SCA4  CHAR(2)   VALUE('0090'X); ############################        
 /*----------------------------------------------------- END ATTRINIT */        
 /* -------------------------------------------------------- ATTRIMOD */        
 /* exemples:   ZONE_A   CHAR(6)                                      */        
 /*  reverse:   ZONE_A = '  '!!REV_E;                                 */        
 /*  neutral:   ZONE_A = '  '!!NEU_E;                                 */        
 /*  rev+neu:   ZONE_A = '  '!!REV_E!!NEU_E;                          */        
 /* sans effet: ZONE_A = SEF_E;                                       */        
 /* ----------- 1 Commentaire = 1 ligne ---------------- JCC 09-12-02 */        
         
         
 DCL    SEF_E   CHAR(6)  STATIC INIT('');  ##########################        
        SEF_E  = LOW(LENGTH(SEF_E));        
 DCL    BLI_E   CHAR(2)  STATIC ,     #############################        
        REV_E   CHAR(2)  STATIC ,     #############################        
        UND_E   CHAR(2)  STATIC ;     #############################        
 UNSPEC(BLI_E) = '1100000111110001'B;        
 UNSPEC(REV_E) = '1100000111110010'B;        
 UNSPEC(UND_E) = '1100000111110100'B;        
 DCL    BLU_E   CHAR(2)  STATIC ,     #############################        
        RED_E   CHAR(2)  STATIC ,     #############################        
        PIN_E   CHAR(2)  STATIC ,     #############################        
        GRN_E   CHAR(2)  STATIC ,     #############################        
        TRQ_E   CHAR(2)  STATIC ,     #############################        
        YEL_E   CHAR(2)  STATIC ,     #############################        
        NEU_E   CHAR(2)  STATIC ;     #############################        
 UNSPEC(BLU_E) = '1100001011110001'B;        
 UNSPEC(RED_E) = '1100001011110010'B;        
 UNSPEC(PIN_E) = '1100001011110011'B;        
 UNSPEC(GRN_E) = '1100001011110100'B;        
 UNSPEC(TRQ_E) = '1100001011110101'B;        
 UNSPEC(YEL_E) = '1100001011110110'B;        
 UNSPEC(NEU_E) = '1100001011110111'B;        
 /*----------------------------------------------------- END ATTRIMOD */        
         
 /*---------------------------------------------------------- $DATTIM */        
 /*      Date & Heure ordinateur sous toutes les formes     */        
 /*     ------------------------------------------------    */        
 /*     ->     call $Dates_Times pour rafraichir      <-    */        
 /* - - - - - - - - - - - - - - - - - - - - - - - - - - - - */        
 DCL $DATE_TIME          CHAR(17) INIT(''); #################################        
 DCL $DATE_MSK           CHAR(17);        
 DCL $DATE_HEURE         CHAR(18) INIT(''); #################################        
 DCL 1 $DATE_TIME_W BASED(ADDR($DATE_TIME)),        
      2 S    CHAR(1),        
      2 A    CHAR(1),        
      2 AA   CHAR(2),        
      2 MM   CHAR(2),        
      2 JJ   CHAR(2),        
      2 HH   CHAR(2),        
      2 MI   CHAR(2),        
      2 SS   CHAR(2),        
      2 CCC  CHAR(3);        
         
 DCL $DATE_AAAAMMJJ      CHAR(08);    ####################################        
 DCL #DATE_AAAAMMJJ      PIC'(08)9'        
      BASED(ADDR($DATE_AAAAMMJJ));        
 DCL $DATE_AAMMJJ        CHAR(06);    ####################################        
 DCL #DATE_AAMMJJ        PIC'(06)9'        
      BASED(ADDR($DATE_AAMMJJ));        
 DCL $DATE_SAAMMJJ       CHAR(07);    ####################################        
 DCL #DATE_SAAMMJJ       PIC'(07)9'        
      BASED(ADDR($DATE_SAAMMJJ));        
 DCL $DATE_JJMMAAAA      CHAR(08);    ####################################        
 DCL #DATE_JJMMAAAA      PIC'(08)9'        
      BASED(ADDR($DATE_JJMMAAAA));        
 DCL $DATE_JJMMAA        CHAR(06);    ####################################        
 DCL #DATE_JJMMAA        PIC'(06)9'        
      BASED(ADDR($DATE_JJMMAA));        
         
 DCL $DATE_AAAA          CHAR(04);    ####################################        
 DCL #DATE_AAAA          PIC'(04)9'        
      BASED(ADDR($DATE_AAAA));        
 DCL $DATE_AA            CHAR(02);    ####################################        
 DCL #DATE_AA            PIC'(02)9'        
      BASED(ADDR($DATE_AA));        
 DCL $DATE_S             CHAR(01);    ####################################        
 DCL #DATE_S             PIC'(01)9'        
      BASED(ADDR($DATE_S));        
 DCL $DATE_SAA           CHAR(03);    ####################################        
 DCL #DATE_SAA           PIC'(03)9'        
      BASED(ADDR($DATE_SAA));        
         
 DCL $DATE_MM            CHAR(02);    ####################################        
 DCL #DATE_MM            PIC'(02)9'        
      BASED(ADDR($DATE_MM));        
 DCL $DATE_JJ            CHAR(02);    ####################################        
 DCL #DATE_JJ            PIC'(02)9'        
      BASED(ADDR($DATE_JJ));        
         
 DCL $TIME_HHMMSSCCC     CHAR(09);    ####################################        
 DCL #TIME_HHMMSSCCC     PIC'(09)9'        
      BASED(ADDR($TIME_HHMMSSCCC));        
 DCL $TIME_HHMMSS        CHAR(06);    ####################################        
 DCL #TIME_HHMMSS        PIC'(06)9'        
      BASED(ADDR($TIME_HHMMSS));        
 DCL $TIME_HHMM          CHAR(04);    ####################################        
 DCL #TIME_HHMM          PIC'(04)9'        
      BASED(ADDR($TIME_HHMM));        
 DCL $TIME_HH            CHAR(02);    ####################################        
 DCL #TIME_HH            PIC'(02)9'        
      BASED(ADDR($TIME_HH));        
 DCL $TIME_MM            CHAR(02);    ####################################        
 DCL #TIME_MM            PIC'(02)9'        
      BASED(ADDR($TIME_MM));        
         
 DCL $DATE_JJ_MM_AAAA    CHAR(10);    ####################################        
 DCL $DATE#JJ#MM#AAAA    CHAR(10);    ####################################        
 DCL $DATE_JJ_MM_AA      CHAR(08);    ####################################        
         
 DCL $TIME_HH_MM_SS_CCC  CHAR(12);    ####################################        
 DCL $TIME_HH_MM_SS      CHAR(08);    ####################################        
 DCL $TIME#HH#MM#SS      CHAR(08);    ####################################        
 DCL $TIME_HH_MM         CHAR(05);    ####################################        
         
 DCL $TIME_STAMP         CHAR(26);    ###########################################        
 DCL $TIME_STAMP_PL1     CHAR(20);    ###########################################        
 /* - - - - - - - - - - - - - - - - - - - - - - - - - - - - */        
 $DATE_MSK = 'ABCDEFGHIJKLMNOPQ';        
         
 CALL $DATES_TIMES;        
         
 $DATES_TIMES: PROC;        
 $DATE_TIME      = DATETIME();        
 $DATE_HEURE     = $DATE_TIME_W.JJ!!'/'!!$DATE_TIME_W.MM!!'/'!!        
                   $DATE_TIME_W.S!!$DATE_TIME_W.A!!$DATE_TIME_W.AA!!        
                   ' - '!!$DATE_TIME_W.HH!!':'!!$DATE_TIME_W.MI;        
 $DATE_AAAAMMJJ     = $DATE_TIME_W.S!!$DATE_TIME_W.A!!$DATE_TIME_W.AA!!        
                      $DATE_TIME_W.MM!!$DATE_TIME_W.JJ;        
 $DATE_JJMMAAAA     = $DATE_TIME_W.JJ!!$DATE_TIME_W.MM!!$DATE_TIME_W.S!!        
                      $DATE_TIME_W.A!!$DATE_TIME_W.AA;        
 $DATE_AAMMJJ       = $DATE_TIME_W.AA!!$DATE_TIME_W.MM!!$DATE_TIME_W.JJ;        
 $DATE_JJMMAA       = $DATE_TIME_W.JJ!!$DATE_TIME_W.MM!!$DATE_TIME_W.AA;        
 $DATE_SAAMMJJ      = $DATE_TIME_W.S!!$DATE_TIME_W.AA!!$DATE_TIME_W.MM!!        
                      $DATE_TIME_W.JJ;        
 $DATE_AAAA         = $DATE_TIME_W.S!!$DATE_TIME_W.A!!$DATE_TIME_W.AA;        
 $DATE_AA           = $DATE_TIME_W.AA;        
 $DATE_S            = $DATE_TIME_W.S;        
 $DATE_SAA          = $DATE_TIME_W.S!!$DATE_TIME_W.AA;        
 $DATE_MM           = $DATE_TIME_W.MM;        
 $DATE_JJ           = $DATE_TIME_W.JJ;        
 $DATE_JJ_MM_AAAA   = $DATE_TIME_W.JJ!!'/'!!        
                      $DATE_TIME_W.MM!!'/'!!$DATE_TIME_W.S!!        
                      $DATE_TIME_W.A!!$DATE_TIME_W.AA;        
 $DATE#JJ#MM#AAAA   = $DATE_TIME_W.JJ!!'.'!!        
                      $DATE_TIME_W.MM!!'.'!!$DATE_TIME_W.S!!        
                      $DATE_TIME_W.A!!$DATE_TIME_W.AA;        
 $DATE_JJ_MM_AA     = $DATE_TIME_W.JJ!!'/'!!        
                      $DATE_TIME_W.MM!!'/'!!$DATE_TIME_W.AA;        
 $TIME_HHMMSSCCC    = $DATE_TIME_W.HH!!$DATE_TIME_W.MI!!        
                      $DATE_TIME_W.SS!!$DATE_TIME_W.CCC;        
 $TIME_HHMMSS       = $DATE_TIME_W.HH!!$DATE_TIME_W.MI!!        
                      $DATE_TIME_W.SS;        
 $TIME_HHMM         = $DATE_TIME_W.HH!!$DATE_TIME_W.MI;        
 $TIME_HH           = $DATE_TIME_W.HH;        
 $TIME_MM           = $DATE_TIME_W.MI;        
 $TIME_HH_MM_SS_CCC = $DATE_TIME_W.HH!!':'!!$DATE_TIME_W.MI!!':'!!        
                      $DATE_TIME_W.SS!!':'!!$DATE_TIME_W.CCC;        
 $TIME_HH_MM_SS     = $DATE_TIME_W.HH!!':'!!$DATE_TIME_W.MI!!':'!!        
                      $DATE_TIME_W.SS;        
 $TIME#HH#MM#SS     = $DATE_TIME_W.HH!!'.'!!$DATE_TIME_W.MI!!'.'!!        
                      $DATE_TIME_W.SS;        
 $TIME_HH_MM        = $DATE_TIME_W.HH!!':'!!$DATE_TIME_W.MI;        
 $TIME_STAMP        = $DATE_TIME_W.S!!$DATE_TIME_W.A!!$DATE_TIME_W.AA!!        
                      '-'!!$DATE_TIME_W.MM!!'-'!!$DATE_TIME_W.JJ!!'-'!!        
                      $DATE_TIME_W.HH!!'.'!!$DATE_TIME_W.MI!!'.'!!        
                      $DATE_TIME_W.SS!!'.'!!$DATE_TIME_W.CCC!!'000';        
 $TIME_STAMP_PL1    = $DATE_TIME_W.S!!$DATE_TIME_W.A!!$DATE_TIME_W.AA!!        
                      $DATE_TIME_W.MM!!$DATE_TIME_W.JJ!!        
                      $DATE_TIME_W.HH!!$DATE_TIME_W.MI!!        
                      $DATE_TIME_W.SS!!$DATE_TIME_W.CCC!!'000';        
 $END $DATES_TIMES;        
 /*------------------------------------------------------ END $DATTIM */        
         
 /********************************************        
 * DECLARATION DES PARAMETRES DE LA ROUTINE  *        
 ********************************************/        
 /*********************************************************************/        
 /*                                                                   */        
 /*         INTERFACE DE COMMUNICATION AVEC BEU001                    */        
 /*         ======================================                    */        
 /*                                                                   */        
 /* USAGE :                                                           */        
 /* CALL BEU001(IEU001,COUNT,FUNCT,DATAPCB,IOAREA,                    */        
 /*             SSA1, SSA2, SSA3, SSA4, SSA5, SSA6, SSA7);            */        
 /*********************************************************************/        
 /* MODE CONVERSION :                                                 */        
 /*                                                                   */        
 /* CALL BEU001(IEU001,THREE,'GCV',DATAPCB,IOAREA);                   */        
 /*                                                                   */        
 /*********************************************************************/        
 /*                                                                   */        
 /* PROCEDURE DE COMPILATION : TDMFOG.LIB.CNTL(FETCH)                 */        
 /* MODULE A TRANSFERER PAR L'EQUIPE SYSTEME : FEUT.T.LOAD(BEU001)    */        
 /*                                                                   */        
 /*********************************************************************/        
 /* DESCRIPTION DES MESSAGES D'ERREURS : CDRTPGM                      */        
 /* -----------------------------------                               */        
 /* DB : PROBLEME BASE DE DONNEES : VOIR LE PCB DATA                  */        
 /* 01 : COEFFICIENT DE CONVERSION EURO --> FB ERRONE                 */        
 /* 02 : PARAM. CODE DEVISE DIFFERENT DE 'F' ET 'E'                   */        
 /* 03 : PARAM. CODE PAGE DIFFERENT DE '500' ET '274'                 */        
 /* 04 : PARAM. CODE USAGE APPLICATION DIFF. DE : 3 = 3270            */        
 /*                                        P = HOST PRINTER           */        
 /*                                        L = LOCAL PRINTER          */        
 /*                                        Q = MQSERIES               */        
 /* 05 : CODE DEVISE MAL INSTALLE DANS LE DICTIONNAIRE                */        
 /* 06 : CODE PAGE MAL INSTALLE DANS LE DICTIONNAIRE                  */        
 /* 07 : CODE VERSION DE LA DB MAL INSTALLE DANS LE DICTIONNAIRE      */        
 /* 08 : DESCRIPTION FORME EXTERNE DU SEGMENT ABSENTE DU DICTIONNAIRE */        
 /* 09 : ERREUR BASE DE DONNEE SUR LA DB DICTIONNAIE                  */        
 /* 10 : LONGUEUR D'ATTRIBUT MODIFIEE POUR FORMAT TYPE : BF/BE/DE     */        
 /* 11 : LE FORMAT DE MONTANT DEVISE OU DATE  <> DZ/DF/BF             */        
 /* 12 : EN ISRT, REPL, LA DATE DOIT OBLIG. ETRE EXPRIMEE EN SAAMMJJ  */        
 /* 13 : FORMAT DE DONNEE NON RECONNU                                 */        
 /* 14 : LONGUEUR EN BYTE INADEQUATE POUR UN TYPE BF                  */        
 /* 15 : LONGUEUR TYPE BF <> 2/4                                      */        
 /* 16 : LONGUEUR TYPE DE/BE <> 4/8                                   */        
 /* 17 : EN ISRT, REPL, LA D. COMPLEM. DOIT ETRE EXPRIMEE EN SAAMMJJ  */        
 /* 18 : MONTANT AU FORMAT ZONED DECIMAL NON NUMERIQUE EN LECTURE     */        
 /* 19 : MONTANT AU FORMAT PACKED DECIMAL NON NUMERIQUE EN LECTURE    */        
 /* 20 : MONTANT AU FORMAT ZONED DECIMAL NON NUMERIQUE EN M A J       */        
 /* 21 : MONTANT AU FORMAT PACKED DECIMAL NON NUMERIQUE EN M A J      */        
 /* 22 : COUNT < 2 OU > 10                                            */        
 /* 23 : FONCTION NON IMPLEMENTEE CAR NON SPECIFIQUE A DL1            */        
 /* 24 : FONCTION INCONNUE                                            */        
 /* 25 : NOMBRE D'ATTRIBUTS DU SEGMENT DEPASSANT LE MAXIMUM AUTORISE  */        
 /* 26 : LONGUEUR DE RUBRIQUE MAL DEFINIE AU DICTIONNAIRE             */        
 /* 27 : COUNT PARAMETER > 7                                          */        
 /* 28 : PROTOCOLE EURO POSTPOSE JUSQU'A LA CONVERSION DE LA CAISSE   */        
 /* 29 : PARAMETRE SOCIETE NON RECONNU                                */        
 /* 30 : PROTOCOLE EURO INTERDIT CAR DB NON CONVERTIE A L'EURO        */        
 /*                                                                   */        
 /*********************************************************************/        
         
 DCL 1     IEU001,        
 /*------------------------- I N P U T -------------------------------*/        
      2    PTR,                        #################################################################        
       3   METAPCB      PTR,           ####################################################        
       3   ALTPCB       PTR,           ####################################################        
      2    INPUT,                      ###############################################################        
       3   LTSCTRN      CHAR (4),      ###############################################        
       3   CDDVTRN      CHAR (3),      ###############################################        
       3   CDPGTRN      CHAR (3),      ###############################################        
       3   CDTYUSR      CHAR (1),      ###############################################        
       3   CDPGMID      CHAR (8),      ###############################################        
       3   CDDFSEG      CHAR (8),      ###############################################        
       3   LASTCALL     CHAR (30),     ##############################################        
       3   TBEGCOD(32)  BIT(1),        #################################################        
                                       /*--!  BIT 1: MAJ EURO         */        
                                       /*--!    AUTORISEE AVANT PIVOT */        
                                       /*--!  BIT 2: NE PAS CONVERTIR */        
                                       /*--!  BIT 3: MAJ BEF          */        
                                       /*--!    AUTORISEE APRES PIVOT */        
       3   TBDISPO(128),        
        4  DBDNAME      CHAR(8),       ################################################        
        4  DBSTATE      CHAR(1),       ################################################        
                                       /*--! 0 : UPDATABLE            */        
                                       /*--! 1 : READ ONLY (NU)       */        
                                       /*--! 2 : NO ACCESS (NA)       */        
       3   FILLER       CHAR(200),     ##############################################        
         
 /*------------------------ O U T P U T ------------------------------*/        
      2    OUTPUT,                     ##############################################################        
       3   CDRTPGM      CHAR (6),      ###############################################        
       3   LTRTPGM      CHAR (60),     ##############################################        
       3   DBPTR        PTR,           ####################################################        
       3   LASTDLI      CHAR (10);     ##############################################        
         
 /*------------------- REDEFINITIONS DE IEU001 -----------------------*/        
 DCL 1     IEU001_R     BASED(ADDR(IEU001.INPUT.FILLER)),        
       2   CDEVTRN      CHAR(001),     ##############################################        
                                       /*--!  P : VALEUR PAR DEFAUT   */        
       2   CDDEVDB      CHAR(003),     ##############################################        
                                       /*--!  BEF / EUR               */        
       2   TBDFDBD_PTR  PTR,        
       2   TBDFATT_PTR  PTR,        
       2   TBDFSEG_PTR  PTR,        
       2   SYSTIME      BIN FIXED(31),        
       2   DATEORD      PIC '(7)9',        
       2   NBMXCOP_C    FIXED BIN(15),        
       2   FILLER       CHAR(170);     ##############################################        
 /*********************************************************************/        
              /* INTERFACE DL1          */        
 DCL 1    GA2016J           BASED(JWB001.GXXXXXJ_P),        
 /*------------------------- I N P U T -------------------------------*/        
      2   INPUT,        
       3  IOPCB             PTR,        
       3  ALTPCB            PTR,        
       3  PRTPCB            PTR,        
       3  SPA_PTR           PTR,        
       3  MID_PTR           PTR,        
       3  PAGE_PTR          PTR,        
       3  PAGEER_PTR        PTR,        
       3  LTNMMTH           CHAR(20),        
       3  DXI10PCB          PTR,                                                
       3  DC105PCB          PTR,                                                
       3  DSM88PCB          PTR,        
       3  DXI04PCB          PTR,        
       3  DXI05PCB          PTR,        
       3  DXI06PCB          PTR,        
       3  DA215PCB          PTR,                                                
       3  DA215$PCB         PTR,                                                
       3  DA2152PCB         PTR,                                                
       3  DA216PCB          PTR,                                                
       3  DA223PCB          PTR,                                                
       3  DEU02PCB          PTR,                                                
       3  DS101PCB          PTR,        
       3  DS101S2PCB        PTR,        
       3  DS101S3PCB        PTR,        
       3  DS106PCB          PTR,        
       3  DS108PCB          PTR,        
       3  DS124PCB          PTR,        
       3  DSM19PCB          PTR,        
       3  DS102PCB          PTR,        
       3  DSM40PCB          PTR,        
       3  DS133PCB          PTR,        
       3  DS103PCB          PTR,        
       3  DS139PCB          PTR,        
       3  DSM22PCB          PTR,        
       3  DSM18PCB          PTR,        
       3  DSM18BPCB         PTR,        
       3  DD201PCB          PTR,        
       3  DSM43PCB          PTR,        
       3  DEU02MPCB         PTR,        
       3  DEU02DPCB         PTR,        
       3  DSM55PCB          PTR,        
       3  DC105MPCB         PTR,        
       3  DS125PCB          PTR,        
       3  DS137PCB          PTR,        
       3  DCO15PCB          PTR,        
       3  DCO26PCB          PTR,        
       3  DSM25MPCB         PTR,        
       3  DS101MPCB         PTR,        
       3  DS101M2PCB        PTR,        
       3  DS101M3PCB        PTR,        
       3  DS106MPCB         PTR,        
       3  DS108MPCB         PTR,        
       3  DS124MPCB         PTR,        
       3  DS125MPCB         PTR,        
       3  DS137MPCB         PTR,        
       3  DCO15MPCB         PTR,        
       3  DCO26MPCB         PTR,        
       3  DSM22MPCB         PTR,        
       3  DDO01PCB          PTR,        
       3  DDO02PCB          PTR,        
       3  DDO03PCB          PTR,        
       3  DC105SPCB         PTR,                                                
       3  DSM60PCB          PTR,                                                
       3  DSM61PCB          PTR,                                                
       3  DSM62PCB          PTR,                                                
       3  DSM63PCB          PTR,                                                
       3  DSM64PCB          PTR,                                                
       3  DSM65PCB          PTR,                                                
       3  DSM66PCB          PTR,                                                
       3  DSM67PCB          PTR,                                                
       3  DSM68PCB          PTR,                                                
       3  DSM69PCB          PTR,                                                
       3  DS102$PCB          PTR,                                               
       3  DS128PCB          PTR,                                                
       3  DS132PCB          PTR,                                                
       3  DS134PCB          PTR,                                                
       3  DS137$PCB          PTR,                                               
       3  DSM01PCB          PTR,                                                
       3  DSM06PCB          PTR,                                                
       3  DSM07PCB          PTR,                                                
       3  DSM09PCB          PTR,                                                
       3  DS146PCB          PTR, ################################################                   
       3  DSM80PCB          PTR, ################################################                   
       3  DSMB9PCB          PTR; ################################################                   
             /* SERVICE                */        
 /*******************************************************************/        
 /* INTERFACE GENERAL POUR TOUS LES SERVICES                        */        
 /*******************************************************************/        
         
 DCL 1  JWB001,        
      2   CDEVCLI    CHAR(01),      ########################################        
      2   RETOUR     BIT (1),       #########################################        
      2   LEVEL      PIC '9',       #########################################        
      2   ATTRIB     CHAR(02),      ########################################        
      2   LTNMSER    CHAR(08),      ########################################        
      2   ENTREE,        
       3  DBSCRAT,        
        4 METAPCB    PTR,           ##############################################        
        4 DBSCRPCB   PTR,           ##############################################        
        4 LTSGSCR    CHAR(08),      #########################################        
       3  DBTABLE,        
        4 METAPCB    PTR,           ##############################################        
        4 DBTABPCB   PTR,           ##############################################        
        4 LTSGTAB    CHAR(08),      #########################################        
        4 CDDFTAB    CHAR(08),      #########################################        
       3  DBCOMDE,        
        4 METAPCB    PTR,           ##############################################        
        4 DBCDEPCB   PTR,           ##############################################        
        4 LTSGCDE    CHAR(08),      #########################################        
        4 CDDFCDE    CHAR(08),      #########################################        
       3  CDTRACE    PIC '9',       ##########################################        
       3  TBTRACE_I  FIXED (5),     ########################################        
       3  BOTBDB2    BIT (1),       ##########################################        
       3  LTNMBUS    CHAR(20),      #########################################        
       3  LTNMOBJ    CHAR(20),      #########################################        
       3  LTNMMTH    CHAR(20),      #########################################        
      2   SORTIE,        
       3  CDRTPGM    CHAR(09),      #########################################        
       3  CDRTDB2    BIN FIXED(31), ####################################        
       3  SQLERRM    CHAR (70) VAR, ####################################        
       3  CDROLLB    BIT(1),        ###########################################        
       3  LSTCALL    CHAR(12),      #########################################        
       3  LSTSERV    CHAR(12),      #########################################        
       3  TBTRACE (100),            ###############################################        
        4 FLAG_TRACE CHAR(01),        
        4 MSGE_TRACE CHAR(40),        
      2   GXXXXXJ_P  PTR;           ##############################################        
         
 /* EXPLICATIONS:                                                    */        
 /*                                                                  */        
 /* APPEL DU BUS 'LTNMBUS' POUR EXECUTION DE LA FONCTION 'LTNMFCT'   */        
 /* DE L'OBJET 'LTNMOBJ'                                             */        
 /*                                                                  */        
 /* LES TRACES SONT AFFICHEES EN FCT DE CDTRACE (0->9)               */        
 /* ->  0 PAS DE TRACE, 9 TRACE COMPLETES                            */        
         
         
              /* BUS                    */        
         
 /********************************************        
 * INTERFACES AVEC LES SCENARIOS             *        
 ********************************************/        
 DCL XEU100  ENTRY OPTIONS(FETCHABLE);        
         
 DCL KA2151  ENTRY;           ####################################################        
 /*********************************************************************/        
 /* INTERFACE : KA2151J                                               */        
 /*                                                                   */        
 /*                 SERVICE D'ACCES DB EUROTAX                        */        
 /*                                                                   */        
 /*         V O I T U R E S     P A R T I C U L I E R S               */        
 /*                  U T I L I T A I R E S                            */        
 /*                      M O T O S                                    */        
 /*         *******************************************               */        
 /*               DB    DA215 , DA216                                 */        
 /*                                                                   */        
 /*********************************************************************/        
                                 /* LIMITE EXPLO MARQUES              */        
                                 /* LIMITE EXPLO MODELES              */        
                                 /* LIMITE EXPLO TYPES                */        
                                 /* LIMITE EXPLO EQUIPEMENTS          */        
                                 /* LIMITE EXPLO CONTENU D'UN PACK    */        
         
 DCL 1 KA2151J,        
      2 PTRPCB       CHAR (256),    ################################################        
      2 INPUT        CHAR (2000),   ###############################################        
      2 OUTPUT       CHAR (20000);  ##############################################        
         
 /*********************************************************************/        
 /*             REDEFINITION DES POINTEURS                            */        
 /*  REMARQUES : PTR = CHAR (04)                                      */        
 /*********************************************************************/        
         
 DCL 1 KA2151J_P      BASED(ADDR(KA2151J.PTRPCB)),        
      2 DEU02PCB      PTR,               ######################################################        
      2 DA215PCB      PTR,               ######################################################        
      2 DA215$PCB     PTR,               ######################################################        
      2 DA2152PCB     PTR,               ######################################################        
      2 DA216PCB      PTR;               ######################################################        
         
 /*********************************************************************/        
 /*                S E G M E N T S     I N D I V I D U E L S          */        
 /*                =========================================          */        
 /* METHODE : CONSULT_YY_XXX                                          */        
 /* METHODE : SUPPR_YY_XXX                                            */        
 /* METHODE : CREAT_YY_XXX                                            */        
 /* METHODE : MODIF_YY_XXX                                            */        
 /*                                                                   */        
 /*     YY = VP(VOITURES) , UT(UTILITAIRES), MO(MOTOS)                */        
 /*    XXX = MAK , Marque ..................A2EUTnn (T11,T21,T41)     */        
 /*          MOD : Modele ..................A2EUTnn (T12,T22,T42)     */        
 /*          TYP : Type de vehicule.........A2EUTnn (T13,T23,T43)     */        
 /*          PRI : Prix d'un type de vehic..A2EUTnn (T14,T24,T44)     */        
 /*          EQT : Equipements pour un type.A2EUTnn (T15,T25,T45)     */        
 /*          CON : Contenu d'un pack .......A2EUTnn (T16,T26,T46)     */        
 /*          TXT : Libelle d'un equipement..A2EUTnn (T17,T27,T47)     */        
 /*          COT : Cotation d'un type.......A2EUTnn (T18,T28,T48)     */        
 /*                                                                   */        
 /* INPUT : LE SEGMENT A2EUTnn                                        */        
 /* OUTPUT: LE SEGMENT A2EUTnn                                        */        
 /*                                                                   */        
 /* Exemple dans le programme appelant pour 'CONSULT_VP_MAK'          */        
 /* -------                                                           */        
 /* DCL A2EUT11_R         CHAR(STG(A2EUT11)) BASED(ADDR(A2EUT11));    */        
 /*         A2EUT11.CDTYPTB = '11';                                   */        
 /*         A2EUT11.NOIDMAR = numero de marque                        */        
 /*     KA2151J_A2EUTAX_I = A2EUT11_R;                                */        
 /* En output :                                                       */        
 /*     A2EUT11_R = KA2151J_A2EUTAX_O;                                */        
 /*                                                                   */        
 /* -------------------- INPUT -------------------------------------- */        
 DCL 1 KA2151J_A2EUTAX_I  CHAR(300)    BASED(ADDR(KA2151J.INPUT));        
         
 /* -------------------- OUTPUT ------------------------------------- */        
 DCL 1 KA2151J_A2EUTAX_O  CHAR(300)    BASED(ADDR(KA2151J.OUTPUT));        
         
 /*********************************************************************/        
 /*                     E X P L O R A T I O N S                       */        
 /*                     =======================                       */        
 /* METHODE : EXPLO_1P_YY_XXX                                         */        
 /* METHODE : EXPLO_PS_YY_XXX                                         */        
 /* METHODE : EXPLO_PP_YY_XXX                                         */        
 /*                                                                   */        
 /*     YY = VP(VOITURES) , UT(UTILITAIRES), MO(MOTOS)                */        
 /*    XXX = MAK : Toutes les marques d'une categorie (VP,UT ou MO)   */        
 /*          MOD : tous les modeles pour une marque                   */        
 /*          TYP : tous les type pour un modele et une marque         */        
 /*          EQT : tous les equipements d'un Type                     */        
 /*          CON : tous les equipements contenu dans un pack          */        
 /*                                                                   */        
 /* INPUT :                                                           */        
 /* O indique que la donnee est obligatoire                           */        
 /* F indique que la donnee est facultative uniqt pour EXPLO_1P_YY_XXX*/        
 /*   sinon la donnee est Obligatoire pour suivant/precedent          */        
 /*                                                                   */        
 /* !!ANNECTR : Zero => pas de test sur date debut et fin d'importat. */        
 /*                     Donc on prend tout                            */        
 /* REMARQUE EXPLO MAK,MOD,TYP :                                      */        
 /* ==========================                                        */        
 /* Ces explo se font sur l'index secondaire trie par libelle.        */        
 /* Pour les explo suivant/precedent il faut en plus du NOIDMAR       */        
 /* renvoyer le LTMARQU pour se repositionner le o on etait arrive   */        
 /* (Idem pour Explo MOD et TYP)                                      */        
 /*                                                                   */        
 /*********************************************************************/        
         
 /* -------------------- INPUT ---------------------------------------*/        
         
 DCL 1 KA2151J_EXPMAK_I                   BASED(ADDR(KA2151J.INPUT)),        
      2 CDTYPTB        CHAR(02),     ################################################        
      2 NBITEXP        BIN FIXED(15),###########################################        
      2 NOIDMAR        DEC FIXED(07),###########################################        
      2 LTMARQU        CHAR(40),     ################################################        
      2 ANNECTR        PIC '(4)9',   ##############################################        
      2 CDTTERR        CHAR(01),     ################################################        
      2 CDSPORT        CHAR(01),     ################################################        
      2 CDSPOSE        CHAR(02),     ################################################        
      2 TXTCLAS        CHAR(08),     ################################################        
      2 TXTCATV        CHAR(08),     ################################################        
      2 TXTCARO        CHAR(08),     ################################################        
      2 TXTCARB        CHAR(08),     ################################################        
      2 LIBMARQ        CHAR(40),     ################################################        
                                     /* Le ? est obligatoire pour     */        
                                     /* delimiter les champs e tester */        
                                     /* (A?RO? etc..)                 */        
      2 NOUVEAU        CHAR(01);     ################################################        
                                     /*   nouveaux vehicules          */        
         
 DCL 1 KA2151J_EXPMOD_I                   BASED(ADDR(KA2151J.INPUT)),        
      2 CDTYPTB        CHAR(02),     ################################################        
      2 NBITEXP        BIN FIXED(15),###########################################        
      2 NOIDMAR        DEC FIXED(07),###########################################        
      2 NOIDMOD        DEC FIXED(07),###########################################        
      2 LTMODEL        CHAR(40),     ################################################        
      2 ANNECTR        PIC '(4)9',   ##############################################        
      2 CDTTERR        CHAR(01),     ################################################        
      2 CDSPORT        CHAR(01),     ################################################        
      2 CDSPOSE        CHAR(02),     ################################################        
      2 TXTCLAS        CHAR(08),     ################################################        
      2 TXTCATV        CHAR(08),     ################################################        
      2 TXTCARO        CHAR(08),     ################################################        
      2 TXTCARB        CHAR(08),     ################################################        
      2 NOUVEAU        CHAR(01);     ################################################        
                                     /*   nouveaux vehicules          */        
         
 DCL 1 KA2151J_EXPTYP_I                   BASED(ADDR(KA2151J.INPUT)),        
      2 CDTYPTB        CHAR(02),     ################################################        
      2 NBITEXP        BIN FIXED(15),###########################################        
      2 NOIDMAR        DEC FIXED(07),###########################################        
      2 NOIDMOD        DEC FIXED(07),###########################################        
      2 NOIDTYP        DEC FIXED(07),###########################################        
      2 LTTYPEV        CHAR(60),     ################################################        
      2 ANNECTR        PIC '(4)9',   ##############################################        
      2 CDTTERR        CHAR(01),     ################################################        
      2 CDSPORT        CHAR(01),     ################################################        
      2 CDSPOSE        CHAR(02),     ################################################        
      2 TXTCLAS        CHAR(08),     ################################################        
      2 TXTCATV        CHAR(08),     ################################################        
      2 TXTCARO        CHAR(08),     ################################################        
      2 TXTCARB        CHAR(08),     ################################################        
      2 NOUVEAU        CHAR(01);     ################################################        
                                     /*   nouveaux vehicules          */        
         
 DCL 1 KA2151J_EXPEQT_I                   BASED(ADDR(KA2151J.INPUT)),        
      2 CDTYPTB        CHAR(02),     ################################################        
      2 NBITEXP        BIN FIXED(15),###########################################        
      2 NOIDTYP        DEC FIXED(07),###########################################        
      2 NOIDADD        DEC FIXED(11),###########################################        
      2 ANNECTR        PIC '(4)9',   ##############################################        
      2 CDTYPEQ        CHAR(03),     ################################################        
                                     /*                     O=Options */        
                                     /*                     P=Packs   */        
                                     /*                 blanc = tout  */        
                                     /*   Ex: "SO "=Serie + Options   */        
      2 CDMULTI        CHAR(01),     ################################################        
                                     /*         les doubles           */        
      2 DAFINIM        PIC'(6)9',    ###############################################        
                                     /*   (AAAAMM : obligatoire si    */        
                                     /*    CDMULTI#'Y')               */        
      2 CDGARAN        CHAR(01);     ################################################        
                                     /*         les garanties         */        
         
 DCL 1 KA2151J_EXPCON_I                   BASED(ADDR(KA2151J.INPUT)),        
      2 CDTYPTB        CHAR(02),     ################################################        
      2 NBITEXP        BIN FIXED(15),###########################################        
      2 NOIDTYP        DEC FIXED(07),###########################################        
      2 NOIDPAC        DEC FIXED(07),###########################################        
      2 NOIDEQT        DEC FIXED(07),###########################################        
      2 DATEDEB        DEC FIXED(07),###########################################        
      2 ANNECTR        PIC '(4)9',   ##############################################        
      2 CDMULTI        CHAR(01),     ################################################        
                                     /*         les doubles           */        
      2 DAFINIM        PIC'(6)9';    ###############################################        
                                     /*   (AAAAMM : obligatoire si    */        
                                     /*    CDMULTI#'Y')               */        
         
 /* -------------------- OUTPUT ------------------------------------- */        
         
 DCL 1 KA2151J_EXPMAK_O                   BASED(ADDR(KA2151J.OUTPUT)),        
      2 NBELMTB        BIN FIXED(15),    ###########################################        
      2 TBIDELM (50),        
       3 NOIDMAR            FIXED(07),   ##########################################        
       3 LTMARQU            CHAR(40),    ###########################################        
       3 CDTTERR            CHAR(01);    ###########################################        
         
 DCL 1 KA2151J_EXPMOD_O                   BASED(ADDR(KA2151J.OUTPUT)),        
      2 NBELMTB        BIN FIXED(15),    ###########################################        
      2 TBIDELM (50),        
       3 NOIDMOD            FIXED(07),   ##########################################        
       3 LTMODEL            CHAR(40),    ###########################################        
       3 CDTTERR            CHAR(01);    ###########################################        
         
 DCL 1 KA2151J_EXPTYP_O                   BASED(ADDR(KA2151J.OUTPUT)),        
      2 NBELMTB        BIN FIXED(15),    ###########################################        
      2 TBIDELM (50),        
       3 NOIDTYP            FIXED(07),   ##########################################        
       3 LTTYPEV            CHAR(60),    ###########################################        
       3 CDTTERR            CHAR(01),    ###########################################        
       3 DADEBIM            PIC'(6)9',   ##########################################        
       3 DAFINIM            PIC'(6)9',   ##########################################        
       3 NBRPORT            FIXED(03),   ##########################################        
       3 NBTYPKW            FIXED(03),   ##########################################        
       3 NBVITES            FIXED(03),   ##########################################        
       3 TXTBOIT            CHAR(08),    ###########################################        
       3 TYPCYLI            FIXED(05),   ##########################################        
       3 NBCVDIN            FIXED(03),   ##########################################        
       3 TCO2EMI            FIXED(05),   ##########################################        
       3 CDECOV2            CHAR(01),    ###########################################        
       3 FILLER             CHAR(26);    ###########################################        
         
 DCL 1 KA2151J_EXPEQT_O                   BASED(ADDR(KA2151J.OUTPUT)),        
      2 NBELMTB        BIN FIXED(15),    ###########################################        
      2 TBIDELM (50),        
       3 NOIDADD            FIXED(11),   ##########################################        
       3 NOIDEQT            FIXED(07),   ##########################################        
       3 DATEDEB            FIXED(07),   ##########################################        
       3 DATEFIN            FIXED(07),   ##########################################        
       3 LTTXTEQ(2)         CHAR(80),    ###########################################        
       3 LTTXTST(2)         CHAR(40),    ###########################################        
       3 CDTYPEQ            CHAR(01),    ###########################################        
       3 PRIHTVA            FIXED(09),   ##########################################        
       3 PRITVAC            FIXED(09);   ##########################################        
         
 DCL 1 KA2151J_EXPCON_O                   BASED(ADDR(KA2151J.OUTPUT)),        
      2 NBELMTB        BIN FIXED(15),    ###########################################        
      2 TBIDELM (50),        
       3 NOIDPAC            FIXED(07),   ##########################################        
       3 NOIDEQT            FIXED(07),   ##########################################        
       3 LTTXTEQ(2)         CHAR(80),    ###########################################        
       3 LTTXTST(2)         CHAR(40),    ###########################################        
       3 DATEDEB            FIXED(07),   ##########################################        
       3 DATEFIN            FIXED(07),   ##########################################        
       3 PRIHTVA            FIXED(09),   ##########################################        
       3 PRITVAC            FIXED(09);   ##########################################        
         
 /*********************************************************************/        
 /*                P R I X   D ' U N   V E H I C U L E                */        
 /*                ===================================                */        
 /* METHODE : YY_PRIX                                                 */        
 /*                                                                   */        
 /*     YY = VP(VOITURES) , UT(UTILITAIRES), MO(MOTOS)                */        
 /*                                                                   */        
 /* !!ANNECTR : Zero => Renvoi le dernier prix connu pour le vehicule */        
 /*                                                                   */        
 /*********************************************************************/        
         
 /* -------------------- INPUT ---------------------------------------*/        
         
 DCL 1 KA2151J_PRIX_I                  BASED(ADDR(KA2151J.INPUT)),        
      2 CDTYPTB       CHAR(02),      #################################################        
      2 NOIDTYP       DEC FIXED(07), ############################################        
      2 ANNECTR       PIC'(4)9';     ################################################        
         
 /* -------------------- OUTPUT ------------------------------------- */        
 DCL 1 KA2151J_PRIX_O                  BASED(ADDR(KA2151J.OUTPUT)),        
      2 DATEDEB       DEC FIXED(07), ############################################        
      2 PRIHTVA       DEC FIXED(09), ############################################        
      2 PRITVAC       DEC FIXED(09), ############################################        
      2 TAUXTVA       DEC FIXED(5,2);###########################################        
         
         
 /*********************************************************************/        
 /*                C O T A T I O N S                                  */        
 /*                =================                                  */        
 /* METHODE : YY_COTATION                                             */        
 /*                                                                   */        
 /*     YY = VP(VOITURES) , UT(UTILITAIRES), MO(MOTOS)                */        
 /*********************************************************************/        
         
 /* -------------------- INPUT ---------------------------------------*/        
         
 DCL 1 KA2151J_COTAT_I                 BASED(ADDR(KA2151J.INPUT)),        
      2 CDTYPTB        CHAR(02),     ################################################        
      2 NOIDTYP        DEC FIXED(07),###########################################        
      2 ANNIMAT        PIC'(4)9',    ###############################################        
      2 MOIIMAT        PIC'99',      #################################################        
      2 KILOMRE        DEC FIXED(09);###########################################        
         
 /* -------------------- OUTPUT ------------------------------------- */        
 DCL 1 KA2151J_COTAT_O                 BASED(ADDR(KA2151J.OUTPUT)),        
      2 ANNEVAL        PIC'(4)9',    ###############################################        
      2 MOISVAL        PIC'99',      #################################################        
      2 KILOMTH        DEC FIXED(09),###########################################        
      2 COTAREV        DEC FIXED(09),###########################################        
      2 COTARAC        DEC FIXED(09);###########################################        
         
 /*********************************************************************/        
 /*      A C C E S    P A R    L E S    I N D E X   (DA216)           */        
 /*      ==================================================           */        
 /*                                                                   */        
 /* METHODE : MAR_MOD_YY_TYP  ...........(index '10','20','40')       */        
 /*   renvoi  Numero de Marque et de Modele d'un type donne           */        
 /*                                                                   */        
 /*     YY = VP(VOITURES) , UT(UTILITAIRES), MO(MOTOS)                */        
 /*                                                                   */        
 /*********************************************************************/        
 /* Utilise par le BMP de chargement pour partiel (AA2243)            */        
 /*                                                                   */        
 /* METHODE : EQT_ADD_YY ................(Index '12','22','42')       */        
 /*   renvoi  Numero addition et type pour un equipement donne        */        
 /*                                                                   */        
 /* METHODE : EQT_CON_YY ................(Index '13','23','43')       */        
 /*   renvoi  Numero de pack  et type pour un equipement donne        */        
 /*                                                                   */        
 /*********************************************************************/        
         
 /* -------------------- INPUT ---------------------------------------*/        
         
 DCL 1 KA2151J_A2IXEUT_I               BASED(ADDR(KA2151J.INPUT)),        
      2 NOIDTYP           DEC FIXED(07),        
      2 NOIDEQT           DEC FIXED(07);        
         
 /* -------------------- OUTPUT ------------------------------------- */        
         
 DCL 1 KA2151J_A2IXEUT_O               BASED(ADDR(KA2151J.OUTPUT)),        
      2 NOIDMAR           DEC FIXED(07),        
      2 NOIDMOD           DEC FIXED(07),        
      2 NOIDTYP           DEC FIXED(07),        
      2 NOIDADD           DEC FIXED(11),        
      2 NOIDPAC           DEC FIXED(07);        
         
 /*********************************************************************/        
 /*        LE TAUX TMC POUR DES NOUV. VOITURES ET OCCASION            */        
 /*      ==================================================           */        
 /*                                                                   */        
 /* METHODE : YY_TMC                                                  */        
 /*                                                                   */        
 /*     YY = VP(VOITURES) , UT(UTILITAIRES), MO(MOTOS)                */        
 /*                                                                   */        
 /*********************************************************************/        
         
 /* -------------------- INPUT ---------------------------------------*/        
         
 DCL 1 KA2151J_TMC_I               BASED(ADDR(KA2151J.INPUT)),        
      2 NOIDMAR            DEC FIXED(07),######################        
      2 NOIDMOD            DEC FIXED(07),######################        
      2 NOIDTYP            DEC FIXED(07),######################        
      2 TMC_MOIS           CHAR(02),     ##############################        
      2 TMC_ANNEE          CHAR(04);     ###############################        
 /* -------------------- OUTPUT ------------------------------------- */        
 DCL 1 KA2151J_TMC_O               BASED(ADDR(KA2151J.OUTPUT)),        
       2 TMC_NOUV          DEC FIXED(09),        
       2 TMC_OCCAS         DEC FIXED(09);        
 /*********************************************************************/        
         
 /*********************************************************************/        
 /*                                                                   */        
 /* MESSAGE D'ERREUR (JWB001.CDRTPGM = $LTNMPRJ !! 'XXX')             */        
 /*    001 : NOM DE METHODE PAS CONNU                                 */        
 /*    002 : TAILLE INPUT INCORRECTE                                  */        
 /*    003 : DONNEES SEGMENT INPUT INVALIDES                          */        
 /*    004 : DONNEES SEGMENT OUTPUT INVALIDES                         */        
 /*    005 : TAILLE INPUT EXPLORATION INCORRECTE                      */        
 /*    006 : TAILLE OUTPUT EXPLORATION INCORRECTE                     */        
 /*    007 : NOMBRE D'ITEMS A EXPLORER INVALIDE                       */        
 /*    008 : NOMBRE D'ITEMS A EXPLORER > LIMITE PREVUE                */        
 /*    009 : EXPLORATION S/P : CLE DE DEPART NON RENSEIGNEE           */        
 /*    010 : TRAITEMENT INDEX PAS PREVU                               */        
 /*    011 : EXPLORATION : DONNEES INPUT INVALIDES                    */        
 /*    012 : TAILLE INPUT YY_PRIX INCORRECTE                          */        
 /*    013 : TAILLE OUTPUT YY_PRIX INCORRECTE                         */        
 /*    014 : TAILLE INPUT YY_COTATION INCORRECTE                      */        
 /*    015 : TAILLE OUTPUT YY_COTATION INCORRECTE                     */        
 /*                                                                   */        
 /*********************************************************************/        
             /* & interface                 */        
         
 DCL XA2898 ENTRY;            #####################################################        
 /*********************************************************************        
  *             Interface de calcul d'un devis auto                   *        
  *********************************************************************/        
 DCL 1  JA2088,        
       2  POINTEURS,             ############################################################        
         3 TABSPCB    PTR,       ######################################################        
         3 TABMPCB    PTR,       ######################################################        
         3 DEU02PCB   PTR,       ######################################################        
       2  INPUT,                 ################################################################        
         3 CDSOCIE    CHAR(01),  #################################################        
         3 CDSOPRE    CHAR(01),  #################################################        
         3 DANAPRE    CHAR(08),  #################################################        
         3 CDCATVH    CHAR(03),  #################################################        
         3 ANCSTVH    CHAR(04),  #################################################        
         3 NBPRTAV    CHAR(04),  #################################################        
         3 NBPRTAR    CHAR(04),  #################################################        
         3 NUPUIVH    CHAR(03),  #################################################        
         3 NUCYLVH    CHAR(05),  #################################################        
         3 NUPDSVH    CHAR(04),  #################################################        
         3 VACATVH    CHAR(07),  #################################################        
         3 VAACTVH    CHAR(07),  #################################################        
         3 VAACCVH    CHAR(07),  #################################################        
         3 VAOBJVH    CHAR(07),  #################################################        
         3 VATMCVH    CHAR(07),  #################################################        
         3 VABMACT    CHAR(02),  #################################################        
         3 VAMDACT    CHAR(02),  #################################################        
         3 CDTYVOL    CHAR(01),  #################################################        
         3 CDTARFO    CHAR(01),  #################################################        
         3 CDTYFRA    CHAR(01),  #################################################        
         3 CDTAXES    CHAR(01),  #################################################        
         3 CDCOTIS    CHAR(01),  #################################################        
         3 CDFRACT    CHAR(01),  #################################################        
         3 CDEVISE    CHAR(03),  #################################################        
         3 DADEBCT    CHAR(08),  #################################################        
         3 DAFINCT    CHAR(08),  #################################################        
         3 PCPRICT    CHAR(03),  #################################################        
         3 TBGARAN(40),          #########################################################        
           4 CDTYGAR  CHAR(03),  #################################################        
           4 MTRDGAR  CHAR(02),  #################################################        
           4 MTMJGAR  CHAR(02),  #################################################        
         3 CDSXPRE    CHAR(01),  #################################################        
         3 CDPOPRE    CHAR(04),  #################################################        
         3 CDTYVO2    CHAR(01),  #################################################        
         3 CDSTACO    CHAR(01),  #################################################        
         3 CDCYCOC    CHAR(01),  #################################################        
         3 CDTYDMA    CHAR(01),  #################################################        
         3 CDGRPAF    CHAR(07),  #################################################        
         3 NBKMANN    CHAR(03),  #################################################        
         3 CDJEUFA    CHAR(01),  #################################################        
         3 CDENFCH    CHAR(01),  #################################################        
         3 CDTY2PO    CHAR(01),  #################################################        
         3 CDSINIS    CHAR(01),  #################################################        
         3 CDJEUCO    CHAR(01),  #################################################        
         3 CDSTART    CHAR(01),  #################################################        
         3 NBSINRC    CHAR(02),  #################################################        
         3 NBSINDM    CHAR(02),  #################################################        
         3 DADEPER    CHAR(08),  #################################################        
         3 CDPADIV    CHAR(02),  #################################################        
         3 CDTYPRO    CHAR(01),  #################################################        
         3 VABMSOU    CHAR(02),  #################################################        
         3 RDMAGIS    CHAR(01),  #################################################        
         3 CDOLDTJ    CHAR(01),  #################################################        
         3 NOAGTAV    CHAR(06),  #################################################        
         3 CDDEROG    CHAR(02),  #################################################        
         3 CDUSPRO    CHAR(01),  #################################################        
         3 CDPL1SI    CHAR(01),  #################################################        
         3 CDDOMIC    CHAR(01),  #################################################        
         3 MTCOMRC    CHAR(02),  #################################################        
         3 MTCOMAN    CHAR(02),  #################################################        
         3 CDCAFRA    CHAR(01),  #################################################        
                                 /* autorise (0/1)                    */        
         3 CDPROMO    CHAR(01),  #################################################        
         3 CDTABBM    CHAR(01),  #################################################        
         3 VAANACT    CHAR(02),  #################################################        
         3 CDHOREC    CHAR(01),  #################################################        
         3 CDTAGAN    CHAR(01),  #################################################        
         3 CDIDSEG    CHAR(01),  #################################################        
         3 CDIDTRF    CHAR(01),  #################################################        
         3 CDOLDVH    CHAR(01),  #################################################        
         3 CDCIBCL    CHAR(02),  #################################################        
         3 CDECOVH    CHAR(02),  #################################################        
         3 NBKMAVH    FIXED(3),  #################################################        
         3 CDFRANS    CHAR(02),  #################################################        
         3 CDTARJE    CHAR(01),  #################################################        
         3 CDTYFRS    CHAR(01),  #################################################        
         3 CDIDPRO    CHAR(03),  #################################################        
         3 NUVSPRO    CHAR(02),  #################################################        
         3 CDPKVIR    CHAR(03),  #################################################        
       2  OUTPUT,                ###############################################################        
         3 CDRTPGM     CHAR(06), ################################################        
         3 MTPRRCB PIC'(13)9V99',###############################################        
         3 DVPRRCB     CHAR(03), ################################################        
         3 MTFRGEN PIC'(13)9V99',###############################################        
         3 DVFRGEN     CHAR(03), ################################################        
         3 CDTYPDM     CHAR(01), ################################################        
         3 TBPRIME(40),          #########################################################        
           4 CDTFGAR   CHAR(02), ################################################        
           4 NUVSTRF   PIC'99',  #################################################        
           4 CDTYGAR   CHAR(03), ################################################        
           4 CDERRGA   CHAR(06), ################################################        
           4 MTPB100 PIC'(13)9V99',#############################################        
           4 DVPB100   CHAR(03), ################################################        
           4 MTPBMRD PIC'(13)9V99',#############################################        
           4 DVPBMRD   CHAR(03), ################################################        
           4 MTPRIFS PIC'(13)9V99',#############################################        
           4 DVPRIFS   CHAR(03), ################################################        
           4 MTPRIFA PIC'(13)9V99',#############################################        
           4 DVPRIFA   CHAR(03), ################################################        
         3 CDSEGDM     CHAR(01), ################################################        
         3 CDSEGRC     CHAR(01), ################################################        
         3 CDSEGVO     CHAR(01), ################################################        
         3 CDDMSEG     CHAR(02), ################################################        
         3 CDVOSEG     CHAR(02), ################################################        
         3 CDRCSEG     CHAR(02), ################################################        
         3 CDREGDM     CHAR(01), ################################################        
         3 CDREGOP     CHAR(01), ################################################        
         3 CDGRPJE     CHAR(01), ################################################        
         3 CDTYFRAA    CHAR(01), ################################################        
         3 CDTCKBT     CHAR(01), ################################################        
         3 CDTCKST     CHAR(01), ################################################        
                                 /* 0 : Pas acces STARTER             */        
                                 /* 1 : Acces STARTER, non sollicite  */        
                                 /* 2 : Acces STARTER, sollicite      */        
       2  OUTERROR,        
         3 DBPTR       PTR,      #####################################################        
         3 LASTCALL    CHAR (10);###############################################        
 DCL     TBIDGAR(40) CHAR(3) INIT        
         ('ASP', ################################################################        
          'ASS', ################################################################        
          'BRI', ################################################################        
          'BR2', ################################################################        
          'CAS', ################################################################        
          'DM1', ################################################################        
          'DM2', ################################################################        
          'DM3', ################################################################        
          'DM4', ################################################################        
          'DM5', ################################################################        
          'DM6', ################################################################        
          'DM7', ################################################################        
          'DM8', ################################################################        
          'DM9', ################################################################        
          'IN1', ################################################################        
          'IN2', ################################################################        
          'IN3', ################################################################        
          'MOB', ################################################################        
          'P11', ################################################################        
          'P12', ################################################################        
          'P13', ################################################################        
          'P14', ################################################################        
          'P15', ################################################################        
          'P21', ################################################################        
          'P22', ################################################################        
          'P23', ################################################################        
          'P24', ################################################################        
          'P25', ################################################################        
          'RCI', ################################################################        
          'VO1', ################################################################        
          'VO2', ################################################################        
          'VO3', ################################################################        
          'VO4', ################################################################        
          'CA1', ################################################################        
          'MO1', ################################################################        
          '   ', ################################################################        
          '   ', ################################################################        
          '   ', ################################################################        
          '   ', ################################################################        
          '   ');###############################################################        
         
 DCL     TBIDGAD(40) CHAR(3) INIT        
         ('ASS', ################################################################        
          'AV1', ################################################################        
          'AV2', ################################################################        
          'AV3', ################################################################        
          'AV4', ################################################################        
          'BR1', ################################################################        
          'BR2', ################################################################        
          'DA1', ################################################################        
          'DA2', ################################################################        
          'DA3', ################################################################        
          'DA4', ################################################################        
          'DA5', ################################################################        
          'DN1', ################################################################        
          'DN2', ################################################################        
          'DN3', ################################################################        
          'DN4', ################################################################        
          'DN5', ################################################################        
          'DM1', ################################################################        
          'DM2', ################################################################        
          'DR1', ################################################################        
          'IN4', ################################################################        
          'IN5', ################################################################        
          'PJ1', ################################################################        
          'PJ2', ################################################################        
          'PJ3', ################################################################        
          'RCI', ################################################################        
          'RC1', ################################################################        
          'VO4', ################################################################        
          'VO5', ################################################################        
          'VO6', ################################################################        
          'VO7', ################################################################        
          '   ', ################################################################        
          '   ', ################################################################        
          '   ', ################################################################        
          '   ', ################################################################        
          '   ', ################################################################        
          '   ', ################################################################        
          '   ', ################################################################        
          '   ', ################################################################        
          '   ');###############################################################        
         
 DCL     TBIDGAN(40) CHAR(3) INIT ###############################################        
         ('ASS', ################################################################        
          'BRI', ################################################################        
          'BR2', ################################################################        
          'CAS', ################################################################        
          'DM1', ################################################################        
          'DM2', ################################################################        
          'DM3', ################################################################        
          'DM4', ################################################################        
          'DM5', ################################################################        
          'DMM', ################################################################        
          'IN1', ################################################################        
          'RCI', ################################################################        
          'VO1', ################################################################        
          'CA1', ################################################################        
          'ASP', ################################################################        
          'MOB', ################################################################        
          'MO1', ################################################################        
          '   ', ################################################################        
          '   ', ################################################################        
          '   ', ################################################################        
          '   ', ################################################################        
          '   ', ################################################################        
          '   ', ################################################################        
          '   ', ################################################################        
          '   ', ################################################################        
          '   ', ################################################################        
          '   ', ################################################################        
          '   ', ################################################################        
          '   ', ################################################################        
          '   ', ################################################################        
          '   ', ################################################################        
          '   ', ################################################################        
          '   ', ################################################################        
          '   ', ################################################################        
          '   ', ################################################################        
          '   ', ################################################################        
          '   ', ################################################################        
          '   ', ################################################################        
          '   ', ################################################################        
          '   ');###############################################################        
         
 DCL     TBIDGA3(40) CHAR(3) INIT ###############################################        
         ('ASP', ################################################################        
          'ASS', ################################################################        
          'BR1', ################################################################        
          'BR2', ################################################################        
          'BR3', ################################################################        
          'CAS', ################################################################        
          'CA1', ################################################################        
          'DM1', ################################################################        
          'DM2', ################################################################        
          'DM3', ################################################################        
          'DM4', ################################################################        
          'IN1', ################################################################        
          'IN2', ################################################################        
          'MOB', ################################################################        
          'MO1', ################################################################        
          'MO2', ################################################################        
          'RCI', ################################################################        
          'VO1', ################################################################        
          'VO2', ################################################################        
          '   ', ################################################################        
          '   ', ################################################################        
          '   ', ################################################################        
          '   ', ################################################################        
          '   ', ################################################################        
          '   ', ################################################################        
          '   ', ################################################################        
          '   ', ################################################################        
          '   ', ################################################################        
          '   ', ################################################################        
          '   ', ################################################################        
          '   ', ################################################################        
          '   ', ################################################################        
          '   ', ################################################################        
          '   ', ################################################################        
          '   ', ################################################################        
          '   ', ################################################################        
          '   ', ################################################################        
          '   ', ################################################################        
          '   ', ################################################################        
          '   ');###############################################################        
         
 DCL     TBIDGAL(40) CHAR(3) INIT ###############################################        
         ('ASS', ################################################################        
          'BRI', ################################################################        
          'BR2', ################################################################        
          'CAS', ################################################################        
          'DM1', ################################################################        
          'DMM', ################################################################        
          'IN1', ################################################################        
          'IN2', ################################################################        
          'P11', ################################################################        
          'P12', ################################################################        
          'P13', ################################################################        
          'P14', ################################################################        
          'P15', ################################################################        
          'P21', ################################################################        
          'RCI', ################################################################        
          'VO1', ################################################################        
          'VO2', ################################################################        
          'CA1', ################################################################        
          '   ', ################################################################        
          '   ', ################################################################        
          '   ', ################################################################        
          '   ', ################################################################        
          '   ', ################################################################        
          '   ', ################################################################        
          '   ', ################################################################        
          '   ', ################################################################        
          '   ', ################################################################        
          '   ', ################################################################        
          '   ', ################################################################        
          '   ', ################################################################        
          '   ', ################################################################        
          '   ', ################################################################        
          '   ', ################################################################        
          '   ', ################################################################        
          '   ', ################################################################        
          '   ', ################################################################        
          '   ', ################################################################        
          '   ', ################################################################        
          '   ', ################################################################        
          '   ');###############################################################        
         
 DCL XA2F11 ENTRY;            #####################################################        
 /**********************************************************************        
 *                                                                     *        
 *                        AUTO PRODUCTION                              *        
 *                        +++++++++++++++                              *        
 *                                                                     *        
 *                SAUVEGARDE DES DEVIS VIA INTERNET (DSM88)            *        
 *                =================================                    *        
 * TDMBIE 23.01.02 ECRITURE                                            *        
 * TDMTHO 04.05.06 AJOUT DATE ECHeANCE                                 *        
 * TDMKIP 17.11.08 AJOUT NOHA1AF,NOHA2AF,NOHA1CO,NOHA2CO               *        
 * TDMSOX 10.06.10 NOUVELLES ZONES TARIFS AUTOS WE96                   *        
 *                                                                     *        
 **********************************************************************/        
         
 DCL 1    JA2F11,                           #######################################################        
 /*------------------------- I N P U T -------------------------------*/        
      2   PTRPCB,        
         3 ALTPCB       PTR,           ####################################################        
         3 TABPCB       PTR,           ####################################################        
         3 DSM88PCB     PTR,           ####################################################        
         3 DSM22PCB     PTR,           ####################################################        
         3 DS139PCB     PTR,           ####################################################        
         3 DS133PCB     PTR,           ####################################################        
         3 DSM55PCB     PTR,           ####################################################        
         3 DEU02PCB     PTR,           ####################################################        
      2   INPUT,        
         3 CDTYPOP      CHAR(1),       ################################################        
         3 NOIDDEV      FIXED DEC(11), ##########################################        
         3 NOIDVER     FIXED(3),       ################################################        
         3 CDCMGES     CHAR(08),       ################################################        
         3 CDCMPRO     CHAR(01),       ################################################        
         3 CDSCTRN     CHAR(01),       ################################################        
         3 CDDVTRN     CHAR(01),       ################################################        
         3 CDEVTRN     CHAR(01),       ################################################        
         3 LTOBJOP,        
          4  NOSQINT             CHAR(05), ######################################        
          4  NOSQSUJ             CHAR(05), ######################################        
          4  CDCNTVC             CHAR(03), ######################################        
          4  CDCAC               CHAR(15), ######################################        
          4  CDOPER              CHAR(03), ######################################        
          4  CDPRODU             CHAR(07), ######################################        
          4  CDTYPPR             CHAR(03), ######################################        
          4  CDLETTR             CHAR(03), ######################################        
          4  CDCANAL             CHAR(09), ######################################        
          4  CDTTAPP             CHAR(02), ######################################        
          4  NOSEQRB             CHAR(03), ######################################        
          4  CDSGGES             CHAR(01), ######################################        
          4  CDCOUGE             CHAR(04), ######################################        
          4  CDDEVIS             CHAR(11), ######################################        
          4  CDRSCTL             CHAR(01), ######################################        
      2   DATA,        
         3  NOIDPOL     CHAR(08),      ###############################################        
         3  CDPADIV     CHAR(02),      ###############################################        
         3  CDDRIVE     CHAR(01),      ###############################################        
         3  NOAGTAV     CHAR(06),      ###############################################        
         3  RDMAGIS     CHAR(01),      ###############################################        
         3  VABMACT     CHAR(02),      ###############################################        
         3  VABMSOU     CHAR(02),      ###############################################        
         3  VAMDACT     CHAR(02),      ###############################################        
         3  LTRETAR     CHAR(06),      ###############################################        
         3  CDTYFRA     CHAR(01),      ###############################################        
         3  CDTAXES     CHAR(01),      ###############################################        
         3  CDCOTIS     CHAR(01),      ###############################################        
         3  CDFRACT     CHAR(01),      ###############################################        
         3  CDFORGA     CHAR(01),      ###############################################        
         3  CDPROMO     CHAR(01),      ###############################################        
         3  CDJEENF     CHAR(01),      ###############################################        
         3  CDJEFAM     CHAR(01),      ###############################################        
         3  CDTY2PO     CHAR(01),      ###############################################        
         3  CDSINIS     CHAR(01),      ###############################################        
         3  CDGRPAF     CHAR(07),      ###############################################        
         3  CDTYDEV     CHAR(02),      ###############################################        
         3  CDUSVEH     CHAR(2),       ################################################        
         3  DAEFRJJ     CHAR(2),       ################################################        
         3  DAEFRMM     CHAR(2),       ################################################        
         3  DAEFRAA     CHAR(4),       ################################################        
         3  DAEFAJJ     CHAR(2),       ################################################        
         3  DAEFAMM     CHAR(2),       ################################################        
         3  DAEFAAA     CHAR(4),       ################################################        
         3  CDGAZOI     CHAR(01),      ###############################################        
         3  NBKMPRO     FIXED DEC(3),  ###########################################        
         3  NBJRPRO     FIXED DEC(3),  ###########################################        
         3  NBKMAVH     FIXED DEC(3),  ###########################################        
         3  NBFRDMA     FIXED DEC(3),  ###########################################        
         3  LTREFCL     CHAR(30),      ###############################################        
         3  CDCLS1      PIC'99',       ################################################        
         3  CDCLS2      PIC'99',       ################################################        
         3  CDCLS3      PIC'99',       ################################################        
         3  CDCLS4      PIC'99',       ################################################        
         3  CDCLS5      PIC'99',       ################################################        
         3  CDTYPVH_W   PIC'99999',    #############################################        
         3  JJDEPER     CHAR(02),      ###############################################        
         3  MMDEPER     CHAR(02),      ###############################################        
         3  AADEPER     CHAR(04),      ###############################################        
         3  CDSTART     CHAR(01),      ###############################################        
         3  CDJEUCO     CHAR(01),      ###############################################        
         3  CDUSPRO     PIC'9',        #################################################        
         3  CDTABBM     CHAR(1),       ################################################        
         3  CDTAGAN     CHAR(1),       ################################################        
         3  CDIDSEG     CHAR(1),       ################################################        
         3  CDIDTRF     CHAR(1),       ################################################        
         3  CDASTMC     CHAR(1),       ################################################        
         3  CDHOREC     CHAR(1),       ################################################        
         3  CDCIBCL     CHAR(2),       ################################################        
         3  CDIDPRO     CHAR(3),       ################################################        
         3  NUVSPRO     PIC'99',       ################################################        
         3  CDTYPRO     CHAR(2),       ################################################        
         3  CDGEPRO     CHAR(2),       ################################################        
         3  SIGNAL,        
          4  CDRSAFF     CHAR(01),     ##############################################        
          4  LTNMAFF     CHAR(20),     ##############################################        
          4  LTPRAFF     CHAR(15),     ##############################################        
          4  CDTYPAF     CHAR(01),     ##############################################        
          4  CDLGPOL     CHAR(01),     ##############################################        
          4  NOIDAFF     CHAR(08),     ##############################################        
          4  LTADRAF     CHAR(25),     ##############################################        
          4  NOHA1AF   BIN FIXED(15),  ###########################################        
          4  NOHA2AF     CHAR(04),     ##############################################        
          4  LTLOCAF     CHAR(23),     ##############################################        
          4  CDCPOAF     CHAR(06),     ##############################################        
          4  DANAIJJ     CHAR(02),     ##############################################        
          4  DANAIMM     CHAR(02),     ##############################################        
          4  DANAIAA     CHAR(04),     ##############################################        
          4  CDRSCCO     CHAR(01),     ##############################################        
          4  LTNOMCO     CHAR(20),     ##############################################        
          4  LTPRECO     CHAR(15),     ##############################################        
          4  LTADRCO     CHAR(30),     ##############################################        
          4  NOHA1CO   BIN FIXED(15),  ###########################################        
          4  NOHA2CO     CHAR(04),     ##############################################        
          4  LTLOCCO     CHAR(23),     ##############################################        
          4  CDCPOCO     CHAR(06),     ##############################################        
          4  DANCOJJ     CHAR(02),     ##############################################        
          4  DANCOMM     CHAR(02),     ##############################################        
          4  DANCOAA     CHAR(04),     ##############################################        
         3  VEHIC,        
          4  LTMARVH    CHAR(15),      ###############################################        
          4  CDEURTX    CHAR(07),      ###############################################        
          4  ANCSTVH    CHAR(04),      ###############################################        
          4  CDCATVH    CHAR(03),      ###############################################        
          4  NUPUIVH     CHAR(03),     ##############################################        
          4  NUCYLVH     CHAR(05),     ##############################################        
          4  NBPRTAV     CHAR(04),     ##############################################        
          4  NBPRTAR     CHAR(04),     ##############################################        
          4  VACATVH     CHAR(09),     ##############################################        
          4  VAACTVH     CHAR(09),     ##############################################        
          4  VAOBJVH     CHAR(05),     ##############################################        
          4  NUPDSVH     CHAR(04),     ##############################################        
          4  VAACCVH     CHAR(09),     ##############################################        
          4  LTPLQVH     CHAR(12),     ##############################################        
          4  LTCHAVH     CHAR(17),     ##############################################        
          4  CDALARM     CHAR(1),      ###############################################        
          4  NBKMCPT     FIXED DEC(11),#########################################        
          4  CDTARJE     CHAR(1),      ###############################################        
          4  CDFRANS     CHAR(2),      ###############################################        
          4  TBDEVGA(10),              #######################################################        
           5  CDTYGAR    CHAR(03),     ##############################################        
           5  CDTFGAR    CHAR(02),     ##############################################        
           5  NUVSTRF    PIC'99',      ###############################################        
           5  PRBASGA    FIXED DEC(9), ##########################################        
           5  NUMJDIV  DEC FIXED(5,2), ##########################################        
           5  NUMJLEA  DEC FIXED(3),   ############################################        
           5  NUMJPDG  DEC FIXED(3),   ############################################        
           5  NURDCLI  DEC FIXED(3),   ############################################        
           5  NURDPLU  DEC FIXED(3),   ############################################        
           5  NURDFRA  DEC FIXED(3),   ############################################        
           5  NURDLOI  DEC FIXED(3),   ############################################        
           5  NURDGAZ  DEC FIXED(3),   ############################################        
           5  NURDDIV  DEC FIXED(5,2), ##########################################        
          4  CDOLDVH   CHAR(1),        #################################################        
          4  CDECOVH   CHAR(2),        #################################################        
         3  ACCES(14),        
          4 LTACCSP  CHAR(30),         #################################################        
          4 VAACCSP  DEC FIXED(7),     #############################################        
         3  REMORQUE,        
          4  CDCATRE     CHAR(03),     ##############################################        
          4  LTMARRE     CHAR(15),     ##############################################        
          4  ANCSTRE     CHAR(04),     ##############################################        
          4  VACATRE     CHAR(09),     ##############################################        
          4  VAACTRE     CHAR(09),     ##############################################        
          4  NUPDSRE     CHAR(04),     ##############################################        
          4  TBGARRE(09),              #######################################################        
           5  CDTYGAR    CHAR(03),     ##############################################        
           5  CDTFGAR    CHAR(02),     ##############################################        
           5  NUVSTRF    PIC'99',      ###############################################        
           5  PRBASGA    FIXED DEC(9), ##########################################        
         3  ANTEC,        
          4  CDINTOX     CHAR(01),     ##############################################        
          4  CDIVRES     CHAR(1),      ###############################################        
          4  CDFUITE     CHAR(01),     ##############################################        
          4  NBDECPE     PIC'99' ,     ##############################################        
          4  NBSINRC     PIC'9',       ################################################        
          4  NBSINDM     PIC'9',       ################################################        
          4  NBSINVO     PIC'9',       ################################################        
          4  CDPRASS     CHAR(1),      ###############################################        
          4  NOIDCMP     CHAR(4),      ###############################################        
          4  NOPOCMP     CHAR(12),     ##############################################        
          4  CDPORES     CHAR(1),      ###############################################        
          4  CDIDRES     CHAR(1),      ###############################################        
          4  CDMOTAN     CHAR(2),      ###############################################        
          4  ECRCDEC     CHAR(2),      ###############################################        
         3 JEUNECO(3),        
          4 LTNMCON  CHAR(20),         ##################################################        
          4 LTPRCON  CHAR(15),         ##################################################        
          4 DATENAI  DEC FIXED(7),     ##############################################        
          4 DAPERMI  DEC FIXED(5),     ##############################################        
          4 CDQUACO  CHAR(01),         ##################################################        
          4 CDSUPPL  CHAR(01),         ##################################################        
         3  DAECHCT  CHAR(04),         ##################################################        
 /*------------------------- O U T P U T -----------------------------*/        
      2   OUTPUT,                     ##############################################################        
         3  CDRTPGM     CHAR (6),      ###############################################        
         3  DBPTR       PTR,           ####################################################        
         3  LASTDLI     CHAR (10);     ##############################################        
         
 DCL KGI011 ENTRY;            #####################################################        
 /*********************************************************************/        
 /* INTERFACE : KGI011J POUR LES METHODES DE TRAITEMENT DES DATES     */        
 /*                                                                   */        
 /*$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$ */        
 /*$                  ATTENTION                                     $ */        
 /*$                  =========                                     $ */        
 /*$LA NOTION DE JOURS FERIES EST LIEE AUX JOURS FERIES BANCAIRES   $ */        
 /*$  SAUF SI TBEGCOD(1) = 1 (IL Y A QUELQUES PONTS BANCAIRES EN +) $ */        
 /*$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$ */        
 /*                                                                   */        
 /*********************************************************************/        
         
 DCL 1 KGI011J,        
      2 INPUT        CHAR (200),    ################################################        
      2 INPUT2       CHAR (150),    ################################################        
      2 OUTPUT       CHAR (400);    ################################################        
         
 /*********************************************************************/        
 /*                                                                   */        
 /*             REDEFINITION EN INPUT                                 */        
 /*                                                                   */        
 /*********************************************************************/        
         
 DCL 1 KGI011J_RI BASED(ADDR(KGI011J.INPUT)),        
    /* ----- FORMAT D'ENTREE OBLIGATOIRE ---- */        
    /* CHAMPS PERMETTANT LE TRAITEMENT SUIVANT LA METHODE */        
      2 CDFMTDA          CHAR (20),   ############################################        
         
      2 NBJJCAL          FIXED (05),  ###########################################        
      2 NBMMCAL          FIXED (05),  ###########################################        
      2 NBAACAL          FIXED (03),  ###########################################        
         
      2 AAPIVOT          PIC '9999',  ###########################################        
                                      /* DU SIECLE                   */        
         
      2 CDLGTRN          PIC '9',     ##############################################        
         
      2 TBEGCOD (32)     BIT (01),    #############################################        
           /* BIT  1 : 0 = UTILISATION JOUR FERIE BANCAIRE           */        
           /*          1 = UTILISATION JOUR FERIE NON BANCAIRE       */        
           /* BIT  2 : 0 = UTILISATION JOUR FERIE EN INPUT           */        
           /*          1 = UTILISATION JOUR FERIE DATE CIBLE         */        
         
      2 NBSEM_P6         PIC '(06)9', ##########################################        
         
      2 JJJJULIEN_P3     PIC '(03)9', ##########################################        
      2 AAAAJULIEN_P4    PIC '(04)9', ##########################################        
         
    /* LISTE DES FORMATS DE DATES POSSIBLE */        
      2 JJMMAA_P6        PIC '(06)9',        
      2 AAMMJJ_P6        PIC '(06)9',        
      2 SAAMMJJ_P7       PIC '(07)9',        
      2 SJJMMAA_P7       PIC '(07)9',        
      2 JJMMAAAA_P8      PIC '(08)9',        
      2 AAAAMMJJ_P8      PIC '(08)9',        
         
      2 JJMMAA_C6        CHAR (06),        
      2 AAMMJJ_C6        CHAR (06),        
      2 SAAMMJJ_C7       CHAR (07),        
      2 SJJMMAA_C7       CHAR (07),        
      2 JJMMAAAA_C8      CHAR (08),        
      2 AAAAMMJJ_C8      CHAR (08),        
         
      2 DATETIME_C17     CHAR (17),   ##################################        
         
      2 JJ_MM_AAAA_C10   CHAR (10),   ########################################        
         
      2 FILLER           CHAR (39);        
         
 DCL 1 KGI011J_RI2 BASED(ADDR(KGI011J.INPUT2)),        
    /* ----FORMAT D'ENTREE OPTIONNEL - POUR LE CALCUL ENTRE 2 DATES */        
      2 JJMMAA_P6        PIC '(06)9',        
      2 AAMMJJ_P6        PIC '(06)9',        
      2 SAAMMJJ_P7       PIC '(07)9',        
      2 SJJMMAA_P7       PIC '(07)9',        
      2 JJMMAAAA_P8      PIC '(08)9',        
      2 AAAAMMJJ_P8      PIC '(08)9',        
         
      2 JJMMAA_C6        CHAR (06),        
      2 AAMMJJ_C6        CHAR (06),        
      2 SAAMMJJ_C7       CHAR (07),        
      2 SJJMMAA_C7       CHAR (07),        
      2 JJMMAAAA_C8      CHAR (08),        
      2 AAAAMMJJ_C8      CHAR (08),        
         
      2 DATETIME_C17     CHAR (17),   ##################################        
         
      2 JJ_MM_AAAA_C10   CHAR (10),   ########################################        
         
      2 FILLER           CHAR (39);        
         
         
 /*********************************************************************/        
 /*                                                                   */        
 /*             REDEFINITION EN OUTPUT                                */        
 /*                                                                   */        
 /*********************************************************************/        
         
 DCL 1 KGI011J_RO BASED(ADDR(KGI011J.OUTPUT)),        
    /* FORMAT DE SORTIE */        
      /* RESULTAT DU NBR JOURS OUVRABLES - NBR JOURS NON OUVRABLES   */        
      /*  ENTRE 2 DATES                                              */        
      2 NBJJOUV          PIC '(05)9', ##########################################        
      2 NBJJNOUV         PIC '(05)9', ##########################################        
         
      /* RESULT. DIFF ENTRE 2 DATES  */        
      2 NBJJJJJ          PIC '(05)9', ##########################################        
      2 NBJJRES          PIC '(02)9', ##########################################        
      2 NBMMRES          PIC '(02)9', ##########################################        
      2 NBAARES          PIC '(04)9', ##########################################        
         
      2 CDCOMPARE        CHAR (01),   ############################################        
                                      /* '2' -> DATE2 > DATE1        */        
                                      /* '=' -> DATE1 = DATE2        */        
         
      2 BOVALID_DATE     BIT (01),        
          /* '1'B : SI 'VALID_DATE_ECH' ALORS DATE1 <= DATE JOUR     */        
          /*        SI 'VALID_DATE_POST' ALORS DATE1 >= DATE JOUR    */        
          /* '0'B : SI 'VALID_DATE_ECH' ALORS DATE1 >  DATE JOUR     */        
          /*        SI 'VALID_DATE_POST' ALORS DATE1 <  DATE JOUR    */        
         
      /* FORMATAGE POUR DATE DU JOUR */        
      2 DATEHEURE_C18    CHAR (18),   ############################################        
      2 DATETIME_C17     CHAR (17),   ############################################        
      2 HEURE_F5         FIXED (05),  ###########################################        
         
      2 HHHMISS999_P10,               ########################################################        
       3 HHH             PIC '(03)9', ##################        
       3 MI              PIC '(02)9', ##################        
       3 SS              PIC '(02)9', ##################        
       3 MIL             PIC '(03)9', ##################        
         
    /* FORMAT DE SORTIE TOUJOURS ASSIGNE */        
    /* RENSEIGNEMENT SUR LA DATE EN INPUT */        
      2 CDTYPEJJ         CHAR (01),        
          /* '1' : SI LA DATE EN INPUT EST UN JOUR FERIE OU WEEK-END */        
          /* '2' : SI LA DATE EN INPUT EST UN JOUR OUVRABLE          */        
          /* '3' : SI LA DATE EN INPUT EST HORS LIMITE TABLEAU FERIE */        
         
      2 BOFINMOIS        BIT (01),    #############################################        
                                      /* '0'B SI DATE NON FIN DE MOIS*/        
         
      2 NBWEEK           PIC '(02)9', ##########################################        
      2 NOAAAA           PIC '(04)9', ##########################################        
         
    /* RENSEIGNEMENT SUR LA DATE EN OUTPUT */        
      2 JJJJULIEN_P3     PIC '(03)9', ##########################################        
      2 AAAAJULIEN_P4    PIC '(04)9', ##########################################        
         
      2 IDJOUR           PIC '(01)9', ##########################################        
                                      /* DIMANCHE = 1 - SAMEDI = 7   */        
      2 LTFILLER         CHAR (08) VAR, ########################################        
      2 LTMOIS           CHAR (09) VAR, ########################################        
      2 LTDATE           CHAR (30) VAR, ########################################        
         
      2 JJMMAA_P6        PIC '(06)9',        
      2 AAMMJJ_P6        PIC '(06)9',        
      2 SAAMMJJ_P7       PIC '(07)9',        
      2 SJJMMAA_P7       PIC '(07)9',        
      2 JJMMAAAA_P8      PIC '(08)9',        
      2 AAAAMMJJ_P8      PIC '(08)9',        
         
      2 JJMMAA_C6        CHAR (06),        
      2 AAMMJJ_C6        CHAR (06),        
      2 SAAMMJJ_C7       CHAR (07),        
      2 SJJMMAA_C7       CHAR (07),        
      2 JJMMAAAA_C8      CHAR (08),        
      2 AAAAMMJJ_C8      CHAR (08),        
         
      2 S_P1             PIC '(01)9',        
      2 JJ_P2            PIC '(02)9',        
      2 MM_P2            PIC '(02)9',        
      2 AA_P2            PIC '(02)9',        
      2 SAA_P3           PIC '(03)9',        
      2 AAAA_P4          PIC '(04)9',        
      2 JJ_MM_AA_P8      PIC '99/99/99',        
      2 JJ_MM_AAAA_P10   PIC '99/99/9999',        
         
      2 JJ_MM_AAAA_C10   CHAR (10),        #############################################        
         
      2 LTJOUR           CHAR (15) VAR, ########################################        
         
      2 FILLER           CHAR (115);        
         
         
 /********************************************************************/        
 /*                                                                  */        
 /* METHODE :                                                        */        
 /*    - VALID_DATE            : VALIDATION D'UNE DATE               */        
 /*    - VALID_DATE_ECH        : VALIDATION D'UNE DATE <= A DATE JOUR*/        
 /*    - VALID_DATE_POST       : VALIDATION D'UNE DATE >= A DATE JOUR*/        
 /*    - FORMAT_DATE           : FORMATAGE DES DATES                 */        
 /*                                                                  */        
 /*    - DIFF_2_DATES_365      : CALCUL NOMBRE DE JOURS ENTRE 2 DATES*/        
 /*                            :  SANS LES ANNEES BISSEXTILES        */        
 /*    - DIFF_2_DATES_366      : CALCUL NOMBRE DE JOURS ENTRE 2 DATES*/        
 /*                            :  AVEC LES ANNEES BISSEXTILES        */        
 /*                            :  + NBR ANNEES, NBR MOIS, NBR JOURS  */        
 /*    - DIFF_2_DATES_372      : CALCUL NOMBRE DE JOURS ENTRE 2 DATES*/        
 /*                            :  AVEC TOUS LES MOIS A 31 JOURS      */        
 /*    - DIFF_2_DATES_HEURES   : CALCUL DU NOMBRE D'HEURES, MINUTES, */        
 /*                            :  SECONDES ENTRE 2 DATES             */        
 /*                                                                  */        
 /*    - DIFF_2_DATES_OUV      : CALCUL DU NOMBRE DE JOURS OUVRABLES */        
 /*                            :  ET NON OUVRABLES ENTRE 2 DATES     */        
 /*                            :  DU LUNDI AU VENDREDI INCLUS        */        
 /*                            :  DATES LIMITES INCLUSES             */        
 /*                                                                  */        
 /*    - DIFF_2_DATES_OUV_SAM  : CALCUL DU NOMBRE DE JOURS OUVRABLES */        
 /*                            :  ET NON OUVRABLES ENTRE 2 DATES     */        
 /*                            :  DU LUNDI AU SAMEDI INCLUS          */        
 /*                            :  DATES LIMITES INCLUSES             */        
 /*                                                                  */        
 /*    - DATE_PLUS_DUREE       : AJOUT NBR JOURS/MOIS/ANNEE A 1 DATE */        
 /*    - DATE_MOINS_DUREE      : ENLEVE NBR JOURS/MOIS/ANNEE A 1 DATE*/        
 /*                                                                  */        
 /*    - DATE_DU_JOUR          : RENVOI LA DATE DU JOUR              */        
 /*                                                                  */        
 /*    - DATE_EN_JOUR_JULIEN   : CALCUL DU JOUR JULIEN SUIVANT DATE  */        
 /*    - JOUR_JULIEN_EN_DATE   : CALCUL LA DATE SUIVANT JOUR JULIEN  */        
 /*                                                                  */        
 /*    - NUMERO_SEMAINE        : CALCUL LE NUMERO DE LA SEMAINE      */        
 /*                                                                  */        
 /*    - DATE_SEMAINE          : CALCUL DU LUNDI DE LA SEMAINE       */        
 /*                            : DEMANDEE                            */        
 /*                                                                  */        
 /*    - VERIF_DATE_FIN_MOIS   : VERIFICATION D'UNE DATE FIN DE MOIS */        
 /*    - AVOIR_DATE_FIN_MOIS   : AVOIR UN DATE DE FIN DE MOIS        */        
 /*                                                                  */        
 /*    - COMPARE_DATES         : COMPARAISON ENTRE 2 DATES           */        
 /*                                                                  */        
 /*    - DATE_PLUS_JJ_OUV      : AJOUT NBR JOURS OUVRABLES A UNE DATE*/        
 /*    - DATE_MOINS_JJ_OUV     : ENLEVE NBR JOURS OUVRABLES A UNE DATE*/        
 /*                                                                  */        
 /* ATTENTION :                                                      */        
 /*    TOUTES METHODES VALIDENT LA DATE D'ENTREE                     */        
 /*    TOUTES METHODES RENVOIENT LE FORMATAGE DE LA DATE             */        
 /*         - SOIT D'ENTREE                                          */        
 /*         - SOIT DE SORTIE EN CAS DE CALCUL                        */        
 /*         - SOIT LA PREMIERE DATE D'ENTREE POUR LES COMPARAISONS   */        
 /*                                                                  */        
 /* NB :                                                             */        
 /*    LES METHODES 'DIFF_2_DATES_XXX' DONNENT COMME RESULTAT        */        
 /*    1 JOUR ENTRE LE 1 MAI ET LE 2 MAI                             */        
 /*                                                                  */        
 /********************************************************************/        
 /*                                                                  */        
 /* MESSAGE D'ERREUR (KWB001.CDRTPGM = $LTNMPRJ !! 'XXX')            */        
 /*------------------------------------------------------------------*/        
 /*                                                                  */        
 /*    001 : LA METHODE N'EXISTE PAS                                 */        
 /*    002 : LE FORMAT N'EXISTE PAS                                  */        
 /*    003 : DATE NON CONFORME                                       */        
 /*    004 : CODE INCORRECT - INTERNE AU PROGRAMME                   */        
 /*    005 : ANNEE DIFFERENTE DE 18XX, 19XX, 20XX OU 21XX            */        
 /*           (VALABLE UNIQUEMENT POUR LA DATE EN 6 POSITIONS)       */        
 /*    006 : DATE INVALIDE                                           */        
 /*    007 : NOMBRE DE JOURS INCORRECT                               */        
 /*    008 : ANNEE INCORRECTE                                        */        
 /*    009 : JOUR JULIEN INCORRECT                                   */        
 /*    010 : ANNEE NON ENCODEE DANS TABLEAU JOURS FERIES             */        
 /*    011 : DATE ENCODEE OU DATE RESULTAT EST SOIT INFERIEURE       */        
 /*           A 1800 SOIT SUPERIEURE A 2799                          */        
 /*    012 : NUMERO DE LA SEMAINE INFERIEURE A 1 OU SUPERIEURE A 53  */        
 /*    013 : PAS DE COMPARAISON ENTRE 2 DATES EN 6 POSITIONS         */        
 /*                                                                  */        
 /********************************************************************/        
         
         
 DCL KGI012 ENTRY;            #####################################################        
 /*********************************************************************/        
 /* INTERFACE : KGI012J POUR LES METHODES DE TRAITEMENT DES MONTANTS  */        
 /*********************************************************************/        
 /*********************************************************************/        
 /* ATTENTION : TDMSLE - LOGIQUE PREVUE EN FRANCAIS UNIQUEMENT        */        
 /* 06/06/2002            AU NIVEAU DU MONTANT EN LETTRE              */        
 /*********************************************************************/        
         
 DCL 1 KGI012J,        
      2 INPUT        CHAR (300),    ################################################        
      2 OUTPUT       CHAR (600);    ################################################        
         
 /*********************************************************************/        
 /*                                                                   */        
 /*             REDEFINITION EN INPUT                                 */        
 /*                                                                   */        
 /*********************************************************************/        
         
 DCL 1 KGI012J_RI BASED(ADDR(KGI012J.INPUT)),        
    /* ----- FORMAT D'ENTREE OBLIGATOIRE ---- */        
     /* CHAMPS PERMETTANT LE TRAITEMENT SUIVANT LA METHODE */        
      2 CDFMTMT     CHAR (20),     #################################################        
      2 MTIN_F15    FIXED (15),    ################################################        
         
      2 LTIN_C25    CHAR (25) VAR, #############################################        
                                   /*  + EVENTUELLEMENT              */        
                                   /*    + LA VIRGULE                */        
                                   /*    + LA DEVISE (AVANT/APRES)   */        
                                   /*    + LE SIGNE  (AVANT/APRES)   */        
         
      2 NBDECIN     FIXED (02),    ################################################        
                                   /*  OBLIGATOIRE                   */        
         
      2 CDMSKOUT    CHAR (11),     #################################################        
                                   /*  EN SORTIE                     */        
         
      2 CDDVTRN     CHAR (03),     #################################################        
      2 CDLGTRN     PIC '9',       ###################################################        
         
      2 NBLENOUT    FIXED (03),    ################################################        
                                   /*  MAX 26 POUR LE MASQUE         */        
                                   /*  MIN 20 POUR LES LETTRES       */        
                                   /*   -> SEPARATEUR APRES 'NBLENOUT*/        
                                   /* SI =0 ALORS UTILISATION DE LA  */        
                                   /*   TAILLE NECESSAIRE            */        
         
      2 TBEGCOD (32)     BIT (01),    #############################################        
           /*   BIT  1 : VALABLE POUR LA VALIDATION ET LE FORMATAGE  */        
           /*             MAIS TOUJOURS UNE VIRGULE EN SORTIE        */        
           /*   BIT  1 : 0 = MONTANT AVEC VIRGULE COMME SEPARATEUR   */        
           /*                 DE DECIMALE                            */        
           /*            1 = MONTANT AVEC POINT OU VIRGULE           */        
           /*                 COMME SEPARATEUR DE DECIMALE           */        
           /*                                                        */        
           /*   BIT  2 : VALABLE UNIQUEMENT POUR LE FORMATAGE        */        
           /*   BIT  2 : 0 = NBDECIN = NBR DECIMALE EN ENTREE        */        
           /*                 OBLIGATOIRE                            */        
           /*            1 = NBDECIN = NBR DECIMALE EN ENTREE        */        
           /*                 MAXIMALE ENCODEE                       */        
           /*                                                        */        
           /*   BIT  3 : VALABLE UNIQUEMENT POUR LE FORMATAGE        */        
           /*   BIT  3 : 0 = VALEUR MONETAIRE SANS CHANGEMENT        */        
           /*                 MTMNT_F15 - SANS MODIF NOMBRE DECIMALE */        
           /*                 ENCODE                                 */        
           /*            1 = VALEUR MONETAIRE EN ENTIER MTMNT_F15    */        
           /*                 - AVEC MODIF NOMBRE DECIMALE ENCODE    */        
           /*                                                        */        
           /*   BIT  4 : VALABLE POUR LE FORMATAGE DES MONTANTS NULS */        
           /*             AVEC P OU B POUR LA POSITION 5             */        
           /*   BIT  4 : 0 = MONTANT NUL -> AFFICHAGE DE BLANCS      */        
           /*            1 = MONTANT NUL -> AFFICHAGE 0,XX SUIVANT   */        
           /*                 LE NOMBRE DE CHIFFRES APRES LA VIRGULE */        
           /*                                                        */        
           /*   BIT  4 : VALABLE POUR LE FORMATAGE DES MONTANTS NULS */        
           /*             AVEC Z POUR LA POSITION 5                  */        
           /*   BIT  4 : 0 = MONTANT NUL -> AFFICHAGE 0,XX SUIVANT   */        
           /*                 LE NOMBRE DE CHIFFRES APRES LA VIRGULE */        
           /*            1 = MONTANT NUL -> AFFICHAGE DE BLANCS      */        
           /*                                                        */        
           /*   BIT  5 : VALABLE ACCEPTATION MONTANT POSITIF         */        
           /*             UNIQUEMENT                                 */        
           /*   BIT  5 : 0 = MONTANT POSITIF ET NEGATIF ACCEPTE      */        
           /*            1 = MONTANT POSITIF UNIQUEMENT              */        
           /*                                                        */        
           /*   BIT  6 : VALABLE ACCEPTATION OU REFUS MONTANT        */        
           /*             NUL                                        */        
           /*   BIT  6 : 0 = MONTANT NUL ACCEPTE                     */        
           /*            1 = MONTANT NUL REFUSE                      */        
           /*                                                        */        
           /*   BIT  7 : VALABLE ACCEPTATION OU REFUS MONTANT        */        
           /*             .99 AU LIEU DE 0.99                        */        
           /*   BIT  7 : 0 = MONTANT 0.99 OBLIGATOIRE                */        
           /*            1 = MONTANT .99 ET 0.99 ACCEPTE             */        
           /*                                                        */        
           /*   BIT  8 : SUPPRESSION DU 1ER SEPARATEUR (EXTREME GCHE)*/        
           /*           QUAND DEPASSEMENT D'UN CHIFFRE (ERREUR '006')*/        
           /*           EX : 1234.567.890,12 AU LIEU DE              */        
           /*             1.234.567.890,12                           */        
           /*           MASQUE = $....12V02$                         */        
           /*          ATTENTION : UNIQUEMENT AVEC SEPARATEUR        */        
           /*   BIT  8 : 0 = MONTANT 1.234.567.890,12 ERREUR CLASSIQ.*/        
           /*            1 = MONTANT 1234.567.890,12 AUCUNE ERREUR   */        
           /*                                                        */        
         
      2 FILLER      CHAR (222);        
         
 /*********************************************************************/        
 /*                                                                   */        
 /*             REDEFINITION EN OUTPUT                                */        
 /*                                                                   */        
 /*********************************************************************/        
         
 DCL 1 KGI012J_RO BASED(ADDR(KGI012J.OUTPUT)),        
    /* FORMAT DE SORTIE */        
      2 LTMNT_C26   CHAR (26) VAR, #############################################        
                                   /*  CADRAGE A GAUCHE SUIVANT      */        
                                   /*  LA LONG. DE 'NBLENOUT'        */        
         
      2 MTMNT_F15   FIXED (15),    ################################################        
      2 NBDECOUT    FIXED (02),    ################################################        
                                   /*  AVEC LE FIXED (15)            */        
         
      2 LTMTLET_C250 CHAR (250) VAR, ###########################################        
         
      2 FILLER      CHAR (310);        
         
         
 /********************************************************************/        
 /*                                                                  */        
 /* METHODE :                                                        */        
 /*    - VALID_MONTANT         : VALIDATION DU MONTANT               */        
 /*                                                                  */        
 /*    - FORMATAGE             : FORMATAGE SUIVANT LE MASQUE         */        
 /*                            :  (UN SEUL FORMAT PAR MASQUE EN      */        
 /*                            :   SORTIE)                           */        
 /*                                                                  */        
 /*    - CONVERT_EN_LETTRES    : CONVERSION D'UN MONTANT EN LETTRES  */        
 /*                                                                  */        
 /* ATTENTION :                                                      */        
 /*    TOUTES METHODES VALIDENT LE MONTANT EN ENTREE                 */        
 /*    TOUTES METHODES DOIVENT ALIMENTER 'NBDECIN'                   */        
 /*    UTILISATION DU CODE DEVISE VENANT DE IEU001 SI CDDVTRN NON    */        
 /*        INITIALISE                                                */        
 /*                                                                  */        
 /********************************************************************/        
 /********************************************************************/        
 /* MASQUE CDMSKOUT :                                                */        
 /*                                                                  */        
 /*    - POS 1    : $ TOUJOURS                                       */        
 /*    - POS 2    : DEVISE                                           */        
 /*                   -> G : AVEC DEVISE A GAUCHE DU MONTANT         */        
 /*                   -> D : AVEC DEVISE A DROITE DU MONTANT         */        
 /*                   -> B : SANS DEVISE                             */        
 /*    - POS 3,4  : SIGNE DEVANT OU DERRIERE LE MONTANT              */        
 /*                   -> SG : TOUJOURS LE SIGNE A GAUCHE DU MONTANT  */        
 /*                   -> SD : TOUJOURS LE SIGNE A DROITE DU MONTANT  */        
 /*                   -> -G : AFFICHE - A GAUCHE DU MONTANT SI < 0   */        
 /*                   -> -D : AFFICHE - A DROITE DU MONTANT SI < 0   */        
 /*                   -> BB : N'AFFICHE JAMAIS LE SIGNE              */        
 /*    - POS 5    : PRESENTATION DES MONTANTS POUR LES ZEROS NON     */        
 /*               :  SIGNIFICATIFS ET LES SEPARATEURS DE MILLIERS    */        
 /*                   -> Z : AFF. 0 SI MONTANT NUL - SANS SEPARATEUR */        
 /*                   -> * : AFF. * SI MONTANT NUL - SANS SEPARATEUR */        
 /*                        :  TOUJOURS SANS SIGNE FORCE SIGNE = AA   */        
 /*                   -> P : AFFICHE DES . COMME SEPARATEUR          */        
 /*                        :  TOUJOURS DES BLANCS SI MONTANT NUL     */        
 /*                   -> B : AFFICHE DES BLANCS COMME SEPARATEUR     */        
 /*                        :  TOUJOURS DES BLANCS SI MONTANT NUL     */        
 /*    - POS 6,7  : NOMBRE DE CARACTERES AVANT LA VIRGULE            */        
 /*               :  Y COMPRIS LES . OU LES ESPACES                  */        
 /*               :  MAX 19 CARACTERES - MINIMUM 1 CARACTERE         */        
 /*    - POS 8    : V TOUJOURS                                       */        
 /*    - POS 9,10 : NOMBRE DE CHIFFRES APRES LA VIRGULE (MAX (14)    */        
 /*    - POS 11   : $ TOUJOURS                                       */        
 /*                                                                  */        
 /********************************************************************/        
 /********************************************************************/        
 /*                                                                  */        
 /* MESSAGE D'ERREUR (JWB001.CDRTPGM = $LTNMPRJ !! 'XXX')            */        
 /*------------------------------------------------------------------*/        
 /*                                                                  */        
 /*    001 : LA METHODE N'EXISTE PAS                                 */        
 /*    002 : LE CODE DEVISE N'EXISTE PAS                             */        
 /*    003 : LE MASQUE INCORRECT                                     */        
 /*    004 : CODE INCORRECT - INTERNE AU PROGRAMME                   */        
 /*    005 : MONTANT INVALIDE                                        */        
 /*    006 : LA ZONE 'ENTIER' DU MASQUE EST TROP PETITE POUR         */        
 /*        :  CONTENIR LE MONTANT                                    */        
 /*    007 : LA ZONE RECEPTRICE EST TROP PETITE                      */        
 /*    008 : LA TAILLE DU MASQUE EST > A LA TAILLE DE LA VARIABLE    */        
 /*        :  DE RECEPTION                                           */        
 /*    009 : LA NOMBRE DE DECIMALE EST < A 0 OU > 14                 */        
 /*    010 : LA TAILLE DONNEE EST TROP PETITE                        */        
 /*    011 : LE CODE LANGUE DEMANDE N'EST PAS TRAITE                 */        
 /*    012 : LE NOMBRE DE DECIMALE EST TROP GRAND                    */        
 /*    013 : LE CODE FORMAT N'EXISTE PAS                             */        
 /*    014 : LE NBR DECIMALE ATTENDU NE CORRESPOND PAS AU NBR RECU   */        
 /*    015 : LE MONTANT EST NEGATIF - REFUSE                         */        
 /*    016 : LE MONTANT EST NUL - REFUSE                             */        
 /*                                                                  */        
 /********************************************************************/        
         
         
 DCL KGI006 ENTRY;            #####################################################        
 /***********************************************************/        
 /* INTERFACE DU SERVICE DES TABLES                         */        
 /***********************************************************/        
         
 DCL 1  KGI006J,        
      2  PTRPCB,        
       3 DEU02PCB            PTR,        
       3 DBTABPCB            PTR,        
       3 DBLOG1PCB           PTR,        
       3 DBLOG2PCB           PTR,        
         
      2  INPUT,        
       3 TBTXCOD     CHAR (04),     #################################################        
       3 TBTXA01     CHAR (20),     #################################################        
       3 TBTXA02     CHAR (20),     #################################################        
       3 CDDFSEG     CHAR (08),     #################################################        
       3 CDDFSE2     CHAR (08),     #################################################        
       3 GITAB       PTR,           #######################################################        
       3 GISTAB      PTR,           #######################################################        
       3 DBTABLE,        
        4 LTSGTAB     CHAR(08),     ########################################        
        4 LTSGSTAB    CHAR(08),     ########################################        
        4 CDDFTAB     CHAR(08),     ########################################        
       3 EXPLORE,        
        4 NBITEXP    BIN FIXED,     #################################################        
       3 FILLER      CHAR(100),     #################################################        
         
      2 OUTPUT,        
       3 NBELMTB     BIN FIXED,     #################################################        
       3 GITAB       PTR,           #######################################################        
       3 GISTAB      PTR;           #######################################################        
         
 /* RELEVE DES DIFFERENTES METHODES D'ACCES AU SERVICE          */        
 /* LES PARAMETRES   TBTXCOD   ET   CDDFSEG   SONT OBLIGATOIRES */        
 /* POUR TOUTES LES METHODES                                    */        
         
  /*******************************************************************/        
  /* METHODE              * ENTREE                  * SORTIE         */        
  /*******************************************************************/        
  /*- LECTURE TABLE AVEC CLE                                         */        
  /* READ_TAB             * TBTXA01                 * GITAB(1)       */        
  /*                      *                         *                */        
  /*- LECTURE TABLE A PARTIR DE LA CLE (>=)                          */        
  /* READ_TAB_FIRST       *-                        * GITAB(1)       */        
  /*                      *-TBTXA01                 * GITAB(1)       */        
  /*                      *                         *                */        
  /*- LECTURE TABLE AVEC BLOCAGE DU SEGMENT                          */        
  /* READ_TAB_HOLD        * TBTXA01                 * GITAB(1)       */        
  /*                      *                         *                */        
  /*- LECTURE SOUS-TABLE AVEC CLES TABLE & SOUS-TABLE                */        
  /* READ_STAB            * TBTXA01/TBTXA02         * GISTAB(1)      */        
  /*                      *                         *                */        
  /*- LECTURE SOUS-TABLE AVEC CLE SOUS-TABLE-POSITIONNEMENT EFFECTUE */        
  /* READ_STAB_POSIT      * TBTXA02                 * GISTAB(1)      */        
  /*                      *                         *                */        
  /*- LECTURE TABLE ET SOUS-TABLE AVEC CLES                          */        
  /* READ_BOTH            * TBTXA01/TBTXA02/CDDFSE2 * GITAB(1)/      */        
  /*                      *                         * GISTAB(1)      */        
  /*                      *                         *                */        
  /*- LECTURE TABLE, SEGMENT SUIVANT                                 */        
  /* READ_TAB_NEXT        * TBTXA01                 * GITAB(1)       */        
  /*                      *                         *                */        
  /*- LECTURE SOUS-TABLE, SEGMENT SUIVANT                            */        
  /* READ_STAB_NEXT       * TBTXA01/TBTXA02         * GISTAB(1)      */        
  /*                      *                         *                */        
  /*- LECTURE SOUS-TABLE, SEGMENT SUIVANT (POSITIONNEMENT EFFECTUE)  */        
  /* READ_STAB_NEXT_POSIT *-                        * GISTAB(1)      */        
  /*                      *-TBTXA02                 * GISTAB(1)      */        
  /*                      *                         *                */        
  /*- EXPLORATION TABLE                                              */        
  /* EXPLO_TAB            *-TBTXCOD                 * GITAB(NBELMTB)/*/        
  /*                      *-TBTXA01/NBSEGMT         * NBELMTB        */        
  /*                      *                         *                */        
  /*- EXPLORATION TABLE (SEGMENT SUIVANT)                            */        
  /* EXPLO_TAB_NEXT       * TBTXA01/NBSEGMT         * GITAB(NBELMTB)/*/        
  /*                      *                         * NBELMTB        */        
  /*- EXPLORATION SOUS-TABLE                                         */        
  /* EXPLO_STAB           *-TBTXA01/NBITEXP         *                */        
  /*                      *                         *                */        
  /*- EXPLORATION SOUS-TABLE (SEGMENT SUIVANT)                       */        
  /* EXPLO_STAB_NEXT      *                         *                */        
  /*                      *                         *                */        
  /*- CREATION TABLE                                                 */        
  /* ISRT_TAB             * GITAB                   *                */        
  /*                      *                         *                */        
  /*- CREATION SOUS-TABLE                                            */        
  /* ISRT_STAB            * TBTXA01/GISTAB          *                */        
  /*                      *                         *                */        
  /*- CREATION SOUS-TABLE (POSITIONNEMENT TABLE DEJA EFFECTUE)       */        
  /* ISRT_STAB_POSIT      * GISTAB                  *                */        
  /*                      *                         *                */        
  /*- MODIFICATION TABLE                                             */        
  /* REPL_TAB             * TBTXA01/GITAB           *                */        
  /*                      *                         *                */        
  /*- MODIFICATION SOUS-TABLE                                        */        
  /* REPL_STAB            * TBTXA01/TBTXA02/GISTAB  *                */        
  /*                      *                         *                */        
  /*- MODIFICATION SOUS-TABLE (POSITIONNEMENT TABLE EFFECTUE)        */        
  /* REPL_STAB_POSIT      * TBTXA02/GISTAB          *                */        
  /*                      *                         *                */        
  /*- SUPPRESSION TABLE                                              */        
  /* DLET_TAB             * TBTXA01                 *                */        
  /*                      *                         *                */        
  /*- SUPPRESSION SOUS-TABLE                                         */        
  /* DLET_STAB            * TBTXA01/TBTXA02         *                */        
  /*                      *                         *                */        
  /*- SUPPRESSION SOUS-TABLE (POSITIONNEMENT TABLE EFFECTUE)         */        
  /* DLET_STAB_POSIT      * TBTXA02/GISTAB          *                */        
  /*                      *                         *                */        
  /*******************************************************************/        
         
         
 DCL XS1483  ENTRY; ##################################################        
         
 /*********************************************************************/        
 /*                                                                   */        
 /*       INTERFACE ROUTINE XS1483 : RECHERCHE ADRESSE E-MAIL         */        
 /*                                                                   */        
 /*********************************************************************/        
         
 /* ----------------------------------------------------------------- */        
 /* 08/08/2000 ! TDMROO ! CREATION                                    */        
 /* ----------------------------------------------------------------- */        
         
 /* ----------------------------------------------------------------- */        
 /*  CDRTPGM =  0 :                                                   */        
 /*             1 : AFFILE INEXISTANT                                 */        
 /*             2 : ADRESSE E-MAIL INEXISTANTE                        */        
 /*             9 : ERREUR DL1                                        */        
 /* ----------------------------------------------------------------- */        
         
 /* ----------------------------------------------------------------- */        
 /* MODE D'EMPLOI                                                     */        
 /* _____________                                                     */        
 /*                                                                   */        
 /* VARIABLE D'ENTREE = NOIDAFF DECLARE EN FIXED(7)                   */        
 /*                                                                   */        
 /* VARIABLE DE SORTIE = CHAR(50)                                     */        
 /* ----------------------------------------------------------------- */        
         
 DCL 1 JS1324,        
 /*-------------------- E N T R E E ----------------------------------*/        
       2 PTRPCB,                         #############################################        
         3 DS137PCB       PTR,           ##############################################        
       2 ENTREE,        
         3 NOIDAFF        FIXED(07),     ########################################        
 /*-------------------- S O R T I E ----------------------------------*/        
       2 SORTIE,        
         3 LTADEML        CHAR(50),      #########################################        
       2 RETURN_CODE,        
         3 CDRTPGM        CHAR(01),      #########################################        
         3 DBPTR          PTR,           #############################################        
         3 LASTDLI        CHAR(10);      ########################################        
         
 DCL KS1005  ENTRY;        
 /***********************************************************/        
 /* INTERFACE DU SERVICE SIGNALETIQUE AFFILIE               */        
 /*                                                         */        
 /***********************************************************/        
         
    /* LIMITE TABL.RELATIONS (RELAT)  */        
    /* LIMITE TABL.RELATIONS (CLREL)  */        
    /* LIMITE TABL.HISTORIQUES        */        
    /* LIMITE ADRESSES E-MAIL         */        
    /* LIMITE ENSEMBLES               */        
    /* LIMITE PRODUITS                */        
    /* LIMITE POLICES                 */        
    /* LIMITE DEVIS                   */        
         
 DCL 1 KS1005J,        
      2  PTRPCB,        
       3 DEU02PCB          PTR,     ###############################################        
       3 DS101PCB          PTR,     ###############################################        
       3 DS102PCB          PTR,     ###############################################        
       3 DS128PCB          PTR,     ###############################################        
       3 DS129PCB          PTR,     ###############################################        
       3 DS132PCB          PTR,     ###############################################        
       3 DS134PCB          PTR,     ###############################################        
       3 DS137PCB          PTR,     ###############################################        
 /*******************************************************************/        
      2  INPUT,        
 /*******************************************************************/        
 /*  SEGMENT AFFILIE                                                */        
 /*******************************************************************/        
       3 AFFIL_I,        
 /*K*/  4 NOIDAFF  DEC FIXED(7),  /*NO!  !NUMERO D'AFFILIE          */        
        4 LTNMAFF  CHAR(30),      ##################################################        
        4 CDRSAFF  CHAR(1),       ###################################################        
        4 CDSEXAF  CHAR(1),       ###################################################        
        4 DANAIAF  DEC FIXED(10), #############################################        
        4 CDLGEAF  CHAR(1),       ###################################################        
        4 NORULOC  DEC FIXED(7),  ##############################################        
        4 NOHA1AF  BIN FIXED(15), #############################################        
        4 NOHA2AF  CHAR(4),       ###################################################        
        4 CDEGCOU  CHAR(1),       ###################################################        
        4 TBEGCOD  BIT(40),       ###################################################        
                                  /*--!  !01 : PROFESSION           */        
                                  /*--!  !02 : EXTENSION DU NOM     */        
                                  /*--!  !03 : LIEU DE NAISSANCE    */        
                                  /*--!  !04 : INSPECTEUR-CPT-FACT. */        
                                  /*--!  !05 : MOTIF DE LA MODIF.   */        
                                  /*--!  !06 : NOM CONDENSE MEMBRE  */        
                                  /*--!  !07 : NOM CONJOINT EN MEGA */        
                                  /*--!  !08 : NUMERO PIC DU CCB    */        
                                  /*--!  !09 : --- VIDE --9/11/2000 */        
                                  /*--!  !10 : TELEPHONE EMPLOYEUR  */        
                                  /*--!  !11 : NO AFFILIE AUTRE SOC */        
                                  /*--!  !12 : REFERENCE CHGT ADR.  */        
                                  /*--!  !13 : REF. DE LA M-A-J     */        
                                  /*--!  !14 : 1 PARTIE NOM DU MBRE */        
                                  /*--!  !15 : 2 PARTIE NOM DU MBRE */        
                                  /*--!  !16 : --- VIDE --9/11/2000 */        
                                  /*--!  !17 : MATRICULE CIE LGCP   */        
                                  /*--!  !18 : PRESENCE RELATIONS   */        
                                  /*--!  !19 : NO DOMICILIATION     */        
                                  /*--!  !20 :                      */        
                                  /*--!  !21 : INFOS ACCIDENTS      */        
                                  /*--!  !22 : NOM COMPTE TIERS     */        
                                  /*--!  !23 : INFO CAISSE AG       */        
                                  /*--!  !24 : QUALITE DELEGUE AG   */        
                                  /*--!  !25 : AFF.AMEL A BLANC     */        
        4 TBTYPAF  BIT(240),      ##################################################        
                                  /*--!  !VOIR DEFINITION IPS1006   */        
                                  /*--!  !01 : AFFILIE SECONDAIRE   */        
                                  /*--!  !02 : AFFILIE PRINCIPAL    */        
                                  /*--!  !03 : BILINGUE FRANCAIS    */        
                                  /*--!  !04 : BILINGUE NEERLANDAIS */        
                                  /*--!  !11 : EPOUX DE ...         */        
                                  /*--!  !12 : EPOUDE DE ...        */        
                                  /*--!  !13 : ENFANT DE ...        */        
                                  /*--!  !14 : PARENT DE ...        */        
                                  /*--!  !15 : CONCUBIN DE ...      */        
                                  /*--!  !16 : CONCUBINE DE ...     */        
                                  /*--!  !17 : DIVERS DE ...        */        
                                  /*--!  !18 : DIVERSES DE ...      */        
                                  /*--!  !29 : CLIENT A REFUSER     */        
                                  /*--!  !30 : CHGT ADRESSE EN COUR */        
                                  /*--!  !31 : VIP                  */        
                                  /*--!  !32 : VIP TRES INPORTANT   */        
                                  /*--!  !33 : PAS D'AGENDA         */        
                                  /*--!  !34 : CLIENT CCB           */        
                                  /*--!  !35 : CLIENT PASSIF        */        
                                  /*--!  !36 : MEMBRE DU PERSONNEL  */        
                                  /*--!  !37 : PAS DE MAILING       */        
                                  /*--!  !38 : CLIENT A SURVEILLER  */        
                                  /*--!  !39 : EXPERT AUTO ^AUTOMAT */        
                                  /*--!  !40 : CONVENTION DE GESTIO */        
                                  /*--!  !41 : CLIENT FICTIF        */        
                                  /*--!  !42 : MEMO                 */        
                                  /*--!  !43 : CHGT D'ADRESSE EN CO */        
                                  /*--!  !44 : AFFILIE PERIME       */        
                                  /*--!  !45 : CONTENTIEUX          */        
                                  /*--!  !46 : CLUB BLOSO           */        
                                  /*--!  !47 : MEMBRE VLB           */        
                                  /*--!  !48 : PAS DE TP INFORMEX   */        
                                  /*--!  !49 : FONCTIONNAIRE CEE    */        
                                  /*--!  !50 : A NE PAS RAPPELER    */        
                                  /*--!  !51 : ADRESSE SOPRESS      */        
                                  /*--!  !52 : CONTRAT BILINGUE     */        
                                  /*--!  !53 : AFFILIE DECEDE       */        
                                  /*--!  !54 : PRODUCTION FICTIVE   */        
                                  /*--!  !55 : GESTION PROTEGEE     */        
                                  /*--!  !56 : CLIENT CGFP          */        
                                  /*--!  !57 : CELLULE DE DISTRIBUT */        
                                  /*--!  !58 : GESTION SIN. DEDICAE */        
                                  /*--!  !60 : DOCUMENT EURO/DEFAUT */        
                                  /*--!  !61 : PROSPECT             */        
                                  /*--!  !62 : SUIVI GESTIONNAIRE   */        
                                  /*--!  !63 : MEMBRE               */        
                                  /*--!  !64 : FAUX-MEMBRE          */        
                                  /*--!  !65 : IMPOSABLE            */        
                                  /*--!  !72 : ACTIF DEFINITIF      */        
                                  /*--!  !73 : ACTIF TEMPORAIRE     */        
                                  /*--!  !74 : INACTIF              */        
                                  /*--!  !75 : RETRAITE             */        
                                  /*--!  !76 : UTILISATEUR EXTERNE  */        
                                  /*--!  !77 : FONCTIONNAIRE        */        
                                  /*--!  !78 : CTRL RSQ : W=BLOQUE  */        
                                  /*--!  !79 : CTRL RSQ : S=SURVEIL */        
                                  /*--!  !80 : SMAP-INFOS           */        
                                  /*--!  !81 : FICHE PERSONNELLE V  */        
                                  /*--!  !82 : NOUV. ADR. INCONNUE  */        
                                  /*--!  !83 : BENEFICIE DE 3 APPEL */        
                                  /*--!  !     AU CC JURIDIQUE LEGI */        
                                  /*--!  !84:FAIT PART. D'1 AFFINIT */        
                                  /*--!  !85:VIE PURE (AME)         */        
                                  /*--!  !86:ENVOI ENQUETE MIEUX... */        
                                  /*--!  !87:RETOUR ENQ. MIEUX...   */        
                                  /*--!  !88:RETOUR ENQ.MIEUX+SIGN. */        
                                  /*--!  !89 : SPONSORING (VIP)     */        
        4 NOTL1AF  DEC FIXED(3),  ##############################################        
        4 NOTL2AF  DEC FIXED(9),  ##############################################        
        4 NONATAF  DEC FIXED(11), #############################################        
        4 DADERMJ  DEC FIXED(7),  ##############################################        
        4 CDLGRUE  CHAR(1),       ###################################################        
        4 NOAF1EX  DEC FIXED(7),  ##############################################        
        4 NOAF2EX  BIN FIXED(15), #############################################        
        4 CDPOGEO  DEC FIXED(7),  ##############################################        
        4 NBFICDO  BIN FIXED(15), #############################################        
        4 FILL_01  CHAR(50),      ##################################################        
 /*****************************************************************/        
 /* SEGMENT ENTETE POLICE                                         */        
 /*****************************************************************/        
       3 POLIC_I,        
 /*K*/  4 NOIDAFF  DEC FIXED(7),   /*NO!  !NUMERO D'AFFILIE          */        
 /*K*/  4 NOIDPOL  DEC FIXED(8),   /*NO!  !NO. DE POLICE             */        
        4 CDTYPOL  CHAR(2),        ####################################################        
        4 CDLGPOL  CHAR(1),        ####################################################        
        4 CDETAPO  CHAR(1),        ####################################################        
                                   /*--!  !A : ACTIVE                */        
                                   /*--!  !C : CLOTUREE / ANNULEE    */        
                                   /*--!  !P : PASSIVE / EN ATTENTE  */        
                                   /*--!  !S : SUSPENDUE/SANS SUITE  */        
        4 CDCMPRO  CHAR(1),        ####################################################        
        4 CDCMGES  CHAR(8),        ####################################################        
        4 NUSOUPO  DEC FIXED(4),   ###############################################        
                                   /*--!  !EN IE, VAUT 9999 POUR LE  */        
                                   /*--!  !NUMERO DE CI 000000       */        
        4 CDINSPO  CHAR(2),        ####################################################        
        4 CDINTAG  DEC FIXED(7),   ###############################################        
                                   /*--!  !A REMPLACER PAR CDAGINT   */        
        4 NOINTPO  CHAR(12),       ###################################################        
        4 CDMODPA  CHAR(1),        ####################################################        
        4 CDREAPO  CHAR(1),        ####################################################        
        4 CDGAGPO  CHAR(1),        ####################################################        
        4 NODERAV  DEC FIXED(3),   ###############################################        
        4 NBEXEPO  DEC FIXED(3),   ###############################################        
        4 NODOMPO  DEC FIXED(10),  ##############################################        
        4 NOCPTPO  DEC FIXED(10),  ##############################################        
        4 CDEGAPO  CHAR(1),        ####################################################        
        4 TBCDPOL(24)  BIT(1),     #################################################        
                                   /*--!  !01: POLICE COURT TERME    */        
                                   /*--!  !02: FACT MS PAR SOUS GR   */        
                                   /*--!  !03: PRESENCE AD. POLICE   */        
                                   /*--!  !04: MUTATION DE SOCIETE   */        
                                   /*--!  !       SMAP <---> MEGA    */        
                                   /*--!  !05: MS : ATTESTATION      */        
                                   /*--!  !06: BILINGUE/TRILINGUE    */        
                                   /*--!  !07: SINISTRE EN D1        */        
                                   /*--!  !08: SINISTRE EN SA        */        
                                   /*--!  !09: SINISTRE EN AC        */        
                                   /*--!  !10: MEMO POLICE           */        
                                   /*--!  !22: POLICE SOUS PACKAGE   */        
                                   /*--!  !23: POLICE PACKAGE        */        
                                   /*--!  !24: CHGT AFFILIE          */        
        4 NOIDMAT  CHAR(14),       ###################################################        
        4 NOHDRLT  BIN FIXED(15),  ##############################################        
        4 CDDVPOL  CHAR(3),        ####################################################        
        4 CDSTAPO  CHAR(1),        ####################################################        
                                   /*--!  !0: POLICE INCOMPLETE      */        
                                   /*--!  !1: PRODUCT. INDIV. OK     */        
                                   /*--!  !2: FACTURAT.INDIV. OK     */        
                                   /*--!  !3: FACTURAT.PACKAGE OK    */        
        4 CDAGINT  CHAR(6),        ####################################################        
        4 NORFEXT  CHAR(12),       ###################################################        
        4 CDTYDOC  CHAR(1),        ####################################################        
        4 FILLER  CHAR(09),        ####################################################        
        4 FILL_02  CHAR(41),       ###################################################        
 /*****************************************************************/        
 /* SEGMENT ADRESSE COURRIER PAR POLICE                           */        
 /*****************************************************************/        
       3 ADPOL_I,        
 /*K*/  4 NOIDAFF  DEC FIXED(7),          /*NO!  !NUMERO D'AFFILIE    */        
 /*K*/  4 NOIDPOL  DEC FIXED(8),          /*NO!  !NO. DE POLICE       */        
 /*K*/  4 CDADPOL  CHAR(1),               /*CD!  !CODE ADRESSE        */        
        4 LTNMPOL  CHAR(30),              ####################################################        
        4 CDRSPOL  CHAR(1),               #####################################################        
        4 LTRUEPO  CHAR(30),              ####################################################        
        4 CDCPOPO  CHAR(6),               #####################################################        
        4 LTLOCPO  CHAR(25),              ####################################################        
        4 CDPAYPO  CHAR(3),               #####################################################        
        4 FILL_03  CHAR(50),              ####################################################        
 /*****************************************************************/        
 /* SEGMENT ADRESSE AFFILIE                                       */        
 /*****************************************************************/        
       3 ADAFF_I,        
 /*K*/  4 NOIDAFF  DEC FIXED(7),            /*NO!  !NUMERO D'AFFILIE  */        
        4 LTRUEAF  CHAR(25),                ####################################################        
        4 CDCPOAF  CHAR(6),                 #####################################################        
        4 LTLOCAF  CHAR(25),                ####################################################        
        4 CDPAYAF  CHAR(3),                 #####################################################        
        4 FILL_04  CHAR(50),                ####################################################        
 /*****************************************************************/        
 /* SEGMENT ADRESSE COURRIER PAR AFFILIE                          */        
 /*****************************************************************/        
       3 ADCOU_I,        
 /*K*/  4 NOIDAFF  DEC FIXED(7),          /*NO!  !NUMERO D'AFFILIE    */        
 /*K*/  4 CDADCOU  CHAR(1),               /*CD!  !CODE ADRESE         */        
        4 LTNMCOU  CHAR(30),              ####################################################        
        4 CDRSCOU  CHAR(1),               #####################################################        
        4 LTRUECO  CHAR(30),              ####################################################        
        4 CDCPOCO  CHAR(6),               #####################################################        
        4 LTLOCCO  CHAR(25),              ####################################################        
        4 CDPAYCO  CHAR(3),               #####################################################        
        4 FILL_05  CHAR(50),              ####################################################        
 /*****************************************************************/        
 /* SEGMENT RELATIONS ENTRE AFFILIES (DOUBLONS)                   */        
 /*****************************************************************/        
       3 RELAT_I,        
 /*K*/  4 NOIDAFF  DEC FIXED(7),    /*NO!  !NUMERO D'AFFILIE          */        
        4 CDNATRE  CHAR(2),         #####################################################        
        4 NOAFFRE  DEC FIXED(7),    ################################################        
        4 FILL_06  CHAR(50),        ####################################################        
 /*****************************************************************/        
 /* SEGMENT CREATION D ENSEMBLES                                  */        
 /*****************************************************************/        
       3 ENSEM_I,        
 /*K*/  4 NOIDAFF  DEC FIXED(7),    /*NO!  !NUMERO D'AFFILIE          */        
        4 TBIDENS     CHAR(7),      ##################################################        
        4 FILLER      CHAR(7),      ##################################################        
        4 FILL_07  CHAR(43),        ####################################################        
 /*****************************************************************/        
 /* SEGMENT DESTINE AUX DONNEES COMPLEMENTAIRES                   */        
 /*****************************************************************/        
       3 COMPL_I,        
 /*K*/  4 NOIDAFF  DEC FIXED(7),    /*NO!  !NO. D'AFFILIE             */        
 /*K*/  4 CDTYINF  CHAR(2),         /*CD!  !CODIF. TYPE D'INFORAMTION */        
        4 LTNMINF  CHAR(30),        ####################################################        
        4 FILL_08  CHAR(50),        ####################################################        
 /*****************************************************************/        
 /* SEGMENT HISTORIQUE AFFILIE                                    */        
 /*****************************************************************/        
       3 HISAF_I,        
 /*K*/  4 NOIDAFF  DEC FIXED(7),      /*NO!  !NO. D'AFFILIE           */        
 /*K*/  4 NOSQAFF  BIN FIXED(15),     /*NO!  !NO. DE SEQUENCE AFFILIE */        
        4 NBSQAFF  BIN FIXED(15),     ###############################################        
        4 CDCMGES  CHAR(8),           #####################################################        
        4 DAMAJAF  DEC FIXED(7),      ################################################        
        4 HHMAJAF  DEC FIXED(7),      ################################################        
        4 NOIDTER  CHAR(8),           #####################################################        
        4 LTNMAFF  CHAR(30),          ####################################################        
        4 LTEXTNM  CHAR(30),          ####################################################        
        4 CDRSAFF  CHAR(1),           #####################################################        
        4 CDSEXAF  CHAR(1),           #####################################################        
        4 CDLGEAF  CHAR(1),           #####################################################        
        4 DANAIAF  DEC FIXED(10),     ###############################################        
        4 LTNMCDS  CHAR(21),          ####################################################        
        4 LTRUEAF  CHAR(25),          ####################################################        
        4 CDCPOAF  CHAR(6),           #####################################################        
        4 LTLOCAF  CHAR(25),          ####################################################        
        4 CDPAYAF  CHAR(3),           #####################################################        
        4 LTLINAI  CHAR(30),          ####################################################        
        4 LTPROAF  CHAR(30),          ####################################################        
        4 NOTL1AF  DEC FIXED(3),      ################################################        
        4 NOTL2AF  DEC FIXED(9),      ################################################        
        4 NOTLBUR  CHAR(16),          ####################################################        
        4 NBFACAF  PIC'9',            ######################################################        
        4 CDINSAF  CHAR(2),           #####################################################        
        4 NOCPTAF  PIC'(12)9',        ##################################################        
        4 LTCOMAF  CHAR(30),          ####################################################        
        4 LTNMCOU  CHAR(30),          ####################################################        
        4 CDRSCOU  CHAR(1),           #####################################################        
        4 LTRUECO  CHAR(30),          ####################################################        
        4 CDCPOCO  CHAR(6),           #####################################################        
        4 LTLOCCO  CHAR(25),          ####################################################        
        4 CDPAYCO  CHAR(3),           #####################################################        
        4 LTNM1MB  CHAR(30),          ####################################################        
        4 LTNM2MB  CHAR(30),          ####################################################        
        4 NOHA1AF  BIN FIXED(15),     ###############################################        
        4 NOHA2AF  CHAR(4),           #####################################################        
        4 NOFA1AF  DEC FIXED(3),      ################################################        
        4 NOFA2AF  DEC FIXED(9),      ################################################        
        4 CDCHAL1  CHAR(2),           #####################################################        
        4 CDETCIV  CHAR(2),           #####################################################        
        4 CDORGAF  CHAR(2),           #####################################################        
        4 CDRCTAF  CHAR(2),           #####################################################        
        4 NOGSMAF  CHAR(15),          ####################################################        
        4 DADECAF  DEC FIXED(7),      ################################################        
        4 CDNATAF  CHAR(3),           #####################################################        
        4 RSVHIST  CHAR(93),          ####################################################        
        4 FILL_09  CHAR(50),          ####################################################        
 /*****************************************************************/        
 /* SEGMENT SIGNALETIQUE ACTIVITES                                */        
 /*****************************************************************/        
       3 CLACT_I,        
 /*K*/  4 NOIDCLI  DEC FIXED(9),        /*NO!  !IDENTIFICATION CLIENT */        
        4 TBEGCOD(16)  BIT(1),          ##################################################        
        4 FILL_10  CHAR(50),            ####################################################        
 /*****************************************************************/        
 /* SEGMENT ACTIVITES PROFESSIONELLES                             */        
 /*****************************************************************/        
       3 CLPRO_I,        
 /*K*/  4 NOIDCLI  DEC FIXED(9),        /*NO!  !IDENTIFICATION CLIENT */        
 /*K*/  4 DAEFPRO  DEC FIXED(7),        /*DC!  !DA. EFF. COMPL.    */        
        4 NOSQRUE  BIN FIXED(15),       ############################################        
        4 CDTYPRO  CHAR(2),             ##################################################        
        4 CDTYEMP  CHAR(2),             ##################################################        
        4 CDPOEMP  CHAR(4),             ##################################################        
        4 LOPOEMP  CHAR(20),            #################################################        
        4 TXDETVA  DEC FIXED(3),        #############################################        
        4 NUDETVA  CHAR(9),             ##################################################        
        4 LTCMPRO  CHAR(40),            #################################################        
        4 LTCMEMP  CHAR(40),            #################################################        
        4 CDHANDI  CHAR(1),             ##################################################        
        4 CDRETVA  CHAR(1),             ##################################################        
        4 CDASTVA  CHAR(1),             ##################################################        
        4 CDTRANS  CHAR(1),             ##################################################        
        4 TBEGCOD(16)  BIT(1),          ###############################################        
                                       /*--!  !01:SECTEUR PRIVE   */        
                                       /*--!  !02:SECTEUR PUBLIC  */        
                                       /*--!  !03:SECT.ASSOCIATIF */        
        4 CDFONCT  CHAR(1),             ##################################################        
        4 CDGEPRO  CHAR(2),             ##################################################        
        4 CDGEEMP  CHAR(2),             ##################################################        
        4 CDTAENT  CHAR(2),             ##################################################        
        4 FILL_11  CHAR(50),            #################################################        
 /*****************************************************************/        
 /* SEGMENT SIGNALETIQUE ACTIVITES COMPLEMENTAIRES                */        
 /*****************************************************************/        
       3 CLACC_I,        
 /*K*/  4 NOIDCLI  DEC FIXED(9),        /*NO!  !IDENTIFICATION CLIENT */        
 /*K*/  4 NOSQACC  BIN FIXED(15),       /*SQ!  !NO DE SEQUENCE      */        
        4 CDTYACC  CHAR(2),             ###################################################        
        4 LTCMACC  CHAR(40),            ##################################################        
        4 TBEGCOD(16)  BIT(1),          ################################################        
        4 CDTYASC  CHAR(2),             ###################################################        
        4 LTLIACC  CHAR(30),            ##################################################        
        4 FILL_12  CHAR(50),            #################################################        
 /*****************************************************************/        
 /* SEGMENT SIGNALETIQUE DES CONTACTS                             */        
 /*****************************************************************/        
       3 CLCON_I,        
 /*K*/  4 NOIDCLI  DEC FIXED(9),        /*NO!  !IDENTIFICATION CLIENT */        
        4 TBEGCOD(16)  BIT(1),          ##################################################        
        4 FILL_13  CHAR(50),            #################################################        
 /*****************************************************************/        
 /* SEGMENT SIGNALETIQUE DES ADRESSES                             */        
 /*****************************************************************/        
       3 CLADR_I,        
 /*K*/  4 NOIDCLI  DEC FIXED(9),      /*NO!  !IDENTIFICATION CLIENT   */        
 /*K*/  4 CDTYADR  CHAR(2),           /*CD!  !CODE TYPE ADRESSE       */        
 /*K*/  4 DAEFPRO  DEC FIXED(7),      /*DC!  !DATE EFFEF COMPLEMENTEE */        
        4 LTADNO1  CHAR(30),          ####################################################        
        4 LTADNO2  CHAR(30),          ####################################################        
        4 CDADRSO  CHAR(3),           #####################################################        
        4 LTADADR  CHAR(30),          ####################################################        
        4 NOADCPO  CHAR(5),           #####################################################        
        4 NOADBTE  CHAR(5),           #####################################################        
        4 CDADCPO  CHAR(6),           #####################################################        
        4 LOADLOC  CHAR(20),          ####################################################        
        4 CDADPAY  CHAR(3),           #####################################################        
        4 NUADTEL  CHAR(15),          ####################################################        
        4 NUADFAX  CHAR(15),          ####################################################        
        4 TBEGCOD(16)  BIT(1),        ##################################################        
        4 NOCPLPR  CHAR(10),          ####################################################        
        4 FILL_14  CHAR(50),          ###############################################        
 /*****************************************************************/        
 /* SEGMENT SIGNALETIQUE COMPLEMENT D ADRESSE                     */        
 /*****************************************************************/        
       3 CLCPL_I,        
 /*K*/  4 NOIDCLI  DEC FIXED(9),      /*NO!  !IDENTIFICATION CLIENT   */        
 /*K*/  4 CDTYADR  CHAR(2),           /*CD!  !CODE TYPE ADRESSE       */        
 /*K*/  4 DAEFPRO  DEC FIXED(7),      /*DC!  !DATE EFFEF COMPLEMENTEE */        
        4 CDTYACC  CHAR(2),           #####################################################        
        4 LTCLCPL  CHAR(30),          ####################################################        
        4 TBEGCOD(16)  BIT(1),        ##################################################        
        4 FILL_15  CHAR(50),          ####################################################        
 /*****************************************************************/        
 /* SEGMENT SIGNALETIQUE DES CONTACTS PRIVILEGIES                 */        
 /*****************************************************************/        
       3 CLCOP_I,        
 /*K*/  4 NOIDCLI  DEC FIXED(9),      /*NO!  !IDENTIFICATION CLIENT   */        
        4 NOIDAFF(10)  CHAR(6),       #################################################        
        4 TBEGCOD(16)  BIT(1),        ##################################################        
        4 FILL_16  CHAR(50),          ####################################################        
 /*****************************************************************/        
 /* SEGMENT COMPLEMENT SIGNALETIQUE                               */        
 /*****************************************************************/        
       3 CLCOM_I,        
 /*K*/  4 NOIDCLI  DEC FIXED(9),     /*NO!  !IDENTIFICATION CLIENT    */        
        4 DADECAF  DEC FIXED(7),     ################################################        
        4 DAPERMI  DEC FIXED(7),     ################################################        
        4 TBNBCTC(5),        
         5 CDTYCTC  CHAR(2),         ####################################################        
         5 NBCONTR  DEC FIXED(7),    ###############################################        
        4 NBENFAN  BIN FIXED(15),    ###############################################        
        4 NBENFHA  BIN FIXED(15),    ###############################################        
        4 NBAUTCH  BIN FIXED(15),    ###############################################        
        4 NOID_CI  DEC FIXED(7),     ################################################        
        4 DACIDEN  DEC FIXED(7),     ################################################        
        4 DAENVAG  DEC FIXED(7),     ################################################        
        4 NBENVAG  DEC FIXED(3),     ################################################        
        4 TBEGCOD(16)  BIT(1),       ##################################################        
                                     /*--!  !01 CD CHEF DE MENA.:'Y'  */        
                                     /*--!  !02 CD CHEF DE MENA.:'N'  */        
                                     /*--!  !03 CD MDP : ENVOI CLIENT */        
                                     /*--!  !04 CD ACC. INFOS NET     */        
        4 NOPERMI  CHAR(10),         ####################################################        
        4 CDLGSEC  CHAR(1),          #####################################################        
        4 CDORAFF  CHAR(2),          #####################################################        
        4 CDNATCL  CHAR(3),          #####################################################        
        4 LTPRECL  CHAR(15),         ####################################################        
        4 NUGSMCL  CHAR(15),         ####################################################        
        4 NOSEQUI  CHAR(3),          ####################################################        
                                     /*--!  !GENERE ALEATOIREMENT    */        
        4 CDGSTAM  CHAR(1),          ####################################################        
                                     /*--!  !VAL. POSS : I/R/S/BLANC */        
                                     /*--!  !I : ISRT 1ERE DEM DE MDP*/        
                                     /*--!  !R : NEW MDP-GARDE USERID*/        
                                     /*--!  !S : SUP MDP POUR USERID */        
        4 CDGSPWD  CHAR(1),          ####################################################        
                                     /*--!  !EMPECHE LA DEM. DE PLS  */        
                                     /*--!  !MDP SIMULTANEMENT       */        
                                     /*--!  !VAL. POSS : E/U/P/BLANC */        
                                     /*--!  !E : DMD DE MDP EN COURS */        
                                     /*--!  !U : USERID EXPEDIE      */        
                                     /*--!  !P : MDP EXPEDIE         */        
        4 CDORIDE  CHAR(1),          #####################################################        
                                     /*--!  !VAL. POSS : ALPHANUM.    */        
                                     /*--!  !A: ASSURANCE             */        
                                     /*--!  !B: BANQUE                */        
        4 CDWOCK1  CHAR(1),          #####################################################        
        4 CDWOCK2  CHAR(1),          #####################################################        
        4 CDETCIV  CHAR(2),          #####################################################        
        4 CDCHAL1  CHAR(2),          #####################################################        
        4 CDCHAL2  CHAR(3),          #####################################################        
        4 CDMAJCL  CHAR(2),          #####################################################        
        4 LTMAJCL  CHAR(30),         ####################################################        
        4 AFFINIT(5),        
         5 CDAFIN1  CHAR(2),         ####################################################        
         5 CDAFIN2  CHAR(15),        ###################################################        
         5 CDFAMIL  CHAR(1),         ####################################################        
        4 CDCIDEN  CHAR(1),          #####################################################        
        4 DADERMS  PIC'(7)9',        ###################################################        
        4 NBCONMS  PIC'(5)9',        ###################################################        
        4 DAEXPCI  PIC'(7)9',        ###################################################        
        4 DAABNWL  PIC'(7)9',        ###################################################        
        4 CDSTACI  CHAR(1),          #####################################################        
        4 DASTACI  PIC'(07)9',       ##################################################        
        4 NOBCEAF  CHAR(10),         ####################################################        
        4 CDCTF2F  CHAR(1),          #####################################################        
        4 CDPEP    CHAR(1),          #####################################################        
        4 CDCOMMEN CHAR(1),          #####################################################        
        4 CDPTIENF CHAR(1),          #####################################################        
        4 CDEINVO  CHAR(1),          #####################################################        
        4 FILL_16  CHAR(49),         ####################################################        
 /*****************************************************************/        
 /* SEGMENT SIGNALETIQUE DES RELATIONS                            */        
 /*****************************************************************/        
       3 CLREL_I,        
 /*K*/  4 NOIDCLI  DEC FIXED(9),     /*NO!  !IDENTIFICATION CLIENT    */        
 /*K*/  4 NOSEQRE  BIN FIXED(15),    /*SQ!  !NUM. DE SEQUENCE         */        
        4 NOIDREL  CHAR(2),          #####################################################        
        4 CDTYREL  CHAR(1),          #####################################################        
        4 NOCLREL  DEC FIXED(7),     ################################################        
        4 TBEGCOD(16)  BIT(1),       ##################################################        
        4 REC_VOTE  CHAR(27),        ###################################################        
        4 DAASSEM  DEC FIXED(7),     ################################################        
        4 FILL_17  CHAR(50),         ####################################################        
 /*****************************************************************/        
 /* SEGMENT AUTRES PRENOMS                                        */        
 /*****************************************************************/        
       3 CLPRE_I,        
 /*K*/  4 NOIDCLI  DEC FIXED(9),     /*NO!  !IDENTIFICATION CLIENT    */        
        4 LTPRCL1  CHAR(15),         ####################################################        
        4 LTPRCL2  CHAR(15),         ####################################################        
        4 TBEGCOD(16)  BIT(1),       ##################################################        
        4 FILL_18  CHAR(50),         ####################################################        
 /*****************************************************************/        
 /* SEGMENT SIGNALETIQUE ADRESSE E-MAIL                           */        
 /*****************************************************************/        
       3 CLEML_I,        
 /*K*/  4 NOIDCLI  DEC FIXED(9),     /*NO!  !IDENTIFICATION CLIENT    */        
        4 DAADEML  DEC FIXED(7),     ################################################        
        4 TBEGCOD(16)  BIT(1),       ##################################################        
                                     /*--!  !1 - ADRESSE INACTIVE     */        
        4 LTADEML  CHAR(50),         ####################################################        
        4 LTORIGI  CHAR(10),         ####################################################        
        4 CDPREML  CHAR(1),          #####################################################        
        4 FILL_19  CHAR(50),         ####################################################        
 /*****************************************************************/        
 /* SEGMENT SIGNALETIQUE DEVIS                                    */        
 /*****************************************************************/        
       3 CLDEV_I,        
        4 NOIDCLI  DEC FIXED(9),    ##############################################        
        4 DADVINT  DEC FIXED(11),   #############################################        
        4 NODVINT  DEC FIXED(13),   #############################################        
        4 CDIDINT  DEC FIXED(9),    ##############################################        
        4 HHMMINT  DEC FIXED(5),    ##############################################        
        4 TBEGCOD(16)  BIT(1),      ################################################        
                                    /*--!  ! 1 - AFFICHABLE MYSMAP  */        
                                    /*--!  ! 2 - DELETE MYSMAP      */        
                                    /*--!  ! 3 - SAVE CRM PUR       */        
                                    /*--!  ! 4 - REMPLACE           */        
        4 CDTYPDV  CHAR(2),         ###################################################        
        4 CDORIDV  CHAR(2),         ###################################################        
        4 CDTYPRO  CHAR(7),         ###################################################        
        4 FILL_20  CHAR(50),        ###################################################        
 /*****************************************************************/        
 /* SEGMENT PRODUIT CLIENT                                        */        
 /*****************************************************************/        
       3 PROCL_I,        
 /*K*/  4 NOIDAFF  DEC FIXED(7),     /*NO!  !NO D'AFFILIE             */        
 /*K*/  4 NOIDPOL  DEC FIXED(9),     /*NO!  !NO. DE POLICE            */        
        4 NOIDPAC  DEC FIXED(9),     ################################################        
        4 CDTYPOL  CHAR(2),          #####################################################        
        4 CDIDPRD  CHAR(8),          #####################################################        
        4 CDIDGES  CHAR(8),          #####################################################        
        4 CDCMPRO  CHAR(1),          #####################################################        
                                     /*--!  ! 1: LIEGE                */        
                                     /*--!  ! 2  HASSELT              */        
                                     /*--!  ! 3: BRUXELLES            */        
                                     /*--!  ! ^: INCONNU              */        
        4 CDEGPOL  CHAR(1),          #####################################################        
                                     /*--!  ! A: ACTIF                */        
                                     /*--!  ! C: CLOTURE              */        
                                     /*--!  ! P: PASSIF               */        
                                     /*--!  ! S: SUSPENDU             */        
                                     /*--!  ! D: DEVIS/PROJET         */        
                                     /*--!  ! O: OFFRE                */        
                                     /*--!  ! ?: INCONNU              */        
        4 CDCATPO  CHAR(11),         ####################################################        
        4 CDOCAAR  CHAR(4),          #####################################################        
        4 CDOCADP  CHAR(4),          #####################################################        
        4 CDMOTDP  CHAR(2),          #####################################################        
        4 CDGRPAF  CHAR(7),          #####################################################        
        4 CDFRAPO  CHAR(1),          #####################################################        
        4 CDPREML  CHAR(1),          #####################################################        
                                     /*--!  ! S: SEMESTRIEL           */        
                                     /*--!  ! M: MENSUEL              */        
                                     /*--!  ! Q: QUADRIMESTRIEL       */        
                                     /*--!  ! T: TRIMESTRIEL          */        
                                     /*--!  ! B: BIMESTRIEL           */        
                                     /*--!  ! U: UNIQUE               */        
                                     /*--!  ! ^: INCONNU              */        
        4 CDFRFRA  CHAR(1),          #####################################################        
                                     /*--!  ! Y: YES                  */        
                                     /*--!  ! N: NO                   */        
                                     /*--!  ! ^: INCONNU              */        
        4 CDADPOL  CHAR(1),          #####################################################        
                                     /*--!  ! Y: YES                  */        
                                     /*--!  ! N: NO                   */        
                                     /*--!  ! ^: INCONNU              */        
        4 CDDVPOL  CHAR(3),          #####################################################        
                                     /*--!  ! BEF                     */        
                                     /*--!  ! EUR                     */        
        4 CDCLAPO  CHAR(1),          #####################################################        
                                     /*--!  ! G: GROUPE               */        
                                     /*--!  ! I: INDIVIDUELLE         */        
                                     /*--!  ! ^: INCONNU              */        
        4 NOCPTPO  CHAR(12),         ####################################################        
        4 NODOMPO  CHAR(12),         ####################################################        
        4 NBRAPPO  PIC'9',           ######################################################        
        4 NBSINAC  DEC FIXED(7),     ################################################        
        4 DACMPSI  DEC FIXED(7),     ################################################        
        4 DAEFFPO  DEC FIXED(7),     ################################################        
        4 DAEXPPO  DEC FIXED(7),     ################################################        
        4 DAECHPO  DEC FIXED(4),     ################################################        
        4 PRTRMBA  DEC FIXED(15),    ###############################################        
        4 PRTRMTO  DEC FIXED(15),    ###############################################        
        4 LTINFCP  CHAR(220),        ###################################################        
        4 FILL_21  CHAR(50),         ####################################################        
 /*****************************************************************/        
 /* <<< CRITERES POUR EXPLORATION DES RELATIONS ENTRE LES CLIENTS */        
 /* (RELAT)                                                       */        
 /*****************************************************************/        
       3 EXPLORLA_I,                 ############################################################        
        4 NBITEXP    BIN FIXED(15),  #############################################        
        4 NOIDAFF    PIC '(9)9',     ################################################        
 /*****************************************************************/        
 /* <<< CRITERES POUR EXPLORATION DES RELATIONS ENTRE LES CLIENTS */        
 /* (CLREL)                                                       */        
 /*****************************************************************/        
       3 EXPLOREL_I,                 ############################################################        
        4 NBITEXP    BIN FIXED(15),  #############################################        
        4 NOIDCLI  DEC FIXED(9),     ################################################        
        4 NOSEQRE  BIN FIXED(15),    ###############################################        
 /*****************************************************************/        
 /* <<< CRITERES POUR EXPLORATION DES HISTORIQUES DE SIGNALETIQUE */        
 /*                                                               */        
 /*****************************************************************/        
       3 EXPLOHIS_I,                 ############################################################        
        4 NBITEXP    BIN FIXED(15),  #############################################        
        4 NOIDAFF  DEC FIXED(7),      ################################################        
        4 NOSQAFF  BIN FIXED(15),     ###############################################        
 /*****************************************************************/        
 /* <<< CRITERES POUR EXPLORATION DES ADRESSES E-MAIL             */        
 /*                                                               */        
 /*****************************************************************/        
       3 EXPLOEML_I,                 ############################################################        
        4 NBITEXP    BIN FIXED(15),  #############################################        
        4 NOIDCLI  DEC FIXED(9),     ################################################        
 /*****************************************************************/        
 /* <<< CRITERES POUR EXPLORATION DES ENSEMBLES                   */        
 /*                                                               */        
 /*****************************************************************/        
       3 EXPLOENS_I,                 ############################################################        
        4 NBITEXP    BIN FIXED(15),  #############################################        
        4 NOIDAFF  DEC FIXED(7),      ################################################        
 /*****************************************************************/        
 /* <<< CRITERES POUR EXPLORATION DES POLICES                     */        
 /*                                                               */        
 /*****************************************************************/        
       3 EXPLOPOL_I,                 ############################################################        
        4 NBITEXP    BIN FIXED(15),  #############################################        
        4 NOIDAFF  DEC FIXED(7),      ################################################        
 /*****************************************************************/        
 /* <<< CRITERES POUR EXPLORATION DES PRODUITS CLIENTS            */        
 /*                                                               */        
 /*****************************************************************/        
       3 EXPLOPRO_I,                 ############################################################        
        4 NBITEXP    BIN FIXED(15),  #############################################        
        4 NOIDAFF  DEC FIXED(7),      ################################################        
        4 NOIDPOL  DEC FIXED(9),      ################################################        
         
 /*****************************************************************/        
 /* <<< CRITERES POUR EXPLORATION DES DEVIS INTERNET              */        
 /*                                                               */        
 /*****************************************************************/        
       3 EXPLODEV_I,                 ############################################################        
        4 NBITEXP    BIN FIXED(15),  #############################################        
 /*K*/  4 NOIDCLI  DEC FIXED(9),     /*NO!  !IDENTIFICATION CLIENT    */        
        4 DADVINT  DEC FIXED(11),   #############################################        
        4 NODVINT  DEC FIXED(13),   #############################################        
        4 CDIDINT  DEC FIXED(9),    ##############################################        
        4 HHMMINT  DEC FIXED(5),    ##############################################        
        4 TBEGCOD(16)  BIT(1),      ################################################        
                                    /*--!  ! 1 - AFFICHABLE MYSMAP  */        
                                    /*--!  ! 2 - DELETE MYSMAP      */        
                                    /*--!  ! 3 - SAVE CRM PUR       */        
        4 CDTYPDV  CHAR(2),         ###################################################        
        4 CDORIDV  CHAR(2),         ###################################################        
         
 /*****************************************************************/        
      2 OUTPUT,        
 /*******************************************************************/        
 /*  SEGMENT AFFILIE                                                */        
 /*******************************************************************/        
       3 AFFIL_O,        
        4 NOIDAFF  DEC FIXED(7),  ##############################################        
        4 LTNMAFF  CHAR(30),      ##################################################        
        4 CDRSAFF  CHAR(1),       ###################################################        
        4 CDSEXAF  CHAR(1),       ###################################################        
        4 DANAIAF  DEC FIXED(10), #############################################        
        4 CDLGEAF  CHAR(1),       ###################################################        
        4 NORULOC  DEC FIXED(7),  ##############################################        
        4 NOHA1AF  BIN FIXED(15), #############################################        
        4 NOHA2AF  CHAR(4),       ###################################################        
        4 CDEGCOU  CHAR(1),       ###################################################        
        4 TBEGCOD  BIT(40),       ###################################################        
                                  /*--!  !01 : PROFESSION           */        
                                  /*--!  !02 : EXTENSION DU NOM     */        
                                  /*--!  !03 : LIEU DE NAISSANCE    */        
                                  /*--!  !04 : INSPECTEUR-CPT-FACT. */        
                                  /*--!  !05 : MOTIF DE LA MODIF.   */        
                                  /*--!  !06 : NOM CONDENSE MEMBRE  */        
                                  /*--!  !07 : NOM CONJOINT EN MEGA */        
                                  /*--!  !08 : NUMERO PIC DU CCB    */        
                                  /*--!  !09 : --- VIDE --9/11/2000 */        
                                  /*--!  !10 : TELEPHONE EMPLOYEUR  */        
                                  /*--!  !11 : NO AFFILIE AUTRE SOC */        
                                  /*--!  !12 : REFERENCE CHGT ADR.  */        
                                  /*--!  !13 : REF. DE LA M-A-J     */        
                                  /*--!  !14 : 1 PARTIE NOM DU MBRE */        
                                  /*--!  !15 : 2 PARTIE NOM DU MBRE */        
                                  /*--!  !16 : --- VIDE --9/11/2000 */        
                                  /*--!  !17 : MATRICULE CIE LGCP   */        
                                  /*--!  !18 : PRESENCE RELATIONS   */        
                                  /*--!  !19 : NO DOMICILIATION     */        
                                  /*--!  !20 :                      */        
                                  /*--!  !21 : INFOS ACCIDENTS      */        
                                  /*--!  !22 : NOM COMPTE TIERS     */        
                                  /*--!  !23 : INFO CAISSE AG       */        
                                  /*--!  !24 : QUALITE DELEGUE AG   */        
                                  /*--!  !25 : AFF.AMEL A BLANC     */        
        4 TBTYPAF  BIT(240),      ##################################################        
                                  /*--!  !VOIR DEFINITION IPS1006   */        
                                  /*--!  !01 : AFFILIE SECONDAIRE   */        
                                  /*--!  !02 : AFFILIE PRINCIPAL    */        
                                  /*--!  !03 : BILINGUE FRANCAIS    */        
                                  /*--!  !04 : BILINGUE NEERLANDAIS */        
                                  /*--!  !11 : EPOUX DE ...         */        
                                  /*--!  !12 : EPOUDE DE ...        */        
                                  /*--!  !13 : ENFANT DE ...        */        
                                  /*--!  !14 : PARENT DE ...        */        
                                  /*--!  !15 : CONCUBIN DE ...      */        
                                  /*--!  !16 : CONCUBINE DE ...     */        
                                  /*--!  !17 : DIVERS DE ...        */        
                                  /*--!  !18 : DIVERSES DE ...      */        
                                  /*--!  !29 : CLIENT A REFUSER     */        
                                  /*--!  !30 : CHGT ADRESSE EN COUR */        
                                  /*--!  !31 : VIP                  */        
                                  /*--!  !32 : VIP TRES INPORTANT   */        
                                  /*--!  !33 : PAS D'AGENDA         */        
                                  /*--!  !34 : CLIENT CCB           */        
                                  /*--!  !35 : CLIENT PASSIF        */        
                                  /*--!  !36 : MEMBRE DU PERSONNEL  */        
                                  /*--!  !37 : PAS DE MAILING       */        
                                  /*--!  !38 : CLIENT A SURVEILLER  */        
                                  /*--!  !39 : EXPERT AUTO ^AUTOMAT */        
                                  /*--!  !40 : CONVENTION DE GESTIO */        
                                  /*--!  !41 : CLIENT FICTIF        */        
                                  /*--!  !42 : MEMO                 */        
                                  /*--!  !43 : CHGT D'ADRESSE EN CO */        
                                  /*--!  !44 : AFFILIE PERIME       */        
                                  /*--!  !45 : CONTENTIEUX          */        
                                  /*--!  !46 : CLUB BLOSO           */        
                                  /*--!  !47 : MEMBRE VLB           */        
                                  /*--!  !48 : PAS DE TP INFORMEX   */        
                                  /*--!  !49 : FONCTIONNAIRE CEE    */        
                                  /*--!  !50 : A NE PAS RAPPELER    */        
                                  /*--!  !51 : ADRESSE SOPRESS      */        
                                  /*--!  !52 : CONTRAT BILINGUE     */        
                                  /*--!  !53 : AFFILIE DECEDE       */        
                                  /*--!  !54 : PRODUCTION FICTIVE   */        
                                  /*--!  !55 : GESTION PROTEGEE     */        
                                  /*--!  !56 : CLIENT CGFP          */        
                                  /*--!  !57 : CELLULE DE DISTRIBUT */        
                                  /*--!  !58 : GESTION SIN. DEDICAE */        
                                  /*--!  !60 : DOCUMENT EURO/DEFAUT */        
                                  /*--!  !61 : PROSPECT             */        
                                  /*--!  !62 : SUIVI GESTIONNAIRE   */        
                                  /*--!  !63 : MEMBRE               */        
                                  /*--!  !64 : FAUX-MEMBRE          */        
                                  /*--!  !65 : IMPOSABLE            */        
                                  /*--!  !72 : ACTIF DEFINITIF      */        
                                  /*--!  !73 : ACTIF TEMPORAIRE     */        
                                  /*--!  !74 : INACTIF              */        
                                  /*--!  !75 : RETRAITE             */        
                                  /*--!  !76 : UTILISATEUR EXTERNE  */        
                                  /*--!  !77 : FONCTIONNAIRE        */        
                                  /*--!  !78 : CTRL RSQ : W=BLOQUE  */        
                                  /*--!  !79 : CTRL RSQ : S=SURVEIL */        
                                  /*--!  !80 : SMAP-INFOS           */        
                                  /*--!  !81 : FICHE PERSONNELLE V  */        
                                  /*--!  !82 : NOUV. ADR. INCONNUE  */        
                                  /*--!  !83 : BENEFICIE DE 3 APPEL */        
                                  /*--!  !     AU CC JURIDIQUE LEGI */        
                                  /*--!  !84:FAIT PART. D'1 AFFINIT */        
                                  /*--!  !85:VIE PURE (AME)         */        
                                  /*--!  !86:ENVOI ENQUETE MIEUX... */        
                                  /*--!  !87:RETOUR ENQ. MIEUX...   */        
                                  /*--!  !88:RETOUR ENQ.MIEUX+SIGN. */        
                                  /*--!  !89 : SPONSORING (VIP)     */        
        4 NOTL1AF  DEC FIXED(3),  ##############################################        
        4 NOTL2AF  DEC FIXED(9),  ##############################################        
        4 NONATAF  DEC FIXED(11), #############################################        
        4 DADERMJ  DEC FIXED(7),  ##############################################        
        4 CDLGRUE  CHAR(1),       ###################################################        
        4 NOAF1EX  DEC FIXED(7),  ##############################################        
        4 NOAF2EX  BIN FIXED(15), #############################################        
        4 CDPOGEO  DEC FIXED(7),  ##############################################        
        4 NBFICDO  BIN FIXED(15), #############################################        
        4 FILL_22  CHAR(50),         ####################################################        
 /*****************************************************************/        
 /* SEGMENT ENTETE POLICE                                         */        
 /*****************************************************************/        
       3 POLIC_O,        
        4 NOIDPOL  DEC FIXED(8),   ###############################################        
        4 CDTYPOL  CHAR(2),        ####################################################        
        4 CDLGPOL  CHAR(1),        ####################################################        
        4 CDETAPO  CHAR(1),        ####################################################        
                                   /*--!  !A : ACTIVE                */        
                                   /*--!  !C : CLOTUREE / ANNULEE    */        
                                   /*--!  !P : PASSIVE / EN ATTENTE  */        
                                   /*--!  !S : SUSPENDUE/SANS SUITE  */        
        4 CDCMPRO  CHAR(1),        ####################################################        
        4 CDCMGES  CHAR(8),        ####################################################        
        4 NUSOUPO  DEC FIXED(4),   ###############################################        
                                   /*--!  !EN IE, VAUT 9999 POUR LE  */        
                                   /*--!  !NUMERO DE CI 000000       */        
        4 CDINSPO  CHAR(2),        ####################################################        
        4 CDINTAG  DEC FIXED(7),   ###############################################        
                                   /*--!  !A REMPLACER PAR CDAGINT   */        
        4 NOINTPO  CHAR(12),       ###################################################        
        4 CDMODPA  CHAR(1),        ####################################################        
        4 CDREAPO  CHAR(1),        ####################################################        
        4 CDGAGPO  CHAR(1),        ####################################################        
        4 NODERAV  DEC FIXED(3),   ###############################################        
        4 NBEXEPO  DEC FIXED(3),   ###############################################        
        4 NODOMPO  DEC FIXED(10),  ##############################################        
        4 NOCPTPO  DEC FIXED(10),  ##############################################        
        4 CDEGAPO  CHAR(1),        ####################################################        
        4 TBCDPOL(24)  BIT(1),     #################################################        
                                   /*--!  !01: POLICE COURT TERME    */        
                                   /*--!  !02: FACT MS PAR SOUS GR   */        
                                   /*--!  !03: PRESENCE AD. POLICE   */        
                                   /*--!  !04: MUTATION DE SOCIETE   */        
                                   /*--!  !       SMAP <---> MEGA    */        
                                   /*--!  !05: MS : ATTESTATION      */        
                                   /*--!  !06: BILINGUE/TRILINGUE    */        
                                   /*--!  !07: SINISTRE EN D1        */        
                                   /*--!  !08: SINISTRE EN SA        */        
                                   /*--!  !09: SINISTRE EN AC        */        
                                   /*--!  !10: MEMO POLICE           */        
                                   /*--!  !22: POLICE SOUS PACKAGE   */        
                                   /*--!  !23: POLICE PACKAGE        */        
                                   /*--!  !24: CHGT AFFILIE          */        
        4 NOIDMAT  CHAR(14),       ###################################################        
        4 NOHDRLT  BIN FIXED(15),  ##############################################        
        4 CDDVPOL  CHAR(3),        ####################################################        
        4 CDSTAPO  CHAR(1),        ####################################################        
                                   /*--!  !0: POLICE INCOMPLETE      */        
                                   /*--!  !1: PRODUCT. INDIV. OK     */        
                                   /*--!  !2: FACTURAT.INDIV. OK     */        
                                   /*--!  !3: FACTURAT.PACKAGE OK    */        
        4 CDAGINT  CHAR(6),        ####################################################        
        4 NORFEXT  CHAR(12),       ###################################################        
        4 CDTYDOC  CHAR(1),        ####################################################        
        4 FILLER   CHAR(9),        ####################################################        
        4 FILL_23  CHAR(41),         ####################################################        
 /*****************************************************************/        
 /* SEGMENT ADRESSE COURRIER PAR POLICE                           */        
 /*****************************************************************/        
       3 ADPOL_O,        
        4 CDADPOL  CHAR(1),               #####################################################        
        4 LTNMPOL  CHAR(30),              ####################################################        
        4 CDRSPOL  CHAR(1),               #####################################################        
        4 LTRUEPO  CHAR(30),              ####################################################        
        4 CDCPOPO  CHAR(6),               #####################################################        
        4 LTLOCPO  CHAR(25),              ####################################################        
        4 CDPAYPO  CHAR(3),               #####################################################        
        4 FILL_24  CHAR(50),         ####################################################        
 /*****************************************************************/        
 /* SEGMENT ADRESSE AFFILIE                                       */        
 /*****************************************************************/        
       3 ADAFF_O,        
        4 LTRUEAF  CHAR(25),                ####################################################        
        4 CDCPOAF  CHAR(6),                 #####################################################        
        4 LTLOCAF  CHAR(25),                ####################################################        
        4 CDPAYAF  CHAR(3),                 #####################################################        
        4 FILL_25  CHAR(50),         ####################################################        
 /*****************************************************************/        
 /* SEGMENT ADRESSE COURRIER PAR AFFILIE                          */        
 /*****************************************************************/        
       3 ADCOU_O,        
        4 CDADCOU  CHAR(1),               #####################################################        
        4 LTNMCOU  CHAR(30),              ####################################################        
        4 CDRSCOU  CHAR(1),               #####################################################        
        4 LTRUECO  CHAR(30),              ####################################################        
        4 CDCPOCO  CHAR(6),               #####################################################        
        4 LTLOCCO  CHAR(25),              ####################################################        
        4 CDPAYCO  CHAR(3),               #####################################################        
        4 FILL_26  CHAR(50),         ####################################################        
 /*****************************************************************/        
 /* SEGMENT RELATIONS ENTRE AFFILIES (DOUBLONS)                   */        
 /*****************************************************************/        
       3 RELAT_O,        
        4 CDNATRE  CHAR(2),         #####################################################        
        4 NOAFFRE  DEC FIXED(7),    ################################################        
        4 FILL_27  CHAR(50),         ####################################################        
 /*****************************************************************/        
 /* SEGMENT CREATION D ENSEMBLES                                  */        
 /*****************************************************************/        
       3 ENSEM_O,        
        4 TBIDENS(2)  CHAR(7),      ############################################        
        4 FILL_28  CHAR(50),         ####################################################        
 /*****************************************************************/        
 /* SEGMENT DESTINE AUX DONNEES COMPLEMENTAIRES                   */        
 /*****************************************************************/        
       3 COMPL_O,        
        4 NOIDAFF  DEC FIXED(7),    ################################################        
        4 CDTYINF  CHAR(2),         #####################################################        
        4 LTNMINF  CHAR(30),        ####################################################        
        4 FILL_29  CHAR(50),         ####################################################        
 /*****************************************************************/        
 /* SEGMENT HISTORIQUE AFFILIE                                    */        
 /*****************************************************************/        
       3 HISAF_O,        
        4 NOIDAFF  DEC FIXED(7),      ################################################        
        4 NOSQAFF  BIN FIXED(15),     ###############################################        
        4 NBSQAFF  BIN FIXED(15),     ###############################################        
        4 CDCMGES  CHAR(8),           #####################################################        
        4 DAMAJAF  DEC FIXED(7),      ################################################        
        4 HHMAJAF  DEC FIXED(7),      ################################################        
        4 NOIDTER  CHAR(8),           #####################################################        
        4 LTNMAFF  CHAR(30),          ####################################################        
        4 LTEXTNM  CHAR(30),          ####################################################        
        4 CDRSAFF  CHAR(1),           #####################################################        
        4 CDSEXAF  CHAR(1),           #####################################################        
        4 CDLGEAF  CHAR(1),           #####################################################        
        4 DANAIAF  DEC FIXED(10),     ###############################################        
        4 LTNMCDS  CHAR(21),          ####################################################        
        4 LTRUEAF  CHAR(25),          ####################################################        
        4 CDCPOAF  CHAR(6),           #####################################################        
        4 LTLOCAF  CHAR(25),          ####################################################        
        4 CDPAYAF  CHAR(3),           #####################################################        
        4 LTLINAI  CHAR(30),          ####################################################        
        4 LTPROAF  CHAR(30),          ####################################################        
        4 NOTL1AF  DEC FIXED(3),      ################################################        
        4 NOTL2AF  DEC FIXED(9),      ################################################        
        4 NOTLBUR  CHAR(16),          ####################################################        
        4 NBFACAF  PIC'9',            ######################################################        
        4 CDINSAF  CHAR(2),           #####################################################        
        4 NOCPTAF  PIC'(12)9',        ##################################################        
        4 LTCOMAF  CHAR(30),          ####################################################        
        4 LTNMCOU  CHAR(30),          ####################################################        
        4 CDRSCOU  CHAR(1),           #####################################################        
        4 LTRUECO  CHAR(30),          ####################################################        
        4 CDCPOCO  CHAR(6),           #####################################################        
        4 LTLOCCO  CHAR(25),          ####################################################        
        4 CDPAYCO  CHAR(3),           #####################################################        
        4 LTNM1MB  CHAR(30),          ####################################################        
        4 LTNM2MB  CHAR(30),          ####################################################        
        4 NOHA1AF  BIN FIXED(15),     ###############################################        
        4 NOHA2AF  CHAR(4),           #####################################################        
        4 NOFA1AF  DEC FIXED(3),      ################################################        
        4 NOFA2AF  DEC FIXED(9),      ################################################        
        4 CDCHAL1  CHAR(2),           #####################################################        
        4 CDETCIV  CHAR(2),           #####################################################        
        4 CDORGAF  CHAR(2),           #####################################################        
        4 CDRCTAF  CHAR(2),           #####################################################        
        4 NOGSMAF  CHAR(15),          ####################################################        
        4 DADECAF  DEC FIXED(7),      ################################################        
        4 CDNATAF  CHAR(3),           #####################################################        
        4 RSVHIST  CHAR(93),          ####################################################        
        4 FILL_30  CHAR(50),         ####################################################        
 /*****************************************************************/        
 /* SEGMENT SIGNALETIQUE ACTIVITES                                */        
 /*****************************************************************/        
       3 CLACT_O,        
        4 NOIDCLI  DEC FIXED(9),        ################################################        
        4 TBEGCOD(16)  BIT(1),          ##################################################        
        4 FILL_31  CHAR(50),         ####################################################        
 /*****************************************************************/        
 /* SEGMENT ACTIVITES PROFESSIONELLES                             */        
 /*****************************************************************/        
       3 CLPRO_O,        
        4 DAEFPRO  DEC FIXED(7),        #############################################        
        4 NOSQRUE  BIN FIXED(15),       ############################################        
        4 CDTYPRO  CHAR(2),             ##################################################        
        4 CDTYEMP  CHAR(2),             ##################################################        
        4 CDPOEMP  CHAR(4),             ##################################################        
        4 LOPOEMP  CHAR(20),            #################################################        
        4 TXDETVA  DEC FIXED(3),        #############################################        
        4 NUDETVA  CHAR(9),             ##################################################        
        4 LTCMPRO  CHAR(40),            #################################################        
        4 LTCMEMP  CHAR(40),            #################################################        
        4 CDHANDI  CHAR(1),             ##################################################        
        4 CDRETVA  CHAR(1),             ##################################################        
        4 CDASTVA  CHAR(1),             ##################################################        
        4 CDTRANS  CHAR(1),             ##################################################        
        4 TBEGCOD(16)  BIT(1),          ###############################################        
                                       /*--!  !01:SECTEUR PRIVE   */        
                                       /*--!  !02:SECTEUR PUBLIC  */        
                                       /*--!  !03:SECT.ASSOCIATIF */        
        4 CDFONCT  CHAR(1),             ##################################################        
        4 CDGEPRO  CHAR(2),             ##################################################        
        4 CDGEEMP  CHAR(2),             ##################################################        
        4 CDTAENT  CHAR(2),             ##################################################        
        4 FILL_32  CHAR(50),         ####################################################        
 /*****************************************************************/        
 /* SEGMENT SIGNALETIQUE ACTIVITES COMPLEMENTAIRES                */        
 /*****************************************************************/        
       3 CLACC_O,        
        4 NOSQACC  BIN FIXED(15),       #############################################        
        4 CDTYACC  CHAR(2),             ###################################################        
        4 LTCMACC  CHAR(40),            ##################################################        
        4 TBEGCOD(16)  BIT(1),          ################################################        
        4 CDTYASC  CHAR(2),             ###################################################        
        4 LTLIACC  CHAR(30),            ##################################################        
        4 FILL_33  CHAR(50),         ####################################################        
 /*****************************************************************/        
 /* SEGMENT SIGNALETIQUE DES CONTACTS                             */        
 /*****************************************************************/        
       3 CLCON_O,        
        4 NOIDCLI  DEC FIXED(9),        ################################################        
        4 TBEGCOD(16)  BIT(1),          ##################################################        
        4 FILL_34  CHAR(50),         ####################################################        
 /*****************************************************************/        
 /* SEGMENT SIGNALETIQUE DES ADRESSES                             */        
 /*****************************************************************/        
       3 CLADR_O,        
        4 CDTYADR  CHAR(2),           #####################################################        
        4 DAEFPRO  DEC FIXED(7),      ################################################        
        4 LTADNO1  CHAR(30),          ####################################################        
        4 LTADNO2  CHAR(30),          ####################################################        
        4 CDADRSO  CHAR(3),           #####################################################        
        4 LTADADR  CHAR(30),          ####################################################        
        4 NOADCPO  CHAR(5),           #####################################################        
        4 NOADBTE  CHAR(5),           #####################################################        
        4 CDADCPO  CHAR(6),           #####################################################        
        4 LOADLOC  CHAR(20),          ####################################################        
        4 CDADPAY  CHAR(3),           #####################################################        
        4 NUADTEL  CHAR(15),          ####################################################        
        4 NUADFAX  CHAR(15),          ####################################################        
        4 TBEGCOD(16)  BIT(1),        ##################################################        
        4 NOCPLPR  CHAR(10),          ####################################################        
        4 FILL_35  CHAR(50),         ####################################################        
 /*****************************************************************/        
 /* SEGMENT SIGNALETIQUE COMPLEMENT D ADRESSE                     */        
 /*****************************************************************/        
       3 CLCPL_O,        
        4 CDTYACC  CHAR(2),              #####################################################        
        4 LTCLCPL  CHAR(30),             ####################################################        
        4 TBEGCOD(16)  BIT(1),           ##################################################        
        4 FILL_36  CHAR(50),         ####################################################        
 /*****************************************************************/        
 /* SEGMENT SIGNALETIQUE DES CONTACTS PRIVILEGIES                 */        
 /*****************************************************************/        
       3 CLCOP_O,        
        4 NOIDAFF(10)  CHAR(6),           #################################################        
        4 TBEGCOD(16)  BIT(1),            ##################################################        
        4 FILL_37  CHAR(50),         ####################################################        
 /*****************************************************************/        
 /* SEGMENT COMPLEMENT SIGNALETIQUE                               */        
 /*****************************************************************/        
       3 CLCOM_O,        
        4 NOIDCLI  DEC FIXED(9),     ################################################        
        4 DADECAF  DEC FIXED(7),     ################################################        
        4 DAPERMI  DEC FIXED(7),     ################################################        
        4 TBNBCTC(5),        
         5 CDTYCTC  CHAR(2),         ####################################################        
         5 NBCONTR  DEC FIXED(7),    ###############################################        
        4 NBENFAN  BIN FIXED(15),    ###############################################        
        4 NBENFHA  BIN FIXED(15),    ###############################################        
        4 NBAUTCH  BIN FIXED(15),    ###############################################        
        4 NOID_CI  DEC FIXED(7),     ################################################        
        4 DACIDEN  DEC FIXED(7),     ################################################        
        4 DAENVAG  DEC FIXED(7),     ################################################        
        4 NBENVAG  DEC FIXED(3),     ################################################        
        4 TBEGCOD(16)  BIT(1),       ##################################################        
                                     /*--!  !01 CD CHEF DE MENA.:'Y'  */        
                                     /*--!  !02 CD CHEF DE MENA.:'N'  */        
                                     /*--!  !03 CD MDP : ENVOI CLIENT */        
                                     /*--!  !04 CD ACC. INFOS NET     */        
        4 NOPERMI  CHAR(10),         ####################################################        
        4 CDLGSEC  CHAR(1),          #####################################################        
        4 CDORAFF  CHAR(2),          #####################################################        
        4 CDNATCL  CHAR(3),          #####################################################        
        4 LTPRECL  CHAR(15),         ####################################################        
        4 NUGSMCL  CHAR(15),         ####################################################        
        4 NOSEQUI  CHAR(3),          ####################################################        
                                     /*--!  !GENERE ALEATOIREMENT    */        
        4 CDGSTAM  CHAR(1),          ####################################################        
                                     /*--!  !VAL. POSS : I/R/S/BLANC */        
                                     /*--!  !I : ISRT 1ERE DEM DE MDP*/        
                                     /*--!  !R : NEW MDP-GARDE USERID*/        
                                     /*--!  !S : SUP MDP POUR USERID */        
        4 CDGSPWD  CHAR(1),          ####################################################        
                                     /*--!  !EMPECHE LA DEM. DE PLS  */        
                                     /*--!  !MDP SIMULTANEMENT       */        
                                     /*--!  !VAL. POSS : E/U/P/BLANC */        
                                     /*--!  !E : DMD DE MDP EN COURS */        
                                     /*--!  !U : USERID EXPEDIE      */        
                                     /*--!  !P : MDP EXPEDIE         */        
        4 CDORIDE  CHAR(1),          #####################################################        
                                     /*--!  !VAL. POSS : ALPHANUM.    */        
                                     /*--!  !A: ASSURANCE             */        
                                     /*--!  !B: BANQUE                */        
        4 CDWOCK1  CHAR(1),          #####################################################        
        4 CDWOCK2  CHAR(1),          #####################################################        
        4 CDETCIV  CHAR(2),          #####################################################        
        4 CDCHAL1  CHAR(2),          #####################################################        
        4 CDCHAL2  CHAR(3),          #####################################################        
        4 CDMAJCL  CHAR(2),          #####################################################        
        4 LTMAJCL  CHAR(30),         ####################################################        
        4 AFFINIT(5),        
         5 CDAFIN1  CHAR(2),         ####################################################        
         5 CDAFIN2  CHAR(15),        ###################################################        
         5 CDFAMIL  CHAR(1),         ####################################################        
        4 CDCIDEN  CHAR(1),          #####################################################        
        4 DADERMS  PIC'(7)9',        ###################################################        
        4 NBCONMS  PIC'(5)9',        ###################################################        
        4 DAEXPCI  PIC'(7)9',        ###################################################        
        4 DAABNWL  PIC'(7)9',        ###################################################        
        4 CDSTACI  CHAR(1),          #####################################################        
        4 DASTACI  PIC'(07)9',       ##################################################        
        4 NOBCEAF  CHAR(10),         ####################################################        
        4 CDCTF2F  CHAR(1),          #####################################################        
        4 CDPEP    CHAR(1),          #####################################################        
        4 CDCOMMEN CHAR(1),          #####################################################        
        4 CDPTIENF CHAR(1),          #####################################################        
        4 CDEINVO  CHAR(1),          #####################################################        
        4 FILL_38  CHAR(49),         ####################################################        
 /*****************************************************************/        
 /* SEGMENT SIGNALETIQUE DES RELATIONS                            */        
 /*****************************************************************/        
       3 CLREL_O,        
        4 NOSEQRE  BIN FIXED(15),          ###############################################        
        4 NOIDREL  CHAR(2),                #####################################################        
        4 CDTYREL  CHAR(1),                #####################################################        
        4 NOCLREL  DEC FIXED(7),           ################################################        
        4 TBEGCOD(16)  BIT(1),             ##################################################        
        4 REC_VOTE  CHAR(27),              ###################################################        
        4 DAASSEM  DEC FIXED(7),           ################################################        
        4 FILL_39  CHAR(50),         ####################################################        
 /*****************************************************************/        
 /* SEGMENT AUTRES PRENOMS                                        */        
 /*****************************************************************/        
       3 CLPRE_O,        
        4 LTPRCL1  CHAR(15),                ####################################################        
        4 LTPRCL2  CHAR(15),                ####################################################        
        4 TBEGCOD(16)  BIT(1),              ##################################################        
        4 FILL_40  CHAR(50),         ####################################################        
 /*****************************************************************/        
 /* SEGMENT SIGNALETIQUE ADRESSE E-MAIL                           */        
 /*****************************************************************/        
       3 CLEML_O,        
        4 DAADEML  DEC FIXED(7),      ################################################        
        4 TBEGCOD(16)  BIT(1),        ##################################################        
                                      /*--!  !1 - ADRESSE INACTIVE    */        
        4 LTADEML  CHAR(50),          ####################################################        
        4 LTORIGI  CHAR(10),          ####################################################        
        4 CDPREML  CHAR(1),           #####################################################        
        4 FILL_41  CHAR(50),         ####################################################        
 /*****************************************************************/        
 /* SEGMENT SIGNALETIQUE DEVIS                                    */        
 /*****************************************************************/        
       3 CLDEV_O,        
        4 DADVINT  DEC FIXED(11),   #############################################        
        4 NODVINT  DEC FIXED(13),   #############################################        
        4 CDIDINT  DEC FIXED(9),    ##############################################        
        4 HHMMINT  DEC FIXED(5),    ##############################################        
        4 TBEGCOD(16)  BIT(1),      ################################################        
                                    /*--!  ! 1 - AFFICHABLE MYSMAP  */        
                                    /*--!  ! 2 - DELETE MYSMAP      */        
                                    /*--!  ! 3 - SAVE CRM PUR       */        
        4 CDTYPDV  CHAR(2),         ###################################################        
        4 CDORIDV  CHAR(2),         ###################################################        
        4 CDTYPRO  CHAR(7),         ###################################################        
        4 FILL_42  CHAR(50),         ####################################################        
 /*****************************************************************/        
 /* SEGMENT PRODUIT CLIENT                                        */        
 /*****************************************************************/        
       3 PROCL_O,        
 /*K*/  4 NOIDAFF  DEC FIXED(7),     /*NO!  !NO D'AFFILIE             */        
 /*K*/  4 NOIDPOL  DEC FIXED(9),     /*NO!  !NO. DE POLICE            */        
        4 NOIDPAC  DEC FIXED(9),     ################################################        
        4 CDTYPOL  CHAR(2),          #####################################################        
        4 CDIDPRD  CHAR(8),          #####################################################        
        4 CDIDGES  CHAR(8),          #####################################################        
        4 CDCMPRO  CHAR(1),          #####################################################        
                                     /*--!  ! 1: LIEGE                */        
                                     /*--!  ! 2  HASSELT              */        
                                     /*--!  ! 3: BRUXELLES            */        
                                     /*--!  ! ^: INCONNU              */        
        4 CDEGPOL  CHAR(1),          #####################################################        
                                     /*--!  ! A: ACTIF                */        
                                     /*--!  ! C: CLOTURE              */        
                                     /*--!  ! P: PASSIF               */        
                                     /*--!  ! S: SUSPENDU             */        
                                     /*--!  ! D: DEVIS/PROJET         */        
                                     /*--!  ! O: OFFRE                */        
                                     /*--!  ! ?: INCONNU              */        
        4 CDCATPO  CHAR(11),         ####################################################        
        4 CDOCAAR  CHAR(4),          #####################################################        
        4 CDOCADP  CHAR(4),          #####################################################        
        4 CDMOTDP  CHAR(2),          #####################################################        
        4 CDGRPAF  CHAR(7),          #####################################################        
        4 CDFRAPO  CHAR(1),          #####################################################        
        4 CDPREML  CHAR(1),          #####################################################        
                                     /*--!  ! S: SEMESTRIEL           */        
                                     /*--!  ! M: MENSUEL              */        
                                     /*--!  ! Q: QUADRIMESTRIEL       */        
                                     /*--!  ! T: TRIMESTRIEL          */        
                                     /*--!  ! B: BIMESTRIEL           */        
                                     /*--!  ! U: UNIQUE               */        
                                     /*--!  ! ^: INCONNU              */        
        4 CDFRFRA  CHAR(1),          #####################################################        
                                     /*--!  ! Y: YES                  */        
                                     /*--!  ! N: NO                   */        
                                     /*--!  ! ^: INCONNU              */        
        4 CDADPOL  CHAR(1),          #####################################################        
                                     /*--!  ! Y: YES                  */        
                                     /*--!  ! N: NO                   */        
                                     /*--!  ! ^: INCONNU              */        
        4 CDDVPOL  CHAR(3),          #####################################################        
                                     /*--!  ! BEF                     */        
                                     /*--!  ! EUR                     */        
        4 CDCLAPO  CHAR(1),          #####################################################        
                                     /*--!  ! G: GROUPE               */        
                                     /*--!  ! I: INDIVIDUELLE         */        
                                     /*--!  ! ^: INCONNU              */        
        4 NOCPTPO  CHAR(12),         ####################################################        
        4 NODOMPO  CHAR(12),         ####################################################        
        4 NBRAPPO  PIC'9',           ######################################################        
        4 NBSINAC  DEC FIXED(7),     ################################################        
        4 DACMPSI  DEC FIXED(7),     ################################################        
        4 DAEFFPO  DEC FIXED(7),     ################################################        
        4 DAEXPPO  DEC FIXED(7),     ################################################        
        4 DAECHPO  DEC FIXED(4),     ################################################        
        4 PRTRMBA  DEC FIXED(15),    ###############################################        
        4 PRTRMTO  DEC FIXED(15),    ###############################################        
        4 LTINFCP  CHAR(220),        ###################################################        
        4 FILL_43  CHAR(50),         ####################################################        
 /*****************************************************************/        
 /* <<< EXPLORATION DES RELATIONS D UN CLIENT (RELAT)             */        
 /*****************************************************************/        
       3 NBELMTB_RLA  BIN FIXED(15), ############################################        
       3 TBIDELM_RLA(50),        
         4 CDNATRE    CHAR(2),       #################################################        
         4 NOAFFRE    FIXED (7),     ###############################################        
 /*****************************************************************/        
 /* <<< EXPLORATION DES RELATIONS D UN CLIENT (CLREL)             */        
 /*****************************************************************/        
       3 NBELMTB_REL  BIN FIXED(15), ############################################        
       3 TBIDELM_REL(50),        
        4 NOSEQRE  BIN FIXED(15),          ###############################################        
        4 NOIDREL  CHAR(2),                #####################################################        
        4 CDTYREL  CHAR(1),                #####################################################        
        4 NOCLREL  DEC FIXED(7),           ################################################        
        4 TBEGCOD(16)  BIT(1),             ##################################################        
        4 REC_VOTE  CHAR(27),              ###################################################        
        4 DAASSEM  DEC FIXED(7),           ################################################        
 /*****************************************************************/        
 /* <<< EXPLORATION DES HISTORIQUES D'UN CLIENT                   */        
 /*****************************************************************/        
       3 NBELMTB_HIS  BIN FIXED(15), ############################################        
       3 TBIDELM_HIS(50),        
        4 NOSQAFF  BIN FIXED(15),     ###############################################        
        4 NBSQAFF  BIN FIXED(15),     ###############################################        
        4 CDCMGES  CHAR(8),           #####################################################        
        4 DAMAJAF  DEC FIXED(7),      ################################################        
        4 HHMAJAF  DEC FIXED(7),      ################################################        
        4 NOIDTER  CHAR(8),           #####################################################        
        4 LTNMAFF  CHAR(30),          ####################################################        
        4 LTEXTNM  CHAR(30),          ####################################################        
        4 CDRSAFF  CHAR(1),           #####################################################        
        4 CDSEXAF  CHAR(1),           #####################################################        
        4 CDLGEAF  CHAR(1),           #####################################################        
        4 DANAIAF  DEC FIXED(10),     ###############################################        
        4 LTNMCDS  CHAR(21),          ####################################################        
        4 LTRUEAF  CHAR(25),          ####################################################        
        4 CDCPOAF  CHAR(6),           #####################################################        
        4 LTLOCAF  CHAR(25),          ####################################################        
        4 CDPAYAF  CHAR(3),           #####################################################        
        4 LTLINAI  CHAR(30),          ####################################################        
        4 LTPROAF  CHAR(30),          ####################################################        
        4 NOTL1AF  DEC FIXED(3),      ################################################        
        4 NOTL2AF  DEC FIXED(9),      ################################################        
        4 NOTLBUR  CHAR(16),          ####################################################        
        4 NBFACAF  PIC'9',            ######################################################        
        4 CDINSAF  CHAR(2),           #####################################################        
        4 NOCPTAF  PIC'(12)9',        ##################################################        
        4 LTCOMAF  CHAR(30),          ####################################################        
        4 LTNMCOU  CHAR(30),          ####################################################        
        4 CDRSCOU  CHAR(1),           #####################################################        
        4 LTRUECO  CHAR(30),          ####################################################        
        4 CDCPOCO  CHAR(6),           #####################################################        
        4 LTLOCCO  CHAR(25),          ####################################################        
        4 CDPAYCO  CHAR(3),           #####################################################        
        4 LTNM1MB  CHAR(30),          ####################################################        
        4 LTNM2MB  CHAR(30),          ####################################################        
        4 NOHA1AF  BIN FIXED(15),     ###############################################        
        4 NOHA2AF  CHAR(4),           #####################################################        
        4 NOFA1AF  DEC FIXED(3),      ################################################        
        4 NOFA2AF  DEC FIXED(9),      ################################################        
        4 CDCHAL1  CHAR(2),           #####################################################        
        4 CDETCIV  CHAR(2),           #####################################################        
        4 CDORGAF  CHAR(2),           #####################################################        
        4 CDRCTAF  CHAR(2),           #####################################################        
        4 NOGSMAF  CHAR(15),          ####################################################        
        4 DADECAF  DEC FIXED(7),      ################################################        
        4 CDNATAF  CHAR(3),           #####################################################        
        4 RSVHIST  CHAR(93),          ####################################################        
 /*****************************************************************/        
 /* <<< EXPLORATION DES ADRESSE E-MAIL                            */        
 /*****************************************************************/        
       3 NBELMTB_EML  BIN FIXED(15), ############################################        
       3 TBIDELM_EML(50),        
        4 DAADEML  DEC FIXED(7),      ################################################        
        4 TBEGCOD(16)  BIT(1),        ##################################################        
                                      /*--!  !1 - ADRESSE INACTIVE    */        
        4 LTADEML  CHAR(50),          ####################################################        
        4 LTORIGI  CHAR(10),          ####################################################        
        4 CDPREML  CHAR(1),           #####################################################        
 /*****************************************************************/        
 /* <<< EXPLORATION DES ENSEMBLES                                 */        
 /*****************************************************************/        
       3 NBELMTB_ENS  BIN FIXED(15), ############################################        
       3 TBIDELM_ENS(50),        
        4 TBIDENS(2)  CHAR(7),       ##################################################        
 /*****************************************************************/        
 /* <<< EXPLORATION DES POLICES                                   */        
 /*****************************************************************/        
       3 NBELMTB_POL  BIN FIXED(15), ############################################        
       3 TBIDELM_POL(99),        
        4 NOIDPOL  DEC FIXED(8),   ###############################################        
        4 CDTYPOL  CHAR(2),        ####################################################        
        4 CDINTAG  DEC FIXED(7),   ###############################################        
                                   /*--!  !A REMPLACER PAR CDAGINT   */        
        4 NODERAV  DEC FIXED(3),   ###############################################        
        4 TBCDPOL(24)  BIT(1),     #################################################        
                                   /*--!  !01: POLICE COURT TERME    */        
                                   /*--!  !02: FACT MS PAR SOUS GR   */        
                                   /*--!  !03: PRESENCE AD. POLICE   */        
                                   /*--!  !04: MUTATION DE SOCIETE   */        
                                   /*--!  !       SMAP <---> MEGA    */        
                                   /*--!  !05: MS : ATTESTATION      */        
                                   /*--!  !06: BILINGUE/TRILINGUE    */        
                                   /*--!  !07: SINISTRE EN D1        */        
                                   /*--!  !08: SINISTRE EN SA        */        
                                   /*--!  !09: SINISTRE EN AC        */        
                                   /*--!  !10: MEMO POLICE           */        
                                   /*--!  !22: POLICE SOUS PACKAGE   */        
                                   /*--!  !23: POLICE PACKAGE        */        
                                   /*--!  !24: CHGT AFFILIE          */        
 /*****************************************************************/        
 /* <<< EXPLORATION DES PRODUITS                                  */        
 /*****************************************************************/        
       3 NBELMTB_PRO  BIN FIXED(15), ############################################        
       3 TBIDELM_PRO(50),        
        4 NOIDPOL  DEC FIXED(9),   ###############################################        
        4 NOIDPAC  DEC FIXED(9),   ###############################################        
        4 CDTYPOL  CHAR(2),        ####################################################        
         
 /*****************************************************************/        
 /* <<< EXPLORATION DES DEVIS                                     */        
 /*****************************************************************/        
       3 NBELMTB_DEV  BIN FIXED(15), ##########################################        
       3 TBIDELM_DEV(99),        
        4 DADVINT  DEC FIXED(11),   #############################################        
        4 NODVINT  DEC FIXED(13),   #############################################        
        4 CDIDINT  DEC FIXED(9),    ##############################################        
        4 HHMMINT  DEC FIXED(5),    ##############################################        
        4 TBEGCOD(16)  BIT(1),      ################################################        
                                    /*--!  ! 1 - AFFICHABLE MYSMAP  */        
                                    /*--!  ! 2 - DELETE MYSMAP      */        
                                    /*--!  ! 3 - SAVE CRM PUR       */        
        4 CDTYPDV  CHAR(2),         ###################################################        
        4 CDTYPRO  CHAR(7),         ###################################################        
        4 CDORIDV  CHAR(2);         ###################################################        
         
         
 /* AFIN D'EVITER LES PROBLEMES DE STRUCTURE (DESCRIPTOR), JE REDEFINIS        
    LE NOUVEAU CHAMPS SUR LES FILLERS DES STRUCTURE INPUT ET OUTPUT        
    ==> LA STRUCTURE NE CHANGE DONC PAS ET LES PROGRAMMES UTILISANT        
    LE KS1005 NE SONT PAS A RECOMPILER */        
         
 DCL CDDEFCT_I  CHAR(02)  BASED(ADDR(KS1005J.INPUT.CLPRO_I.FILL_11));        
 DCL CDREVME_I  CHAR(01)        
                DEF  KS1005J.INPUT.CLPRO_I.FILL_11 POS(3);        
 DCL CDENFAN_I  CHAR(01)        
                DEF  KS1005J.INPUT.CLPRO_I.FILL_11 POS(4);        
 DCL CDDEFCT_O  CHAR(02)  BASED(ADDR(KS1005J.OUTPUT.CLPRO_O.FILL_32));        
 DCL CDREVME_O  CHAR(01)        
                DEF  KS1005J.OUTPUT.CLPRO_O.FILL_32 POS(3);        
 DCL CDENFAN_O  CHAR(01)        
                DEF  KS1005J.OUTPUT.CLPRO_O.FILL_32 POS(4);        
         
 /*********************************************************************        
    METHODE : CONSULT_XXXXX (CONSULTATION)        
              XXXXX = AFFIL       PCB:DS101        
                      POLIC        
                      ADPOL        
                      ADAFF        
                      ADCOU        
         
              XXXXX = COMPL       PCB:DS102        
         
              XXXXX = HISAF       PCB:DS128        
         
              XXXXX = PROCL       PCB:DS129        
         
              XXXXX = CLACT       PCB:DS132        
                      CLPRO        
                      CLACC        
         
              XXXXX = CLCON       PCB:DS134        
                      CLADR        
                      CLCPL        
                      CLCOP        
         
              XXXXX = CLCOM       PCB:DS137        
                      CLREL        
                      CLPRE        
         
    METHODE : CREAT_XXXXX (CREATION)        
              XXXXX = AFFIL       PCB:DS101        
                      POLIC        
                      ADPOL        
                      ADAFF        
                      ADCOU        
                      RELAT        
                      ENSEM        
         
              XXXXX = COMPL       PCB:DS102        
         
              XXXXX = HISAF       PCB:DS128        
         
              XXXXX = CLACT       PCB:DS132        
                      CLPRO        
                      CLACC        
         
              XXXXX = CLCON       PCB:DS134        
                      CLADR        
                      CLCPL        
                      CLCOP        
         
              XXXXX = CLCOM       PCB:DS137        
                      CLREL        
                      CLPRE        
                      CLEML        
         
    METHODE : MODIF_XXX (MODIFICATION)        
              XXXXX = AFFIL       PCB:DS101        
                      POLIC        
                      ADPOL        
                      ADAFF        
                      ADCOU        
                      ENSEM        
         
              XXXXX = COMPL       PCB:DS102        
         
              XXXXX = HISAF       PCB:DS128        
         
              XXXXX = CLACT       PCB:DS132        
                      CLPRO        
                      CLACC        
         
              XXXXX = CLCON       PCB:DS134        
                      CLADR        
                      CLCPL        
                      CLCOP        
         
              XXXXX = CLCOM       PCB:DS137        
                      CLREL        
                      CLPRE        
         
    METHODE : SUPPR_XXXXX (SUPPRESSION)        
              XXXXX = AFFIL       PCB:DS101        
                      POLIC        
                      ADPOL        
                      ADAFF        
                      ADCOU        
                      RELAT       REMPLIR TOTALEMENT RELAT_I        
                      ENSEM        
         
              XXXXX = COMPL       PCB:DS102        
         
              XXXXX = HISAF       PCB:DS128        
         
              XXXXX = CLACT       PCB:DS132        
                      CLPRO        
                      CLACC        
         
              XXXXX = CLCON       PCB:DS134        
                      CLADR        
                      CLCPL        
                      CLCOP        
         
              XXXXX = CLCOM       PCB:DS137        
                      CLREL        
                      CLPRE        
                      CLEML       SUPPRESSION GLOBALE        
         
         
    METHODE : EXIST_XXXXX (EXISTENCE)        
              XXXXX = A DEFINIR        
         
    METHODES EXPLORATION: EXPLO_1P_XXXXX  1ERE PAGE        
    ====================  EXPLO_PS_XXXXX  PAGE SUIVANTE        
                          EXPLO_PP_XXXXX  PAGE PRECEDENTE        
         
         
    XXXXX = CLREL (SIGNALETIQUE DES RELATIONS)        
    XXXXX = HISAF (HISTORIQUE DU SIGNALETIQUE D UN AFFILIE)        
         
    METHODES EXPLORATION SANS PAGINATION : EXPLO_XXXXX        
    =====================================        
         
    XXXXX = RELAT (RELATION ENTRE AFFILIES)        
    XXXXX = CLEML (ADRESSES E-MAIL )        
    XXXXX = ENSEM (ENSMBLES)        
    XXXXX = POLIC (POLICES)        
    XXXXX = PROCL (PRODUITS)        
    XXXXX = CLDEV (DEVIS)        
         
 **********************************************************************/        
         
 DCL KS1010  ENTRY;        
 /*********************************************************************/        
 /* KS1010J:                                                          */        
 /*         INTERFACE DU SERVICE KS1010:  CREATE PROSPECT VIA NET     */        
 /*                                                                   */        
 /*********************************************************************/        
         
 /* ------- */        
 /* INCLUDE */        
 /* ------- */        
         
 /* NRB - TDMARE - Generation le 27/01/1998 - 16:14        Lgth=00119 */        
 /*******************        
 *  SEGMENT AFFILIE *        
 *******************/        
 DCL  1 S1AFF00 ,                        ###############################################################        
 /*K*/ 2 NOIDAFF  DEC FIXED(7),          /*NO!  !NUMERO D'AFFILIE 0   */        
       2 HEADER_AFF  PIC'(7)9',          #################################################        
       2 HEADER_POL  PIC'(8)9',          #################################################        
       2 FILLER  CHAR(100);              #####################################################        
                     /* COMPOSTEUR POUR DETERMINER DU NO D'AFFILIE */        
 /* NRB - TDMROO - GENERATION LE 03/05/2010 - 14:32        LGTH=00119 */        
 /********************/        
 /*  SEGMENT AFFILIE */        
 /********************/        
 DCL  1 S1AFFIL ,                   ###############################################################        
                                    /*DB!  !DCR41   !S1AFFIL          */        
 /*K*/ 2 NOIDAFF  DEC FIXED(7),     /*NO!  !NUMERO D'AFFILIE          */        
       2 LTNMAFF  CHAR(30),         #####################################################        
       2 CDRSAFF  CHAR(1),          ######################################################        
       2 CDSEXAF  CHAR(1),          ######################################################        
       2 DANAIAF  DEC FIXED(10),    ################################################        
       2 CDLGEAF  CHAR(1),          ######################################################        
       2 NORULOC  DEC FIXED(7),     #################################################        
       2 NOHA1AF  BIN FIXED(15),    ################################################        
       2 NOHA2AF  CHAR(4),          ######################################################        
       2 CDEGCOU  CHAR(1),          ######################################################        
       2 TBEGCOD  BIT(40),          ######################################################        
                                    /*--!  !01 : PROFESSION           */        
                                    /*--!  !02 : EXTENSION DU NOM     */        
                                    /*--!  !03 : LIEU DE NAISSANCE    */        
                                    /*--!  !04 : INSPECTEUR-CPT-FACT. */        
                                    /*--!  !05 : MOTIF DE LA MODIF.   */        
                                    /*--!  !06 : NOM CONDENSE MEMBRE  */        
                                    /*--!  !07 : NOM CONJOINT EN MEGA */        
                                    /*--!  !08 : NUMERO PIC DU CCB    */        
                                    /*--!  !09 : --- VIDE --9/11/2000 */        
                                    /*--!  !10 : TELEPHONE EMPLOYEUR  */        
                                    /*--!  !11 : NO AFFILIE AUTRE SOC */        
                                    /*--!  !12 : REFERENCE CHGT ADR.  */        
                                    /*--!  !13 : REF. DE LA M-A-J     */        
                                    /*--!  !14 : 1 PARTIE NOM DU MBRE */        
                                    /*--!  !15 : 2 PARTIE NOM DU MBRE */        
                                    /*--!  !16 : --- VIDE --9/11/2000 */        
                                    /*--!  !17 : MATRICULE CIE LGCP   */        
                                    /*--!  !18 : PRESENCE RELATIONS   */        
                                    /*--!  !19 : NO DOMICILIATION     */        
                                    /*--!  !20 :                      */        
                                    /*--!  !21 : INFOS ACCIDENTS      */        
                                    /*--!  !22 : NOM COMPTE TIERS     */        
                                    /*--!  !23 : INFO CAISSE AG       */        
                                    /*--!  !24 : QUALITE DELEGUE AG   */        
                                    /*--!  !25 : AFF.AMEL A BLANC     */        
                                    /*--!  !26 : SUPPR. FAT VIA S1DAT */        
                                    /*--!  !27 : NO COMPTE IBAN       */        
                                    /*--!  !28 : CODE BIC             */        
                                    /*--!  !29 : IMAGE 1 CARTE IDENT. */        
                                    /*--!  !30 : IMAGE 2 CARTE IDENT. */        
                                    /*--!  !31 : DATE DER.MAJ EMVC OL */        
                                    /*--!  !32 : DATE CHGT ADRESSE    */        
                                    /*--!  !33 : NR BCE INTRA-CEE     */        
                                    /*--!  !34 : NR IBAN (ZOOMIT)     */        
       2 TBTYPAF  BIT(240),         #####################################################        
                                    /*--!  !VOIR DEFINITION IPS1006   */        
                                    /*--!  !01 : AFFILIE SECONDAIRE   */        
                                    /*--!  !02 : AFFILIE PRINCIPAL    */        
                                    /*--!  !03 : BILINGUE FRANCAIS    */        
                                    /*--!  !04 : BILINGUE NEERLANDAIS */        
                                    /*--!  !05 : NO TVA DS DANAIAF    */        
                                    /*--!  !11 : EPOUX DE ...         */        
                                    /*--!  !12 : EPOUDE DE ...        */        
                                    /*--!  !13 : ENFANT DE ...        */        
                                    /*--!  !14 : PARENT DE ...        */        
                                    /*--!  !15 : CONCUBIN DE ...      */        
                                    /*--!  !16 : CONCUBINE DE ...     */        
                                    /*--!  !17 : DIVERS DE ...        */        
                                    /*--!  !18 : DIVERSES DE ...      */        
                                    /*--!  !29 : CLIENT A REFUSER     */        
                                    /*--!  !30 : CHGT ADRESSE EN COUR */        
                                    /*--!  !31 : VIP                  */        
                                    /*--!  !32 : VIP TRES IMPORTANT   */        
                                    /*--!  !33 : PAS D'AGENDA         */        
                                    /*--!  !34 : CLIENT CCB           */        
                                    /*--!  !35 : CLIENT PASSIF        */        
                                    /*--!  !36 : MEMBRE DU PERSONNEL  */        
                                    /*--!  !37 : PAS DE MAILING       */        
                                    /*--!  !38 : CLIENT A SURVEILLER  */        
                                    /*--!  !39 : EXPERT AUTO ^AUTOMAT */        
                                    /*--!  !40 : CONVENTION DE GESTIO */        
                                    /*--!  !41 : CLIENT FICTIF        */        
                                    /*--!  !42 : MEMO                 */        
                                    /*--!  !43 : CHGT D'ADRESSE EN CO */        
                                    /*--!  !44 : AFFILIE PERIME       */        
                                    /*--!  !45 : CONTENTIEUX          */        
                                    /*--!  !46 : CLUB BLOSO           */        
                                    /*--!  !47 : MEMBRE VLB           */        
                                    /*--!  !48 : PAS DE TP INFORMEX   */        
                                    /*--!  !49 : FONCTIONNAIRE CEE    */        
                                    /*--!  !50 : A NE PAS RAPPELER    */        
                                    /*--!  !51 : ADRESSE SOPRESS      */        
                                    /*--!  !52 : CONTRAT BILINGUE     */        
                                    /*--!  !53 : AFFILIE DECEDE       */        
                                    /*--!  !54 : PRODUCTION FICTIVE   */        
                                    /*--!  !55 : GESTION PROTEGEE     */        
                                    /*--!  !56 : CLIENT CGFP          */        
                                    /*--!  !57 : CELLULE DE DISTRIBUT */        
                                    /*--!  !58 : GESTION SIN. DEDICAE */        
                                    /*--!  !59 : AD.COURRIER SINISTRE */        
                                    /*--!  !60 : DOCUMENT EURO/DEFAUT */        
                                    /*--!  !61 : PROSPECT             */        
                                    /*--!  !62 : SUIVI GESTIONNAIRE   */        
                                    /*--!  !63 : MEMBRE               */        
                                    /*--!  !64 : FAUX-MEMBRE          */        
                                    /*--!  !65 : IMPOSABLE            */        
                                    /*--!  !72 : ACTIF DEFINITIF      */        
                                    /*--!  !73 : ACTIF TEMPORAIRE     */        
                                    /*--!  !74 : INACTIF              */        
                                    /*--!  !75 : RETRAITE             */        
                                    /*--!  !76 : UTILISATEUR EXTERNE  */        
                                    /*--!  !77 : FONCTIONNAIRE        */        
                                    /*--!  !78 : CTRL RSQ : W=BLOQUE  */        
                                    /*--!  !79 : CTRL RSQ : S=SURVEIL */        
                                    /*--!  !80 : SMAP-INFOS           */        
                                    /*--!  !81 : FICHE PERSONNELLE V  */        
                                    /*--!  !82 : NOUV. ADR. INCONNUE  */        
                                    /*--!  !83 : BENEFICIE DE 3 APPEL */        
                                    /*--!  !     AU CC JURIDIQUE LEGI */        
                                    /*--!  !84:FAIT PART. D'1 AFFINIT */        
                                    /*--!  !85:VIE PURE (AME)         */        
                                    /*--!  !86:ENVOI ENQUETE MIEUX... */        
                                    /*--!  !87:RETOUR ENQ. MIEUX...   */        
                                    /*--!  !88:RETOUR ENQ.MIEUX+SIGN. */        
                                    /*--!  !89 : SPONSORING (VIP)     */        
                                    /*--!  !90 : STOP PHONING         */        
                                    /*--!  !91 : ROBINSON             */        
                                    /*--!  !92 : CTL RSQ:Z=BLOQUE ISI */        
                                    /*--!  !93 : PRES. CARTE IDENTIT. */        
                                    /*--!  !94 : FAILLITE             */        
                                    /*--!  !95:STOP TRANSFERT SMAP BQ */        
                                    /*--!  !96 : CODE CERTI-POST      */        
                                    /*--!  !97 : PROSPECT CORPORATE   */        
                                    /*--!  !98 : PROSPECT + DE 5 ANS  */        
                                    /*--!  !99 :ACCEPTATION EXPLICITE */        
                                    /*--!  !     E-MAIL PUBLICITAIRE  */        
                                    /*--!  !100: CLIENT REFUSE EN VIE */        
                                    /*--!  !     PARTICULIERS         */        
                                    /*--!  !101: ENQUTE VIE          */        
                                    /*--!  !     PARTICULIERS EN COURS*/        
                                    /*--!  !102: ACCEPTATION APRES    */        
                                    /*--!  !     ENQUTE VIE PARTIC.  */        
                                    /*--!  !103: REFUS EXPLICITE      */        
                                    /*--!  !     E-MAIL PUBLICITAIRE  */        
                                    /*--!  !104: PAS D'AGENDA ACTIF   */        
                                    /*--!  !     AV.ACTIVATION NVELLE */        
                                    /*--!  !     ADRESSE INCONNUE     */        
                                    /*--!  !105: PAS DE MAILING ACTIF */        
                                    /*--!  !     AV.ACTIVATION NVELLE */        
                                    /*--!  !     ADRESSE INCONNUE     */        
                                    /*--!  !106: CLIENT ETHIAS BANQUE */        
                                    /*--!  !107: ANCIEN CLIENT BANQUE */        
                                    /*--!  !     SEGMENTATION CLIENT  */        
                                    /*--!  !108: SEGMENT TOP          */        
                                    /*--!  !109: SEGMENT POTENTIEL    */        
                                    /*--!  !110: SEGMENT LOW          */        
                                    /*--!  !111: SEGMENT QUESTION MRK */        
                                    /*--!  !112: RESERVER             */        
                                    /*--!  !113: RESERVER             */        
                                    /*--!  !114: RESERVER             */        
                                    /*--!  !115: RESERVER             */        
                                    /*--!  !116: RESERVER             */        
                                    /*--!  !117: RESERVER             */        
                                    /*--!  !     SEGMENTATION CLIENT  */        
                                    /*--!  !118: PARRAIN POTENTIEL    */        
                                    /*--!  !119: FONCT. ASSIMILE      */        
                                    /*--!  !120: FONCT. PARRAINE      */        
                                    /*--!  !121: CONTRATS DS MENAGE   */        
                                    /*--!  !122: CLIENT E-DOCUMENT    */        
                                    /*--!  !123: AGPM                 */        
                                    /*--!  !124: MAGAZINE ETHIAS      */        
                                    /*--!  !125: FIDEL:FRANCHISE 20   */        
                                    /*--!  !126: FIDEL:FRANCHISE 50   */        
                                    /*--!  !127: FIDEL:FRANCHISE 100  */        
                                    /*--!  !128: FIDEL:TRIGGER        */        
                                    /*--!  !129: FIDELISATION         */        
                                    /*--!  !SEGMENT MENAGE            */        
                                    /*--!  !    LIFESTAGE             */        
                                    /*--!  !130: ENS (ENSEIGNANT)     */        
                                    /*--!  !131: YPR (YOUNG PROFES.)  */        
                                    /*--!  !132: SIN (SINGLES)        */        
                                    /*--!  !133: CWC (COUPLES SS ENF) */        
                                    /*--!  !134: FAM (FAMILY LIFE)    */        
                                    /*--!  !135: MED (MEDIORS)        */        
                                    /*--!  !136: SEN (SENIORS)        */        
                                    /*--!  !137: LIBRE (RESERVE)      */        
                                    /*--!  !138: LIBRE (RESERVE)      */        
                                    /*--!  !139: LIBRE (RESERVE)      */        
                                    /*--!  !    INCOME/WEALTH         */        
                                    /*--!  !140: LOWER (<1100 EUR)    */        
                                    /*--!  !141: MASS  (1100 e 3000)  */        
                                    /*--!  !142: AFFLUENT (>3000 EUR) */        
                                    /*--!  ! SEGMENT MENAGE           */        
       2 NOTL1AF  DEC FIXED(3),     #################################################        
       2 NOTL2AF  DEC FIXED(9),     #################################################        
       2 NONATAF  DEC FIXED(11),    ################################################        
       2 DADERMJ  DEC FIXED(7),     #################################################        
       2 CDLGRUE  CHAR(1),          ######################################################        
       2 NOAF1EX  DEC FIXED(7),     #################################################        
       2 NOAF2EX  BIN FIXED(15),    ################################################        
       2 CDPOGEO  DEC FIXED(7),     #################################################        
       2 NBFICDO  BIN FIXED(15);    ################################################        
         
         
    DCL 1 SSA_S1AFFIL,        
         2 FIL1         CHAR (8)     INIT ('S1AFFIL'),        
         2 FIL2         CHAR (1)     INIT ('*'),        
         2 CC           CHAR (3)     INIT ('---'),        
         2 PAR          CHAR (1)     INIT ('('),        
         2 FIL3         CHAR (8)     INIT ('KS1AFFIL'),        
         2 OPER         CHAR (2)     INIT ('= '),        
         2 VALUE        FIXED (7),        
         2 FIL4         CHAR (1)     INIT (')');        
 /* NRB - TDMGUA - GENERATION LE 11/03/2010 - 09:30        LGTH=00110 */        
 /**************************/        
 /*  SEGMENT ENTETE POLICE */        
 /**************************/        
 DCL  1 S1POLIC ,                   ###############################################################        
                                    /*DB!  !DCR41   !S1POLIC          */        
 /*K*/ 2 NOIDPOL  DEC FIXED(8),     /*NO!  !NO. DE POLICE             */        
       2 CDTYPOL  CHAR(2),          ######################################################        
       2 CDLGPOL  CHAR(1),          ######################################################        
       2 CDETAPO  CHAR(1),          ######################################################        
                                    /*--!  !A : ACTIVE                */        
                                    /*--!  !C : CLOTUREE / ANNULEE    */        
                                    /*--!  !P : PASSIVE / EN ATTENTE  */        
                                    /*--!  !S : SUSPENDUE/SANS SUITE  */        
       2 CDCMPRO  CHAR(1),          ######################################################        
       2 CDCMGES  CHAR(8),          ######################################################        
       2 NUSOUPO  DEC FIXED(4),     #################################################        
                                    /*--!  !EN IE, VAUT 9999 POUR LE  */        
                                    /*--!  !NUMERO DE CI 000000       */        
       2 CDINSPO  CHAR(2),          ######################################################        
       2 CDINTAG  DEC FIXED(7),     #################################################        
                                    /*--!  !A REMPLACER PAR CDAGINT   */        
       2 NOINTPO  CHAR(12),         #####################################################        
       2 CDMODPA  CHAR(1),          ######################################################        
       2 CDREAPO  CHAR(1),          ######################################################        
       2 CDGAGPO  CHAR(1),          ######################################################        
       2 NODERAV  DEC FIXED(3),     #################################################        
       2 NBEXEPO  DEC FIXED(3),     #################################################        
       2 NODOMPO  DEC FIXED(10),    ################################################        
       2 NOCPTPO  DEC FIXED(10),    ################################################        
       2 CDEGAPO  CHAR(1),          ######################################################        
       2 TBCDPOL(24)  BIT(1),       ###################################################        
                                    /*--!  !01: POLICE COURT TERME    */        
                                    /*--!  !02: FACT MS PAR SOUS GR   */        
                                    /*--!  !03: PRESENCE AD. POLICE   */        
                                    /*--!  !04: MUTATION DE SOCIETE   */        
                                    /*--!  !       SMAP <---> MEGA    */        
                                    /*--!  !05: MS : ATTESTATION      */        
                                    /*--!  !06: BILINGUE/TRILINGUE    */        
                                    /*--!  !07: SINISTRE EN D1        */        
                                    /*--!  !08: SINISTRE EN SA        */        
                                    /*--!  !09: SINISTRE EN AC        */        
                                    /*--!  !10: MEMO POLICE           */        
                                    /*--!  !21: NE PEUT ETRE VUE NET  */        
                                    /*--!  !22: POLICE SOUS PACKAGE   */        
                                    /*--!  !23: POLICE PACKAGE        */        
                                    /*--!  !24: CHGT AFFILIE          */        
       2 NOIDMAT  CHAR(14),         #####################################################        
       2 NOHDRLT  BIN FIXED(15),    ################################################        
       2 CDDVPOL  CHAR(3),          ######################################################        
       2 CDSTAPO  CHAR(1),          ######################################################        
                                    /*--!  !0: POLICE INCOMPLETE      */        
                                    /*--!  !1: PRODUCT. INDIV. OK     */        
                                    /*--!  !2: FACTURAT.INDIV. OK     */        
                                    /*--!  !3: FACTURAT.PACKAGE OK    */        
       2 CDAGINT  CHAR(6),          ######################################################        
       2 NORFEXT  CHAR(12),         #####################################################        
       2 CDTYDOC  CHAR(1),          ######################################################        
       2 CDDOMIM  CHAR(1),          ######################################################        
                                    /*--!  !       2 = GeRe PAR DOMIC */        
       2 CDDOMGR  CHAR(1),          ######################################################        
                                    /*--!  !       ' ' OU 'N' = NON   */        
       2 FILLER  CHAR(7);           #######################################################        
         
    DCL 1 SSA_S1POLIC,        
         2 FIL1         CHAR (8)     INIT ('S1POLIC'),        
         2 FIL2         CHAR (1)     INIT ('*'),        
         2 CC           CHAR (3)     INIT ('---'),        
         2 PAR          CHAR (1)     INIT ('('),        
         2 FIL3         CHAR (8)     INIT ('KS1POLIC'),        
         2 OPER         CHAR (2)     INIT ('= '),        
         2 VALUE        FIXED (8),        
         2 FIL4         CHAR (1)     INIT (')');        
 /* NRB - TDMOHL - GENERATION LE 20/04/2009 - 15:52        LGTH=00098 */        
 /***************************************        
 *  SEGMENT ADRESSE COURRIER PAR POLICE *        
 ***************************************/        
 DCL  1 S1ADPOL ,                         ###############################################################        
                                          /*DB!  !DCR41   !S1ADPOL    */        
 /*K*/ 2 CDADPOL  CHAR(1),                /*CD!  !CODE ADRESSE        */        
       2 LTNMPOL  CHAR(30),               #####################################################        
       2 CDRSPOL  CHAR(1),                ######################################################        
       2 LTRUEPO  CHAR(30),               #####################################################        
       2 CDCPOPO  CHAR(6),                ######################################################        
       2 LTLOCPO  CHAR(25),               #####################################################        
       2 CDPAYPO  CHAR(3),                ######################################################        
       2 FILLER  CHAR(2);                 #######################################################        
         
 DCL 1 SSA_S1ADPOL,        
         2 FIL1         CHAR (8)       INIT ('S1ADPOL'),        
         2 FIL2         CHAR (1)       INIT ('*'),        
         2 CC           CHAR (3)       INIT ('---'),        
         2 PAR          CHAR (1)       INIT ('('),        
         2 FIL3         CHAR (8)       INIT ('KS1ADPOL'),        
         2 OPER         CHAR (2)       INIT ('= '),        
         2 VALUE        CHAR (1),        
         2 FIL4         CHAR (1)       INIT (')');        
 /* NRB - TDMCLO - Generation le 12/03/2003 - 11:12        Lgth=00059 */        
 /***************************/        
 /* SEGMENT ADRESSE AFFILIE */        
 /***************************/        
 DCL  1 S1ADAFF ,                           ###############################################################        
                                            /*DB!  !DCR41   !S1ADAFF  */        
       2 LTRUEAF  CHAR(25),                 #####################################################        
       2 CDCPOAF  CHAR(6),                  ######################################################        
       2 LTLOCAF  CHAR(25),                 #####################################################        
       2 CDPAYAF  CHAR(3);                  ######################################################        
         
 DCL 1 SSA_S1ADAFF,        
         2 FIL1         CHAR (8)     INIT ('S1ADAFF'),        
         2 FIL2         CHAR (1)     INIT ('*'),        
         2 CC           CHAR (3)     INIT ('---'),        
         2 PAR          CHAR (1)     INIT (' ');        
 /* NRB - TDMOHL - GENERATION LE 20/04/2009 - 15:53        LGTH=00098 */        
 /*****************************************/        
 /*  SEGMENT ADRESSE COURRIER PAR AFFILIE */        
 /*****************************************/        
 DCL  1 S1ADCOU ,                         ###############################################################        
                                          /*DB!  !DCR41   !S1ADCOU    */        
 /*K*/ 2 CDADCOU  CHAR(1),                /*CD!  !CODE ADRESE         */        
       2 LTNMCOU  CHAR(30),               #####################################################        
       2 CDRSCOU  CHAR(1),                ######################################################        
       2 LTRUECO  CHAR(30),               #####################################################        
       2 CDCPOCO  CHAR(6),                ######################################################        
       2 LTLOCCO  CHAR(25),               #####################################################        
       2 CDPAYCO  CHAR(3),                ######################################################        
       2 FILLER  CHAR(2);                 #######################################################        
         
 DCL 1 SSA_S1ADCOU,        
         2 FIL1         CHAR (8)       INIT ('S1ADCOU'),        
         2 FIL2         CHAR (1)       INIT ('*'),        
         2 CC           CHAR (3)       INIT ('---'),        
         2 PAR          CHAR (1)       INIT ('('),        
         2 FIL3         CHAR (8)       INIT ('KS1ADCOU'),        
         2 OPER         CHAR (2)       INIT ('= '),        
         2 VALUE        CHAR (1),        
         2 FIL4         CHAR (1)       INIT (')');        
 /* NRB - TDMEBN - Generation le 09/05/2003 - 11:36        Lgth=00006 */        
 /***********************************************/        
 /* SEGMENT RELATIONS ENTRE POLICES ET AFFILIES */        
 /***********************************************/        
 DCL  1 S1RELAT ,                   ###############################################################        
                                    /*DB!  !DCR41   !S1RELAT          */        
 /*K*/ 2 CDNATRE  CHAR(2),          /*CD!  !NATURE DE LA RELATION     */        
       2 NOAFFRE  DEC FIXED(7);     #################################################        
         
    DCL 1 SSA_S1RELAT,        
         2 FIL1         CHAR (8)     INIT ('S1RELAT'),        
         2 FIL2         CHAR (1)     INIT ('*'),        
         2 CC           CHAR (3)     INIT ('---'),        
         2 PAR          CHAR (1)     INIT ('('),        
         2 FIL3         CHAR (8)     INIT ('KS1RELAT'),        
         2 OPER         CHAR (2)     INIT ('= '),        
         2 VALUE        CHAR (2),        
         2 FIL4         CHAR (1)     INIT (')');        
 /* NRB - TDMEBN - Generation le 09/05/2003 - 11:41        Lgth=00014 */        
 /********************************/        
 /* SEGMENT CREATION D'ENSEMBLES */        
 /********************************/        
 DCL  1 S1ENSEM ,                         ###############################################################        
                                          /*DB!  !DCR41   !S1ENSEM    */        
       2 TBIDENS(2)  CHAR(7);             ###################################################        
         
 DCL 1 SSA_S1ENSEM,        
        2 FIL1          CHAR (8)       INIT ('S1ENSEM'),        
         2 FIL2         CHAR (1)       INIT ('*'),        
         2 CC           CHAR (4)       INIT ('---');        
 /* NRB - TDMEBN - Generation le 09/05/2003 - 11:46        Lgth=00036 */        
 /************************************************/        
 /*  SEGMENT DESTINE AUX DONNEES COMPLEMENTAIRES */        
 /************************************************/        
 DCL  1 S1COMPL ,                   ###############################################################        
 /*K*/ 2 NOIDAFF  DEC FIXED(7),     /*NO!  !NO. D'AFFILIE             */        
 /*K*/ 2 CDTYINF  CHAR(2),          /*CD!  !CODIF. TYPE D'INFORAMTION */        
       2 LTNMINF  CHAR(30);         #####################################################        
         
    DCL 1 SSA_S1COMPL,        
         2 FIL1         CHAR (8)     INIT ('S1COMPL'),        
         2 FIL2         CHAR (1)     INIT ('*'),        
         2 CC           CHAR (3)     INIT ('---'),        
         2 PAR          CHAR (1)     INIT ('('),        
         2 FIL3         CHAR (8)     INIT ('KS1COMPL'),        
         2 OPER         CHAR (2)     INIT ('= '),        
         2 VALUE        CHAR (6),        
         2 FIL4         CHAR (1)     INIT (')');        
 /* NRB - TDMALL - GENERATION LE 06/10/2004 - 08:49        LGTH=00600 */        
 /******************************/        
 /* SEGMENT HISTORIQUE AFFILIE */        
 /* L': 600 DS125 HDAM S1AHS   */        
 /******************************/        
 DCL  1 S1HISAF ,                     ###############################################################        
 /*K*/ 2 NOIDAFF  DEC FIXED(7),       /*NO!  !NO. D'AFFILIE           */        
 /*K*/ 2 NOSQAFF  BIN FIXED(15),      /*NO!  !NO. DE SEQUENCE AFFILIE */        
       2 NBSQAFF  BIN FIXED(15),      ################################################        
         
       2 CDCMGES  CHAR(8),            ######################################################        
       2 DAMAJAF  DEC FIXED(7),       #################################################        
       2 HHMAJAF  DEC FIXED(7),       #################################################        
       2 NOIDTER  CHAR(8),            ######################################################        
         
       2 LTNMAFF  CHAR(30),           #####################################################        
       2 LTEXTNM  CHAR(30),           #####################################################        
       2 CDRSAFF  CHAR(1),            ######################################################        
       2 CDSEXAF  CHAR(1),            ######################################################        
       2 CDLGEAF  CHAR(1),            ######################################################        
       2 DANAIAF  DEC FIXED(10),      ################################################        
       2 LTNMCDS  CHAR(21),           #####################################################        
       2 LTRUEAF  CHAR(25),           #####################################################        
       2 CDCPOAF  CHAR(6),            ######################################################        
       2 LTLOCAF  CHAR(25),           #####################################################        
       2 CDPAYAF  CHAR(3),            ######################################################        
       2 LTLINAI  CHAR(30),           #####################################################        
       2 LTPROAF  CHAR(30),           #####################################################        
       2 NOTL1AF  DEC FIXED(3),       #################################################        
       2 NOTL2AF  DEC FIXED(9),       #################################################        
       2 NOTLBUR  CHAR(16),           #####################################################        
       2 NBFACAF  PIC'9',             #######################################################        
       2 CDINSAF  CHAR(2),            ######################################################        
       2 NOCPTAF  PIC'(12)9',         ###################################################        
       2 LTCOMAF  CHAR(30),           #####################################################        
         
       2 LTNMCOU  CHAR(30),           #####################################################        
       2 CDRSCOU  CHAR(1),            ######################################################        
       2 LTRUECO  CHAR(30),           #####################################################        
       2 CDCPOCO  CHAR(6),            ######################################################        
       2 LTLOCCO  CHAR(25),           #####################################################        
       2 CDPAYCO  CHAR(3),            ######################################################        
         
       2 LTNM1MB  CHAR(30),           #####################################################        
       2 LTNM2MB  CHAR(30),           #####################################################        
         
       2 NOHA1AF  BIN FIXED(15),      ################################################        
       2 NOHA2AF  CHAR(4),            ######################################################        
       2 NOFA1AF  DEC FIXED(3),       #################################################        
       2 NOFA2AF  DEC FIXED(9),       #################################################        
       2 CDCHAL1  CHAR(2),            ######################################################        
       2 CDETCIV  CHAR(2),            ######################################################        
       2 CDORGAF  CHAR(2),            ######################################################        
       2 CDRCTAF  CHAR(2),            ######################################################        
       2 NOGSMAF  CHAR(15),           #####################################################        
       2 DADECAF  DEC FIXED(7),       #################################################        
       2 CDNATAF  CHAR(3),            ######################################################        
       2 RSVHIST  CHAR(93);           #####################################################        
         
         
    DCL 1 SSA_S1HISAF,        
         2 FIL1         CHAR (8)       INIT ('S1HISAF'),        
         2 FIL2         CHAR (1)       INIT ('*'),        
         2 CC           CHAR (3)       INIT ('---'),        
         2 PAR          CHAR (1)       INIT ('('),        
         2 FIL3         CHAR (8)       INIT ('KS1HISAF'),        
         2 OPER         CHAR (2)       INIT ('= '),        
         2 VALUE1       FIXED (7),        
         2 VALUE2       FIXED BIN (15),        
         2 FIL4         CHAR (1)       INIT (')');        
 /* NRB - TDMBAI - GENERATION LE 16/09/2005 - 15:26        LGTH=00100 */        
         
 /***********************************        
 * SIGNALETIQUE ACTIVITES           *        
 ***********************************/        
 DCL  1 S1CLACT ,                       ###############################################################        
 /*K*/ 2 NOIDCLI  DEC FIXED(9),         /*NO!  !IDENTIFICATION CLIENT */        
       2 TBEGCOD(16)  BIT(1),           ###################################################        
       2 ADREMP  CHAR(50),              ######################################################        
       2 LTACTEMP  CHAR(20),            ####################################################        
       2 FILLER  CHAR(23);              ######################################################        
         
 DCL 1     SSA_S1CLACT,        
      2    FIL1         CHAR (8)       INIT ('S1CLACT'),        
      2    FIL2         CHAR (1)       INIT ('*'),        
      2    CC           CHAR (3)       INIT ('---'),        
      2    PAR          CHAR (1)       INIT ('('),        
      2    FIL3         CHAR (8)       INIT ('KS1CLACT'),        
      2    OPER         CHAR (2)       INIT ('= '),        
      2    VALUE        FIXED(09),        
      2    FIL4         CHAR (1)       INIT (')');        
         
 /* NRB - TDMNET - GENERATION LE 19/11/2009 - 09:28        LGTH=00150 */        
 /****************************************/        
 /* SIGNALETIQUE ACTIVITE PROFESSIONELLE */        
 /****************************************/        
         
 DCL  1 S1CLPRO ,                          ###############################################################        
 /*K*/ 2 DAEFPRO  DEC FIXED(7),            /*DC!  !DA. EFF. COMPL.    */        
 /*K*/ 2 NOSQRUE  BIN FIXED(15),           /*SC!  !NO. SEQ. COMPL.999 */        
       2 CDTYPRO  CHAR(2),                 ######################################################        
       2 CDTYEMP  CHAR(2),                 ######################################################        
       2 CDPOEMP  CHAR(4),                 ######################################################        
       2 LOPOEMP  CHAR(20),                #####################################################        
       2 TXDETVA  DEC FIXED(3),            #################################################        
       2 NUDETVA  CHAR(9),                 ######################################################        
       2 LTCMPRO  CHAR(40),                #####################################################        
       2 LTCMEMP  CHAR(40),                #####################################################        
       2 CDHANDI  CHAR(1),                 ######################################################        
       2 CDRETVA  CHAR(1),                 ######################################################        
       2 CDASTVA  CHAR(1),                 ######################################################        
       2 CDTRANS  CHAR(1),                 ######################################################        
       2 TBEGCOD(16)  BIT(1),              ###################################################        
                                           /*--!  !01:SECTEUR PRIVE   */        
                                           /*--!  !02:SECTEUR PUBLIC  */        
                                           /*--!  !03:SECT.ASSOCIATIF */        
       2 CDFONCT  CHAR(1),                 ######################################################        
       2 CDGEPRO  CHAR(2),                 ######################################################        
       2 CDGEEMP  CHAR(2),                 ######################################################        
       2 CDTAENT  CHAR(2),                 ######################################################        
       2 CDPAYEM  CHAR(3),                 ######################################################        
       2 CDDEFCT  CHAR(2),                 ######################################################        
       2 CDREVME  CHAR(1),                 ######################################################        
       2 CDENFAN  CHAR(1),                 ######################################################        
       2 FILLER  CHAR(5);                  #######################################################        
         
 DCL 1     SSA_S1CLPRO,        
      2    FIL1         CHAR (8)       INIT ('S1CLPRO'),        
      2    FIL2         CHAR (1)       INIT ('*'),        
      2    CC           CHAR (3)       INIT ('---'),        
      2    PAR          CHAR (1)       INIT ('('),        
      2    FIL3         CHAR (8)       INIT ('KS1CLPRO'),        
      2    OPER         CHAR (2)       INIT ('= '),        
      2    VALUE1       FIXED(07),        
      2    VALUE2       BIN FIXED(15,0),        
      2    FIL4         CHAR (1)       INIT (')');        
         
 /* NRB - TDMROO - Generation le 09/04/2002 - 13:26        Lgth=00100 */        
 /*****************************************        
 * SIGNALETIQUE ACTIVITES COMPLEMENTAIRES *        
 *****************************************/        
 DCL  1 S1CLACC ,                         ###############################################################        
 /*K*/ 2 NOSQACC  BIN FIXED(15),          /*SQ!  !NO DE SEQUENCE      */        
       2 CDTYACC  CHAR(2),                ######################################################        
       2 LTCMACC  CHAR(40),               #####################################################        
       2 TBEGCOD(16)  BIT(1),             ###################################################        
       2 CDTYASC  CHAR(2),                ######################################################        
       2 LTLIACC  CHAR(30),               #####################################################        
       2 FILLER  CHAR(22);                ######################################################        
         
 DCL 1     SSA_S1CLACC,        
       2    FIL1         CHAR (8)       INIT ('S1CLACC'),        
       2    FIL2         CHAR (1)       INIT ('*'),        
       2    CC           CHAR (3)       INIT ('---'),        
       2    PAR          CHAR (1)       INIT ('('),        
       2    FIL3         CHAR (8)       INIT ('KS1CLACC'),        
       2    OPER         CHAR (2)       INIT ('= '),        
       2    VALUE1       BIN FIXED(15,0),        
       2    FIL4         CHAR (1)       INIT (')');        
         
 /* NRB - TDMGIL - Generation le 29/01/2001 - 17:34        Lgth=00100 */        
 /***********************************        
 * SIGNALETIQUE DES CONTACTS        *        
 ***********************************/        
 DCL  1 S1CLCON ,                       ###############################################################        
 /*K*/ 2 NOIDCLI  DEC FIXED(9),         /*NO!  !IDENTIFICATION CLIENT */        
       2 TBEGCOD(16)  BIT(1),           ###################################################        
       2 FILLER  CHAR(93);              ######################################################        
         
 DCL 1     SSA_S1CLCON,        
      2    FIL1         CHAR (8)       INIT ('S1CLCON'),        
      2    FIL2         CHAR (1)       INIT ('*'),        
      2    CC           CHAR (3)       INIT ('---'),        
      2    PAR          CHAR (1)       INIT ('('),        
      2    FIL3         CHAR (8)       INIT ('KS1CLCON'),        
      2    OPER         CHAR (2)       INIT ('= '),        
      2    VALUE        FIXED(09),        
      2    FIL4         CHAR (1)       INIT (')');        
         
 /* NRB - TDMNET - GENERATION LE 24/06/2009 - 14:10        LGTH=00200 */        
 /******************************************        
 * SIGNALETIQUE DES ADRESSES               *        
 ******************************************/        
 DCL  1 S1CLADR ,                     ###############################################################        
 /*K*/ 2 CDTYADR  CHAR(2),            /*CD!  !CODE TYPE ADRESSE       */        
 /*K*/ 2 DAEFPRO  DEC FIXED(7),       /*DC!  !DATE EFFEF COMPLEMENTEE */        
       2 LTADNO1  CHAR(30),           #####################################################        
       2 LTADNO2  CHAR(30),           #####################################################        
       2 CDADRSO  CHAR(3),            ######################################################        
       2 LTADADR  CHAR(30),           #####################################################        
       2 NOADCPO  CHAR(5),            ######################################################        
       2 NOADBTE  CHAR(5),            ######################################################        
       2 CDADCPO  CHAR(6),            ######################################################        
       2 LOADLOC  CHAR(20),           #####################################################        
       2 CDADPAY  CHAR(3),            ######################################################        
       2 NUADTEL  CHAR(15),           #####################################################        
       2 NUADFAX  CHAR(15),           #####################################################        
       2 TBEGCOD(16)  BIT(1),         ###################################################        
       2 NOCPLPR  CHAR(10),           #####################################################        
       2 NORULOC  DEC FIXED(7),       #################################################        
       2 NOIDAFP  DEC FIXED(7),       #################################################        
       2 DADMACT  DEC FIXED(7),       #################################################        
       2 FILLER  CHAR(8);             #######################################################        
         
 DCL 1     SSA_S1CLADR,        
       2    FIL1         CHAR (8)       INIT ('S1CLADR'),        
       2    FIL2         CHAR (1)       INIT ('*'),        
       2    CC           CHAR (3)       INIT ('---'),        
       2    PAR          CHAR (1)       INIT ('('),        
       2    FIL3         CHAR (8)       INIT ('KS1CLADR'),        
       2    OPER         CHAR (2)       INIT ('= '),        
       2    VALUE1       CHAR (2),        
       2    VALUE2       FIXED(07),        
       2    FIL4         CHAR (1)       INIT (')');        
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
 /* NRB - TDMNET - GENERATION LE 24/06/2009 - 14:10        LGTH=00100 */        
 /*****************************************        
 * SIGNALETIQUE COMPLEMENT D'ADRESSE      *        
 *****************************************/        
 DCL  1 S1CLCPL ,                        ###############################################################        
       2 CDTYACC  CHAR(2),               ######################################################        
       2 LTCLCPL  CHAR(30),              #####################################################        
       2 TBEGCOD(16)  BIT(1),            ###################################################        
       2 LTADEML  CHAR(50),              #####################################################        
       2 FILLER  CHAR(16);               ######################################################        
         
 DCL 1     SSA_S1CLCPL,        
       2    FIL1         CHAR (8)       INIT ('S1CLCPL'),        
       2    FIL2         CHAR (1)       INIT ('*'),        
       2    CC           CHAR (3)       INIT ('---'),        
       2    PAR          CHAR (1)       INIT (')') ;        
 /* NRB - TDMGIL - Generation le 29/01/2001 - 17:34        Lgth=00250 */        
 /******************************************        
 * SIGNALETIQUE DES CONTACTS PRIVILEGIES   *        
 ******************************************/        
 /* 2) PARTICULIER */        
 DCL  1 S1CLCOP ,                         ###############################################################        
       2 NOIDAFF(10)  CHAR(6),            ##################################################        
       2 TBEGCOD(16)  BIT(1),             ###################################################        
       2 FILLER  CHAR(188);               #####################################################        
 DCL 1     SSA_S1CLCOP,        
      2    FIL1         CHAR (8)       INIT ('S1CLCOP '),        
      2    FIL2         CHAR (1)       INIT ('*'),        
      2    CC           CHAR (3)       INIT ('---'),        
      2    PAR          CHAR (1)       INIT (')');        
 /* NRB - TDMGAS - GENERATION LE 23/11/2009 - 14:03        LGTH=00300 */        
 /****************************/        
 /** COMPLEMENT SIGNALETIQUE */        
 /****************************/        
 DCL  1 S1CLCOM ,                   ###############################################################        
 /*K*/ 2 NOIDCLI  DEC FIXED(9),     /*NO!  !IDENTIFICATION CLIENT     */        
       2 DADECAF  DEC FIXED(7),     #################################################        
       2 DAPERMI  DEC FIXED(7),     #################################################        
       2 TBNBCTC(5),        
        3 CDTYCTC  CHAR(2),         #####################################################        
        3 NBCONTR  DEC FIXED(7),    ################################################        
       2 NBENFAN  BIN FIXED(15),    ################################################        
       2 NBENFHA  BIN FIXED(15),    ################################################        
       2 NBAUTCH  BIN FIXED(15),    ################################################        
       2 NOID_CI  DEC FIXED(7),     #################################################        
       2 DACIDEN  DEC FIXED(7),     #################################################        
       2 DAENVAG  DEC FIXED(7),     #################################################        
       2 NBENVAG  DEC FIXED(3),     #################################################        
       2 TBEGCOD(16)  BIT(1),       ###################################################        
                                    /*--!  !01 A CHARGE               */        
                                    /*--!  !02 CLIENT HANDICAPE       */        
                                    /*--!  !03 MOT PASSE TRANSMIS CL  */        
                                    /*--!  !04 NE PAS VOIR LES CONT   */        
                                    /*--!  !05 ABONNEMENT NEWSLETTER  */        
                                    /*--!  !06 NEWSLETTER HTML        */        
                                    /*--!  !07 COLLECTIV.:PRES.COCOM  */        
                                    /*--!  !08 REFUS ABONNEMENT       */        
                                    /*--!  !   NEWSLETTER             */        
                                    /*--!  !09 ABO. MY ETHIAS         */        
                                    /*--!  !10 ABO. WEB BNQ PARTICUL  */        
                                    /*--!  !11 ABO. PER ETHIAS        */        
                                    /*--!  !12 ABO. WEB BNQ CORPORA.  */        
       2 NOPERMI  CHAR(10),         #####################################################        
       2 CDLGSEC  CHAR(1),          ######################################################        
       2 CDORAFF  CHAR(2),          ######################################################        
       2 CDNATCL  CHAR(3),          ######################################################        
       2 LTPRECL  CHAR(15),         #####################################################        
       2 NUGSMCL  CHAR(15),         #####################################################        
       2 NOSEQUI  CHAR(3),          ######################################################        
                                    /*--!  !GENERE ALEATOIREMENT      */        
       2 CDGSTAM  CHAR(1),          ######################################################        
                                    /*--!  !VAL. POSS : I/R/S/BLANC   */        
                                    /*--!  !I : ISRT 1ERE DEM DE MDP  */        
                                    /*--!  !R : NEW MDP-GARDE USERID  */        
                                    /*--!  !S : SUP MDP POUR USERID   */        
       2 CDGSPWD  CHAR(1),          ######################################################        
                                    /*--!  !EMPECHE LA DEM. DE PLS    */        
                                    /*--!  !MDP SIMULTANEMENT         */        
                                    /*--!  !VAL. POSS : E/U/P/BLANC   */        
                                    /*--!  !E : DMD DE MDP EN COURS   */        
                                    /*--!  !U : USERID EXPEDIE        */        
                                    /*--!  !P : MDP EXPEDIE           */        
       2 CDORIDE  CHAR(1),          ######################################################        
                                    /*--!  !VAL. POSS : ALPHANUM      */        
                                    /*--!  !A: ASSURANCE              */        
                                    /*--!  !B: BANQUE                 */        
       2 CDWOCK1  CHAR(1),          ######################################################        
                                    /*--!  !MIS A JOUR PAR BMP        */        
                                    /*--!  !SEULEMENT                 */        
       2 CDWOCK2  CHAR(1),          ######################################################        
                                    /*--!  !MIS A JOUR PAR BMP OU     */        
                                    /*--!  !PAR GESTIONNAIRE AUTOR.   */        
       2 CDETCIV  CHAR(2),          ######################################################        
       2 CDCHAL1  CHAR(2),          ######################################################        
       2 CDCHAL2  CHAR(3),          ######################################################        
       2 CDMAJCL  CHAR(2),          ######################################################        
       2 LTMAJCL  CHAR(30),         #####################################################        
       2 AFFINIT(5),        
        3 CDAFIN1  CHAR(2),         #####################################################        
        3 CDAFIN2  CHAR(15),        ####################################################        
        3 CDFAMIL  CHAR(1),         #####################################################        
       2 CDCIDEN  CHAR(1),          ######################################################        
       2 DADERMS  PIC'(07)9',       ###################################################        
       2 NBCONMS  PIC'(05)9',       ###################################################        
       2 DAEXPCI  PIC'(07)9',       ###################################################        
       2 DAABNWL  PIC'(07)9',       ###################################################        
       2 CDSTACI  CHAR(1),          ######################################################        
       2 DASTACI  PIC'(07)9',       ###################################################        
       2 NOBCEAF  CHAR(10),         #####################################################        
       2 CDCTF2F  CHAR(1),          ######################################################        
       2 CDPEP  CHAR(1),            ########################################################        
       2 CDCOMMEN  CHAR(1),         #####################################################        
       2 CDPTIENF  CHAR(1),         #####################################################        
       2 CDEINVO  CHAR(1),          ######################################################        
       2 CDGEMAG  CHAR(1),          ######################################################        
       2 CDMLEIN  CHAR(1);          ######################################################        
         
  DCL 1     SSA_S1CLCOM,        
       2    FIL1         CHAR (8)       INIT ('S1CLCOM'),        
       2    FIL2         CHAR (1)       INIT ('*'),        
       2    CC           CHAR (3)       INIT ('---'),        
       2    PAR          CHAR (1)       INIT ('('),        
       2    FIL3         CHAR (8)       INIT ('KS1CLCOM'),        
       2    OPER         CHAR (2)       INIT ('= '),        
       2    VALUE        FIXED(09),        
       2    FIL4         CHAR (1)       INIT (')');        
 /* NRB - TDMFOG - Generation le 26/04/2001 - 15:11        Lgth=00100 */        
 /******************************************        
 * SIGNALETIQUE DES RELATIONS              *        
 ******************************************/        
 DCL  1 S1CLREL ,                          ###############################################################        
 /*K*/ 2 NOSEQRE  BIN FIXED(15),           /*SQ!  !NUM. DE SEQUENCE   */        
       2 NOIDREL  CHAR(2),                 ######################################################        
       2 CDTYREL  CHAR(1),                 ######################################################        
       2 NOCLREL  DEC FIXED(7),            #################################################        
       2 TBEGCOD(16)  BIT(1),              ###################################################        
       2 REC_VOTE  CHAR(27),               ####################################################        
       2 DAASSEM  DEC FIXED(7),            #################################################        
       2 FILLER  CHAR(58);                 ######################################################        
 DCL 1     SSA_S1CLREL,        
      2    FIL1         CHAR (8)       INIT ('S1CLREL'),        
      2    FIL2         CHAR (1)       INIT ('*'),        
      2    CC           CHAR (3)       INIT ('---'),        
      2    PAR          CHAR (1)       INIT ('('),        
      2    FIL3         CHAR (8)       INIT ('KS1CLREL'),        
      2    OPER         CHAR (2)       INIT ('= '),        
      2    VALUE        BIN FIXED(15,0),        
      2    FIL4         CHAR (1)       INIT (')');        
 /* NRB - TDMGIL - Generation le 29/01/2001 - 17:35        Lgth=00100 */        
 /*****************************************        
 * SIGNALETIQUE AUTRES PRENOMS            *        
 *****************************************/        
 DCL  1 S1CLPRE ,                           ###############################################################        
       2 LTPRCL1  CHAR(15),                 #####################################################        
       2 LTPRCL2  CHAR(15),                 #####################################################        
       2 TBEGCOD(16)  BIT(1),               ###################################################        
       2 FILLER  CHAR(68);                  ######################################################        
 DCL 1     SSA_S1CLPRE,        
       2    FIL1         CHAR (8)       INIT ('S1CLPRE'),        
       2    FIL2         CHAR (1)       INIT ('*'),        
       2    CC           CHAR (3)       INIT ('---'),        
       2    PAR          CHAR (1)       INIT (')') ;        
 /* NRB - TDMGIL - Generation le 29/01/2001 - 17:35        Lgth=00100 */        
 /*****************************************        
 * SIGNALETIQUE ADRESSES E_MAIL           *        
 *****************************************/        
 DCL  1 S1CLEML ,                     ###############################################################        
       2 DAADEML  DEC FIXED(7),       #################################################        
       2 TBEGCOD(16)  BIT(1),         ###################################################        
                                      /*--!  !1 - ADRESSE INACTIVE    */        
       2 LTADEML  CHAR(50),           #####################################################        
       2 LTORIGI  CHAR(10),           #####################################################        
       2 CDPREML  CHAR(1),            ######################################################        
       2 FILLER  CHAR(33);            ######################################################        
 DCL 1     SSA_S1CLEML,        
       2    FIL1         CHAR (8)       INIT ('S1CLEML'),        
       2    FIL2         CHAR (1)       INIT ('*'),        
       2    CC           CHAR (3)       INIT ('---'),        
       2    PAR          CHAR (1)       INIT (')') ;        
 /* NRB - TDMGAS - GENERATION LE 12/05/2004 - 15:23        LGTH=00200 */        
 /**********************************************        
 * SIGNALETIQUE DES DEVIS INTERNET ET AUTRES  *        
 **********************************************/        
 DCL  1 S1CLDEV ,                     ###############################################################        
 /*KC*/2 DADVINT  DEC FIXED(11),      /*NO!  !DATE+SEQUENCE COMPL     */        
 /*F*/ 2 NODVINT  DEC FIXED(13),      /*NO!  !NUMeRO DEVIS            */        
       2 CDIDINT  DEC FIXED(9),       #################################################        
       2 HHMMINT  DEC FIXED(5),       #################################################        
       2 TBEGCOD(16)  BIT(1),         ###################################################        
                                      /*--!  ! 1 - INTERNET           */        
                                      /*--!  ! 2 - DELETE MYSMAP      */        
                                      /*--!  ! 3 - SAVE CRM PUR       */        
                                      /*--!  ! 4 - REMPLACE           */        
                                      /*--!  ! 5 - SAUVEGARDE MY SMAP */        
                                      /*--!  ! 6 - Souscription       */        
       2 CDTYPDV  CHAR(2),            ######################################################        
       2 CDORIDV  CHAR(2),            ######################################################        
       2 CDTYPRO  CHAR(7),            ######################################################        
         
       2 FILLER  CHAR(166);           #####################################################        
         
 DCL 1     SSA_S1CLDEV,        
      2    FIL1         CHAR (8)       INIT ('S1CLDEV'),        
      2    FIL2         CHAR (1)       INIT ('*'),        
      2    CC           CHAR (3)       INIT ('---'),        
      2    PAR          CHAR (1)       INIT ('('),        
      2    FIL3         CHAR (8)       INIT ('KS1CLDEV'),        
      2    OPER         CHAR (2)       INIT ('= '),        
      2    VALUE        FIXED(11),        
      2    FIL4         CHAR (1)       INIT (')');        
         
 /* NRB - TDMLIS - GENERATION LE 03/02/2009 - 15:12        LGTH=00110 */        
 /**************************************/        
 /*  DSM22 - DETAIL MEMO GESTIONNAIRE  */        
 /*  HDAM     SEGMENT : 110 BYTES      */        
 /**************************************/        
 /* AJOUT CDTYACT (TDMLIS 02-02-09)    */        
 /**************************************/        
         
 DCL  1 SMMEMOG ,                    ###############################################################        
                                     /*DB!  !DCR39   !SMMEMOG         */        
                                     /*DB!  !DDO10   !SMMEMOG         */        
                                     /*DB!  !DSM98   !SMMEMOG         */        
 /*K*/ 2 NOIDMEM  DEC FIXED(9),      /*NO!  !EX + GESTIONNAIRE        */        
 /*K*/ 2 NOSQMEM  BIN FIXED(15),     /*NO!  !NO SEQUENCE COMPL. 32767 */        
       2 DAOPEVN  DEC FIXED(7),      #################################################        
       2 CDNATEV  CHAR(3),           ######################################################        
       2 NOTIERL  CHAR(3),           ######################################################        
       2 TBEGCOD(16)  BIT(1),        ###################################################        
                                     /*--!  !01 : INTITULE=MESSAGE    */        
                                     /*--!  !02 : INTITULE AVEC VAR.  */        
                                     /*--!  !03 : BLANCHIMENT ARGENT  */        
                                     /*--!  !06 : FICHIER ATTACH      */        
                                     /*--!  !07 : LIGN NON VISIB NET  */        
                                     /*--!  !09 : LIGNE VISIBLE NET   */        
                                     /*--!  !10 : DOCUMENT DOC1       */        
                                     /*--!  !11 : LIGNE RETIREE       */        
                                     /*--!  !12 : LETTRE LG PORTRAIT  */        
                                     /*--!  !13 : LETTRE LG PAYSAGE   */        
                                     /*--!  !14 : NOMGINF !! NOTXTEV  */        
                                     /*--!  !15 : NOSQINT !! NOSQSUJ  */        
                                     /*--!  !     INTERVENTION+ SUJET */        
                                     /*--!  !     2 FB15 SUR NOMGINF  */        
                                     /*--!  !16 : NON MODIF           */        
       2 LTNATEV  CHAR(40),          #####################################################        
       2 NOEVNRL  BIN FIXED(15),     ################################################        
       2 NOTXTEV  BIN FIXED(15),     ################################################        
       2 CDORGEV  CHAR(8),           ######################################################        
       2 CDTTAPP  CHAR(2),           ######################################################        
       2 CDMMSEL  CHAR(3),           ######################################################        
       2 CDUTTRN  CHAR(8),           ######################################################        
       2 NOMGINF  CHAR(4),           ######################################################        
       2 CDTYCOL  CHAR(1),           ######################################################        
       2 FILLER  CHAR(17),           ######################################################        
       2 NODOCEV  DEC FIXED(7);      #################################################        
         
   DCL      NOTXTEV_MEMOG      CHAR(2)  BASED(ADDR(SMMEMOG.NOTXTEV));        
         
   DCL SMMEMOG_LTNATEV_R_1_4  CHAR(4)  BASED(ADDR(SMMEMOG.LTNATEV));        
   DCL SMMEMOG_LTNATEV_R_1_6  CHAR(6)  BASED(ADDR(SMMEMOG.LTNATEV));        
   DCL SMMEMOG_LTNATEV_R_1_11 CHAR(11) BASED(ADDR(SMMEMOG.LTNATEV));        
   DCL SMMEMOG_LTNATEV_R_1_16 CHAR(16) BASED(ADDR(SMMEMOG.LTNATEV));        
   DCL SMMEMOG_LTNATEV_R_5    CHAR(36)        
                              BASED(PTRADD(ADDR(SMMEMOG.LTNATEV),4));        
   DCL SMMEMOG_LTNATEV_R_5_2  CHAR(2)        
                              BASED(PTRADD(ADDR(SMMEMOG.LTNATEV),4));        
   DCL SMMEMOG_LTNATEV_R_7_1  CHAR(1)        
                              BASED(PTRADD(ADDR(SMMEMOG.LTNATEV),6));        
   DCL SMMEMOG_LTNATEV_R_8    CHAR(33)        
                              BASED(PTRADD(ADDR(SMMEMOG.LTNATEV),7));        
   DCL SMMEMOG_LTNATEV_R_8_5  CHAR(5)        
                              BASED(PTRADD(ADDR(SMMEMOG.LTNATEV),7));        
   DCL SMMEMOG_LTNATEV_R_8_7  CHAR(7)        
                              BASED(PTRADD(ADDR(SMMEMOG.LTNATEV),7));        
   DCL SMMEMOG_LTNATEV_R_8_8  CHAR(8)        
                              BASED(PTRADD(ADDR(SMMEMOG.LTNATEV),7));        
   DCL SMMEMOG_LTNATEV_R_9_8  CHAR(8)        
                              BASED(PTRADD(ADDR(SMMEMOG.LTNATEV),8));        
   DCL SMMEMOG_LTNATEV_R_12   CHAR(29)        
                              BASED(PTRADD(ADDR(SMMEMOG.LTNATEV),11));        
   DCL SMMEMOG_LTNATEV_R_12_2 CHAR(2)        
                              BASED(PTRADD(ADDR(SMMEMOG.LTNATEV),11));        
   DCL SMMEMOG_LTNATEV_R_16_3 CHAR(3)        
                              BASED(PTRADD(ADDR(SMMEMOG.LTNATEV),15));        
   DCL SMMEMOG_LTNATEV_R_18_8 CHAR(8)        
                              BASED(PTRADD(ADDR(SMMEMOG.LTNATEV),17));        
         
    DCL 1   SSA_SMMEMOG,        
         2  FIL1        CHAR (8)     INIT ('SMMEMOG'),        
         2  FIL2        CHAR (1)     INIT ('*'),        
         2  CC          CHAR (3)     INIT ('---'),        
         2  PAR         CHAR (1)     INIT ('('),        
         2  FIL3        CHAR (8)     INIT ('KSMMEMOG'),        
         2  OPER        CHAR (2)     INIT ('= '),        
         2  VALUE0      FIXED DEC(9),        
         2  VALUE1      BIN FIXED(15),        
         2  FIL4        CHAR (1)     INIT (')');        
   /* LIGNE  MEMO AFF/POL/SIN FS MEMO */        
 /* NRB - TDMDOD - GENERATION LE 17/08/2004 - 10:48        LGTH=00110 */        
 /**************************************/        
 /*  DSM22 - HEADER MEMO GESTIONNAIRE  */        
 /*  HDAM         SEGMENT : 110 BYTES  */        
 /*  --------------------------------  */        
 /*  TDMDOD 17/08/04 AJOUT NOSQREB     */        
 /**************************************/        
         
 DCL  1 SMMEMOH ,                    ###############################################################        
                                     /*DB!  !DCR39   !SMMEMOG         */        
                                     /*DB!  !DDO10   !SMMEMOG         */        
                                     /*DB!  !DSM98   !SMMEMOG         */        
 /*K*/ 2 NOIDMEM  DEC FIXED(9),      /*NO!  !EX + GESTIONNAIRE        */        
 /*K*/ 2 NOSQMEM  BIN FIXED(15),     /*NO!  !NO SEQUENCE COMPL. 32767 */        
       2 NBSQMEM  BIN FIXED(15),     ################################################        
       2 NBLETEM  BIN FIXED(15),     ################################################        
       2 NBSQEVN  BIN FIXED(15),     ################################################        
       2 NBSQDEM  BIN FIXED(15),     ################################################        
       2 NBLIRET  BIN FIXED(15),     ################################################        
       2 NOSQREM  BIN FIXED(15),     ################################################        
       2 NBSQINT  BIN FIXED(15),     ################################################        
       2 NBSQRES(01)  BIN FIXED(15), ############################################        
       2 NOTXNFO  CHAR(2),           ######################################################        
       2 NOSQREB  BIN FIXED(15),     ################################################        
       2 FILLER  CHAR(51),           ######################################################        
       2 CDDBARC  CHAR(1),           ######################################################        
       2 TBEGSCR(64)  BIT(1),        ###################################################        
       2 TBEGCOD(16)  BIT(1),        ###################################################        
                                     /*--!  !08 = ANNULE              */        
                                     /*--!  !09 = PAS DE SIGNAL       */        
                                     /*--!  !SINISTRE                 */        
       2 DABLCMM  CHAR(4),           ######################################################        
       2 CDEGBLC  CHAR(1),           ######################################################        
       2 CDCMGES  CHAR(6),           ######################################################        
       2 DACLOMM  CHAR(4),           ######################################################        
       2 NOTXTHD  CHAR(2),           ######################################################        
       2 NODOCEM  DEC FIXED(7);      #################################################        
   /* HEADER MEMO AFF/POL/SIN FS MEMO */        
         
 DCL 1  KS1010J,        
         
      2  PTRPCB, ################################################################        
       3 DEU02PCB      PTR,          #####################################################        
       3 DC105PCB      PTR,          #####################################################        
       3 DS101PCB      PTR,          #####################################################        
       3 DS101$PCB     PTR,          #####################################################        
       3 DS102PCB      PTR,          #####################################################        
       3 DS104PCB      PTR,          #####################################################        
       3 DS104$PCB     PTR,          #####################################################        
       3 DS105PCB      PTR,          #####################################################        
       3 DS105$PCB     PTR,          #####################################################        
       3 DS106PCB      PTR,          #####################################################        
       3 DS106BPCB     PTR,          #####################################################        
       3 DS108PCB      PTR,          #####################################################        
       3 DS108$PCB     PTR,          #####################################################        
       3 DS125PCB      PTR,          #####################################################        
       3 DS125$PCB     PTR,          #####################################################        
       3 DS128PCB      PTR,          #####################################################        
       3 DS132PCB      PTR,          #####################################################        
       3 DS134PCB      PTR,          #####################################################        
       3 DS137PCB      PTR,          #####################################################        
       3 DSM22PCB      PTR,          #####################################################        
       3 DS149PCB      PTR,          #####################################################        
         
      2  INPUT, #################################################################        
       3 NOIDAFF       DEC FIXED(7), ############################################        
       3 TBEGCOD_I(64) BIT(1),       ##################################################        
                                     /* 01= screen button SIG         */        
                                     /* 02= ...                       */        
                                     /* 04= devis sauve my ethias     */        
                                     /* 13= screen button EML         */        
       3 CDCMGES       CHAR(08),     ################################################        
       3 CDOPTRN       CHAR(05),     ################################################        
       3 CDTYPOP       CHAR(01),     ################################################        
       3 CDLGTRN       CHAR(01),     ################################################        
       3 CDNATEV       CHAR(03),     ################################################        
       3 LTNATEV       CHAR(40),     ################################################        
       3 DEVIS,        
         4 NODVINT     PIC'(13)9',   ##############################################        
         4 CDIDINT     DEC FIXED(9), ############################################        
         4 CDTYPDV     CHAR(02),     ################################################        
         4 CDORIDV     CHAR(02),     ################################################        
         4 CDTYPRO     CHAR(07),     ################################################        
         
 /*********************************************************************/        
 /* DS101  :                                                          */        
 /*          S1AFFIL                                                  */        
 /*                 S1POLIC                                           */        
 /*                        S1ADPOL                                    */        
 /*                 S1ADAFF                                           */        
 /*                 S1ADCOU                                           */        
 /*                 S1RELAT                                           */        
 /*                 S1ENSEM                                           */        
 /*********************************************************************/        
       3 S1AFFIL_I     LIKE S1AFFIL, ############################################        
       3 S1POLIC_I     LIKE S1POLIC,        
       3 S1ADPOL_I     LIKE S1ADPOL,        
       3 S1ADAFF_I     LIKE S1ADAFF,        
       3 S1ADCOU_I     LIKE S1ADCOU,        
       3 S1RELAT_I     LIKE S1RELAT,        
       3 S1ENSEM_I     LIKE S1ENSEM,        
 /*********************************************************************/        
 /* DS102  :                                                          */        
 /*          S1COMPL                                                  */        
 /*********************************************************************/        
       3 S1COMPL_I     LIKE S1COMPL,        
 /*********************************************************************/        
 /* DS128  :                                                          */        
 /*          S1HISAF                                                  */        
 /*********************************************************************/        
       3 S1HISAF_I     LIKE S1HISAF,        
 /*********************************************************************/        
 /* DS132  :                                                          */        
 /*          S1CLACT                                                  */        
 /*                 S1CLPRO                                           */        
 /*                 S1CLACC                                           */        
 /*********************************************************************/        
       3 S1CLACT_I     LIKE S1CLACT,        
       3 S1CLPRO_I     LIKE S1CLPRO,        
       3 S1CLACC_I     LIKE S1CLACC,        
 /*********************************************************************/        
 /* DS134  :                                                          */        
 /*          S1CLCON                                                  */        
 /*                 S1CLADR                                           */        
 /*                 S1CLCPL                                           */        
 /*                 S1CLCOP                                           */        
 /*********************************************************************/        
       3 S1CLCON_I     LIKE S1CLCON,        
       3 S1CLADR_I     LIKE S1CLADR,        
       3 S1CLCPL_I     LIKE S1CLCPL,        
       3 S1CLCOP_I     LIKE S1CLCOP,        
 /*********************************************************************/        
 /* DS137  :                                                          */        
 /*          S1CLCOM                                                  */        
 /*                 S1CLREL                                           */        
 /*                 S1CLPRE                                           */        
 /*                 S1CLEML                                           */        
 /*********************************************************************/        
       3 S1CLCOM_I     LIKE S1CLCOM,        
       3 S1CLREL_I     LIKE S1CLREL,        
       3 S1CLPRE_I     LIKE S1CLPRE,        
       3 S1CLEML_I     LIKE S1CLEML,        
       3 S1CLDEV_I     LIKE S1CLDEV,        
 /* INPUT MY SMAP */        
       3 MYSMAP,        
         4 CDRSAFF   CHAR(01),        
         4 CDSEXAF   CHAR(01),        
         4 CDLGEAF   CHAR(01),        
         4 CDECVAF   CHAR(01),        
         4 NOTELAF   CHAR(13), ###########################        
         4 NOTEL2F   CHAR(13), ############################        
         4 NOTEL3F   CHAR(13), ########################        
         4 LTEMAIL   CHAR(50),        
         4 LTNMAFF   CHAR(30),        
         4 LTRUEAF   CHAR(25),        
         4 NOHA1AF   BIN FIXED(15),        
         4 NOHA2AF   CHAR(4),        
         4 CDCPOAF   CHAR(06),        
         4 LTLOCAF   CHAR(25),        
         4 CDPAYAF   CHAR(03),        
         4 CDTYPRO   CHAR(02),        
         4 CDGEPRO   CHAR(02),        
         4 NORULOC   FIXED DEC (7),        
         4 DANAIAF   FIXED DEC (7),        
      2 OUTPUT, #################################################################        
       3 TBEGCOD_O(64) BIT(1),       ##################################################        
                                     /* 01= UPDATE EFFECTIF, CAR #    */        
                                     /* 02=...                        */        
         
       3 S1AFFIL_O     LIKE S1AFFIL, ############################################        
       3 S1POLIC_O     LIKE S1POLIC,        
       3 S1ADPOL_O     LIKE S1ADPOL,        
       3 S1ADAFF_O     LIKE S1ADAFF,        
       3 S1ADCOU_O     LIKE S1ADCOU,        
       3 S1RELAT_O     LIKE S1RELAT,        
       3 S1ENSEM_O     LIKE S1ENSEM,        
       3 S1COMPL_O     LIKE S1COMPL,        
       3 S1HISAF_O     LIKE S1HISAF,        
       3 S1CLACT_O     LIKE S1CLACT,        
       3 S1CLPRO_O     LIKE S1CLPRO,        
       3 S1CLACC_O     LIKE S1CLACC,        
       3 S1CLCON_O     LIKE S1CLCON,        
       3 S1CLADR_O     LIKE S1CLADR,        
       3 S1CLCPL_O     LIKE S1CLCPL,        
       3 S1CLCOP_O     LIKE S1CLCOP,        
       3 S1CLCOM_O     LIKE S1CLCOM,        
       3 S1CLREL_O     LIKE S1CLREL,        
       3 S1CLPRE_O     LIKE S1CLPRE,        
       3 S1CLEML_O     LIKE S1CLEML,        
       3 S1CLDEV_O     LIKE S1CLDEV,        
       3 MYSMAP,        
         4 DADUJOU   CHAR(10),        
         4 NOIDAFF   CHAR(10),        
         4 CDRSAFF   CHAR(01),        
         4 LTTITAF   CHAR(15),        
         4 LTNMAFF   CHAR(50),        
         4 LTRUEAF   CHAR(50),        
         4 LTLOCAF   CHAR(50),        
         4 LTPAYAF   CHAR(50),        
         4 CDSEXAF   CHAR(01),        
         4 LTSEXAF   CHAR(10),        
         4 CDLGEAF   CHAR(01),        
         4 LTLGEAF   CHAR(15),        
         4 DANAIAF   CHAR(10),        
         4 CDECVAF   CHAR(01),        
         4 LTECVAF   CHAR(15),        
         4 NOTELAF   CHAR(13), ###########################        
         4 NOTEL2F   CHAR(13), ############################        
         4 NOTEL3F   CHAR(13), ########################        
         4 LTEMAIL   CHAR(50),        
         4 LTRUEAD   CHAR(50),        
         4 NOHA1AD   CHAR(06),        
         4 NOHA2AD   CHAR(06),        
         4 CDPOSAD   CHAR(06),        
         4 LTLOCAD   CHAR(50),        
         4 CDPAYAF   CHAR(03),        
         4 CDTYPRO   CHAR(02),        
         4 CDGEPRO   CHAR(02),        
         4 NOIDAFF_F7 FIXED(7),        
         4 RETOUR,        
          5 TBBOCHA(10) BIT (01),        
       3 DEVIS,        
         4 FIND_DEV  CHAR(1),        
      2 *              CHAR(0);        
         
 /*----------------------------------------------------REDEFINITIONS--*/        
 DCL  S1AFFIL_IR       CHAR( STG(KS1010J.INPUT .S1AFFIL_I))        
                      BASED(ADDR(KS1010J.INPUT .S1AFFIL_I));        
 DCL  S1ADAFF_IR       CHAR( STG(KS1010J.INPUT .S1ADAFF_I))        
                      BASED(ADDR(KS1010J.INPUT .S1ADAFF_I));        
 DCL  S1AFFIL_OR       CHAR( STG(KS1010J.OUTPUT.S1AFFIL_O))        
                      BASED(ADDR(KS1010J.OUTPUT.S1AFFIL_O));        
 DCL  S1ADAFF_OR       CHAR( STG(KS1010J.OUTPUT.S1ADAFF_O))        
                      BASED(ADDR(KS1010J.OUTPUT.S1ADAFF_O));        
 /*********************************************************************/        
 /* METHODES:                                                         */        
 /*                                                                   */        
 /* - CREATE_PROSPECT_NET : CREATION D'UN NOUVEL AFFILIE VIA LE NET   */        
 /*                         INPUT: NOIDAFF   = 0                      */        
 /*                                INFORMATIONS A INSERER             */        
 /*                         OUTPUT :                                  */        
 /*                                                                   */        
 /*********************************************************************/        
 /* CODES RETOURS:                                                    */        
 /*                                                                   */        
 /* - 001 : LA METHODE N'EXISTE PAS                                   */        
 /* - 002 : UN POINTEUR PCB N'EST PAS INITIALISE                      */        
 /* - 003 : LA DB MEMO EST FULL                                       */        
 /* - 004 : NOIDAFF N'EST PAS 0 ==> CREATION PROSPECT NET IMPOSSIBLE  */        
 /*********************************************************************/        
 /*-------------------------------------------------------------------*/        
 /* INTERFACE XS1185:  INTERVENTIONS COMMERIALES   (PS1085 & INTERNET)*/        
 /*-------------------------------------------------------------------*/        
 /* POUR APPEL EN ROUTINE:                                            */        
 /*   INCLUDE DE JS1185SX DANS LE PGM APPELANT                        */        
 /*   INIT A FAIRE                                                    */        
 /*     - TOUS LES PTR DB,                                            */        
 /*     - INPUT.MID_PTR    =>   INITIALISE DANS COPY  JS1185SX        */        
 /*             SPA_PTR    =>   INITIALISE DANS COPY  JS1185SX        */        
 /*             PAGE9_PTR  = ADDR(PAGE9)  (SI NECESSAIRE, SINON NULL),*/        
 /*             SW_INT     = '1'B.                                    */        
 /*                                                                   */        
 /*                                                                   */        
 /* RETOUR:                                                           */        
 /*   - EN CAS D'ERRORDB => CDRTPGM = 'ERR_DB'                        */        
 /*                                                                   */        
 /*-------------------------------------------------------------------*/        
 DCL 1    JS1185,        
 /*------------------------- I N P U T -------------------------------*/        
     2   PTRPCB,                         ###############################################################        
      3  IOPCB             PTR,          ################################################        
      3  ALTPCB            PTR,          ################################################        
      3  PRTPCB            PTR,          ################################################        
      3  DEU02PCB          PTR,          ################################################        
      3  TABPCB            PTR,          ################################################        
      3  DS101PCB          PTR,          ################################################        
      3  DSM22PCB          PTR,          ################################################        
      3  DS133PCB          PTR,          ################################################        
      3  DSM19PCB          PTR,          ################################################        
      3  DS139PCB          PTR,          ################################################        
     2   INPUT,        
      3  MID_PTR           PTR,        
      3  SPA_PTR           PTR,        
      3  PAGE9_PTR         PTR,        
      3  SW_INT            BIT(1),       #############################################        
 /*------------------------ O U T P U T ------------------------------*/        
     2   RETURN_CODE,                    ##########################################################        
      3  CDRTPGM          CHAR (6),      ############################################        
      3  DBPTR            PTR,           #################################################        
      3  LASTDLI          CHAR (10),     ###########################################        
      3  ERREUR           BIT(1),        ##############################################        
     2   OUTPUT,        
       3  PAGE1_PS1085 LIKE PGTMP_PS10851,        
       3  PAGE2_PS1085 LIKE PGTMP_PS10852;        
         
 DCL 1 PGTMP_PS10851,        
 /*---------------------------------------------------------*/        
 /*   PAGE 1 TRANSACTION : PS1085   XS1185                  */        
 /*---------------------------------------------------------*/        
 /* DCL 1   PAGE1       STATIC,                             */        
 /*---------------------------------------------------------*/        
      2  LL                 BIN FIXED(15) INIT(381),                            
      2  ZZ                 BIN FIXED(15) INIT(0),                              
      2  LPG                PIC'9'        INIT(0),                              
      2  SCA                CHAR(02),                                           
      2  LTSCTRN_A          CHAR(08),        
      2  LTSCTRN            CHAR(06),        
      2  TBCDCLI            CHAR(09),        
      2  CDALCLI            CHAR(01),        
      2  LTOPTRN            CHAR(30),        
      2  CDOPTRN_A          CHAR(02),        
      2  CDOPTRN            CHAR(05),        
      2  NOIDAFF            CHAR(09),        
      2  LTNMAFF            CHAR(30),        
      2  DANAIAF            CHAR(10),        
      2  CDAGEAF            CHAR(04),        
      2  CDTTAPP_A          CHAR(02),        
      2  CDTTAPP            CHAR(02),        
      2  LTRUEAF            CHAR(30),        
      2  CDCPOAF            CHAR(06),        
      2  LTLOCAF            CHAR(23),        
      2  NOSQINT            CHAR(05),        
      2  NOSQSUJ            CHAR(05),        
      2  HHINTER            CHAR(05),        
      2  CDCNTVC_A          CHAR(02),        
      2  CDCNTVC            CHAR(03),        
      2  LTCNTVC            CHAR(40),        
    /*2  CDPTINT_A          CHAR(02),*/        
    /*2  CDPTINT            CHAR(01), TDMCAS 24/3/5: 001/05/2733 */        
    /*2  CDACTCO            CHAR(09),*/        
    /*2  LTACTCO            CHAR(30),*/        
      2  TAB1(4),        
       3 CDSELAP_A          CHAR(02),        
       3 CDSELAP            CHAR(01),        
       3 LTCACP             CHAR(30),        
       3 CDCACP             CHAR(09),        
      2  TAB2(9),        
       3 CDSELOP_A          CHAR(02),        
       3 CDSELOP            CHAR(01),        
       3 LTOPE              CHAR(30),        
      2  TAB3(9),        
       3 CDSELAC_A          CHAR(02),        
       3 CDSELAC            CHAR(01),        
       3 LTCAC              CHAR(30),        
       3 CDCAC              CHAR(09),        
      2  CDPRODU_A          CHAR(02),        
      2  CDPRODU            CHAR(07),        
      2  CDTYPPR_A          CHAR(02),        
      2  CDTYPPR            CHAR(02),        
      2  CDLETTR_A          CHAR(02),        
      2  CDLETTR            CHAR(03),        
      2  LTMETRN            CHAR(79);                                           
         
 DCL 1 PGTMP_PS10852,        
 /*---------------------------------------------------------*/        
 /*   PAGE 2 TRANSACTION : PS1085   XS1185                  */        
 /*---------------------------------------------------------*/        
 /* DCL 1   PAGE2       STATIC,                             */        
 /*---------------------------------------------------------*/        
      2  LL                 BIN FIXED(15) INIT(381),                            
      2  ZZ                 BIN FIXED(15) INIT(0),                              
      2  LPG                PIC'9'        INIT(0),                              
      2  SCA                CHAR(02),                                           
      2  LTSCTRN_A          CHAR(08),        
      2  LTSCTRN            CHAR(06),        
      2  TBCDCLI            CHAR(09),        
      2  CDALCLI            CHAR(01),        
      2  LTOPTRN            CHAR(30),        
      2  CDOPTRN_A          CHAR(02),        
      2  CDOPTRN            CHAR(05),        
      2  NOIDAFF            CHAR(09),        
      2  LTNMAFF            CHAR(30),        
      2  DANAIAF            CHAR(10),        
      2  CDAGEAF            CHAR(04),        
      2  CDTTAPP            CHAR(02),        
      2  LTRUEAF            CHAR(30),        
      2  CDCPOAF            CHAR(06),        
      2  LTLOCAF            CHAR(23),        
      2  NOSQINT            CHAR(05),        
      2  NOSQSUJ            CHAR(05),        
      2  HHINTER            CHAR(05),        
      2  CDCNTVC            CHAR(03),        
      2  LTCNTVC            CHAR(40),        
    /*2  CDPTINT            CHAR(01),*/        
    /*2  CDACTCO            CHAR(09), TDMCAS 24/3/5: 001/05/2733 */        
    /*2  LTACTCO            CHAR(30),*/        
      2  TAB1(5),        
       3 LTNMAC_A           CHAR(06),        
       3 LTNMAC             CHAR(60),        
      2  TAB2(9),        
       3 CDSELAC            CHAR(01),        
       3 LTCAC              CHAR(30),        
       3 CDCAC              CHAR(09),        
       3 CDSELOP            CHAR(01),        
       3 LTOPE              CHAR(30),        
      2  LTMETRN            CHAR(79);                                           
 /*----------------------------------------------- INCLUDE JS1185SX --*/        
         
 /*------------------------------------------------------------*/        
 /*                                                            */        
 /*               SPA_XS1185    ET    MID1_XS1185              */        
 /*                                                            */        
 /*            POUR PASSAGE D'INFORMATIONS A XS1185            */        
 /*                                                            */        
 /*       VERSION DESTINEE AU PGM APPELANT EN INTERNET         */        
 /*                                                            */        
 /*------------------------------------------------------------*/        
         
 /* --- SPA D'INTERFACE: MEMORISATION DE L'ADDRESSE DANS SPA_PTR --- */        
 /*---------------------------------------------------------- SCENARI */        
 /*  DFINITION DES VARIABLES D'INITIALISATION DU SCENARIO             */        
 /*  ----------------------------------------------------             */        
              /* BLOCAGE CODE OPERATION */        
              /* NOUVEAU CANEVAS */        
         
 /*---------------------------------------------------------- SPAAREA */        
 DCL     XS1185_P            PTR;        
 DCL 1   XS1185_R            BASED(XS1185_P),        
      2  CDPOSTE             CHAR (4),        
      2  LTPOSTE             CHAR (25),        
      2  RESERVE             CHAR (1);        
 DCL 1   XS1185I             BASED(XS1185_P),        
      2  NOPGACT             CHAR (1),       #########################################        
      2  NOPGPRV(6)          CHAR (1),       #########################################        
      2  NUMIDLL(6)          BIN FIXED(15),  ####################################        
      2  TBCATOP             CHAR (06),      ########################################        
      2  CDTYSEL             CHAR (01),      ########################################        
      2  NBPAGE1             PIC '99',       #########################################        
      2  TBSCENA (16)        BIT (1);        ##########################################        
         
 DCL     XS1185_P2            PTR;        
         
 DCL 1   XS11852             BASED(XS1185_P2),        
         
      2  NOIDCLI             CHAR (08),      ########################################        
      2  NOIDSCR             PIC '9999',     #######################################        
      2  RFSIGNA             CHAR (08);      ########################################        
         
 XS1185_P = ADDR(SPA_XS1185.LTOPTR2);        
         
 XS1185_P2 = ADDR(SPA_XS1185.LTRUE1A);        
         
         
 DCL DADESIN_XS1185_F          FIXED DEC(7) BASED (ADDR(SPA_XS1185.        
 DADESIN_C));        
         
 DCL 1   SPA_XS1185        ,        
         
     /*  PARTIE FIXE  */        
         
      2  LL_SPA              BIN FIXED(15),        
      2  XXXX                CHAR (4),        
      2  TRANSAC             CHAR (8),        
      2  MSG_SPA             CHAR (1),      ##########################################        
      2  CDTYECR             CHAR (01),     ###############################        
      2  CDRTTSS             CHAR (02),     ########################################        
      2  NORFPRT             CHAR (08),     ##################################        
      2  CDSCTRN             CHAR (01),     #########################################        
      2  CDATTRN             CHAR (02),     ########################################        
      2  LTSCTRN             CHAR (04),     ####################################        
      2  CDEVTRN             CHAR (01),     #########################################        
      2  CDUTTRN             CHAR (08),     #########################################        
      2  CDOPTRN             CHAR (05),     #################################        
      2  TBRETRN(6)          CHAR (08),     #####################################        
      2  TBFCACT(24)         BIT  (1),      ######################################        
      2  CMDEXEC             CHAR (01),     ########################################        
      2  LTOPTRN             CHAR (30),     ######################################        
      2  LTOPTR2             CHAR (30),     ######################################        
      2  TRANS1              CHAR (08),     #######################################        
      2  TRANS2              CHAR (08),     #######################################        
      2  CDLGTRN             PIC '9',       #######################################        
      2  NOIDAFF             FIXED (7),     ################################        
      2  LTNMAFF             CHAR (30),     ##############################        
      2  CDRSAFF             CHAR (1),      #######################################        
      2  CDSEXAF             CHAR (1),      ##############################        
      2  CDLGEAF             CHAR (1),      ###############################        
      2  CDPOGEO             FIXED(5),      #########################################        
      2  NORULOC             FIXED(7),      #########################################        
      2  LTRUE1A             CHAR (20),     ##################################        
      2  CDCPOAF             CHAR (06),     ##############################        
      2  LTLOCAF             CHAR (25),     ##################################        
      2  NOHA1AF             BIN FIXED(15), #############################        
      2  NOHA1FR             CHAR (01),     ##################################        
      2  NOHA2AF             CHAR (04),     #####################################        
      2  LTRUEAF             CHAR(25),      #######################        
      2  CDPAYAF             CHAR(03),      #############################        
      2  NOIDPOL             FIXED (8),     ################################        
      2  CDTYPOL             CHAR (2),      ##################################        
      2  CDLGPOL             CHAR (1),      ######################################        
      2  CDETAPO             CHAR (1),      ##########################################        
      2  LTNMALP             CHAR (06),     #####################################        
      2  NODOMPO             FIXED(11),     ######################################        
      2  NOCPTPO             FIXED(11),     #####################################        
      2  NOIDNAI             FIXED (7),     ##################################        
      2  NOIDPLQ             CHAR (5),      ################################        
      2  NOIDCHA             CHAR (20),     ################################        
      2  TBTYPAF             BIT (240),     ################################        
                                            /* 60 : CHOIX EURO  */        
      2  TBSEXAF (2)         CHAR (01),     #####################################        
      2  CDGRPCL             CHAR (01),     #####################################        
      2  CDCMGES             CHAR (08),     ####################################        
      2  CDCMPRO             CHAR (01),     #######################################        
      2  NOTL1AF             FIXED (3),     ######################################        
      2  NOTL2AF             FIXED (9),     ######################################        
      2  NOIDSIN             FIXED (9),     ######################################        
      2  NOPPAFF             FIXED (7),     ########################################        
      2  CDCATOP             CHAR (01),     ########################################        
      2  LTOPCOM             CHAR (30),     ########################################        
      2  TRANS3              CHAR (08),     ########################################        
      2  NOORAFF             FIXED (7),     ######################################        
      2  NOIDFAC             CHAR (03),     ####################################        
      2  DANAIAF             FIXED (10),    ###################################        
      2  NOIDFND             CHAR  (03),    #################################        
      2  NOIDMAT             CHAR  (11),    #####################################        
      2  NONATAF             FIXED (11),    ##############################        
      2  LTABRFP             CHAR  (30),    ##############################        
                                            /*  OU CAISSE ET TRANSIT*/        
                                            /* VOIR SPACODEF        */        
                                            /* OU GROUPE+MEDECIN    */        
                                            /* OU RENTE T1          */        
      2  CDEGCOU             CHAR  (01),    ########################################        
      2  TBEGCOD_AFF         BIT   (40),    ########################################        
      2  CDNATPA_RT          CHAR  (02),    ########################################        
                                            /* D5: NUMERO DU PROPRIET.*/        
      2  DAIMPPA_RT          FIXED (5),     #########################################        
      2  CDAPPPR             CHAR  (02),    #######################################        
      2  CDCATTR             CHAR (01),     ###############################        
      2  CDRFPRT             CHAR (03),     #########################################        
      2  NOAVECO             PIC'(3)9',     #########################################        
      2  NOIDFAM             FIXED (7),     ####################################        
                                            /* NO INTERVENANT PRODUCT.*/        
      2  CDTRASW             CHAR  (01),    #######################################        
      2  TBCDCLI             CHAR  (09),    #######################################        
      2  CDALCLI             CHAR  (01),    #######################################        
      2  CDLGFAM             CHAR  (01),    #######################################        
      2  CDLGRUE             CHAR  (01),    #######################################        
      2  NOIDREM             PIC '99',      ################################        
      2  NBSINPO             FIXED BIN(15), #################################        
      2  CDEVTRA             CHAR (01),     ####################################        
      2  NOAF1EX             FIXED(07),     #####################################        
      2  SW_MEMOSIN          CHAR (1),      ######################################        
      2  NOAF2EX             BIN FIXED (15),################################        
      2  ANSINPO             PIC '99',      #######################################        
      2  CDTYFND             CHAR  (01),    ####################################        
                                            /* EN SINISTRE, = A SI*/        
                                            /* PAIEMENT TYPE 89 */        
      2  DADESIN_C           CHAR  (04),    ####################################        
      2  NOIDCRT_SC          FIXED (7),     #####################################        
      2  NOIDSIN_RL          FIXED (9),     #######################################        
      2  CDTYPOL_RL          CHAR  (02),    ######################################        
      2  TBEGGES (8)         BIT   (01),    ######################################        
                                            /* 1=SUIVI GESTIONNAIRE */        
                                            /* 2=SUPER GESTIONNAIRE */        
                                            /* 3=COMMANDE DE MAJ    */        
                                            /* 4=CDE NON PROTEGEE   */        
                                            /* 5= ON=KERNEL CONVERTI*/        
                                            /* 6= ON=NOUVEAU CANEVAS*/        
                                            /* 7=DEVISE OUTPUT T.T. */        
                                            /* 8=CLAUSIER TYPE "U"  */        
      2  NORTMEM             CHAR  (02),    ############################        
      2  CDDVTRN             CHAR  (01),    ######################################        
      2  CDPGTRN             CHAR  (01),    ######################################        
      2  CDDVPOL             CHAR  (01),    ######################################        
      2  CDMODTT             CHAR  (01),    ######################################        
      2  NOTYPDC             PIC '99',      ########################################        
         
     /*  PARTIE VARIABLE : A L'USAGE D'UNE TRANSACTION APPELANTE */        
         
 /* ---- SPA COMPLEMENTAIRE LONGUEUR 200 --------------------------- */        
      2  MEMOCMD,                           ##############################################################        
       3 CDNATOP             CHAR(01),      #########################################        
       3 CDTYPOP             CHAR(01),      #########################################        
       3 CDOBJOP             CHAR(03),      #########################################        
      2  LTOBJOP             CHAR(75),      #########################################        
      2  NOSQMEM             BIN FIXED(15), ####################################        
      2  CDTTAPP             CHAR(2),       ##########################################        
      2  CDAPPEL             CHAR(1),       ##########################################        
      2  CDMMSEL             CHAR(3),       ##########################################        
      2  LTINTKN             CHAR(20),      #########################################        
                                            /* VOIR SPAAREAK         */        
      2  CDLASTK             CHAR(1),       ##########################################        
      2  NOIDRSQ             FIXED(05),     ########################################        
      2  NOLTGEN             CHAR(13),      #########################################        
      2  RSVSPAC             CHAR(75),      #########################################        
 /* ---------------------------------------------------------------- */        
  2 NONE    CHAR(0);        
 JS1185.INPUT.SPA_PTR = ADDR(SPA_XS1185);        
         
 /* --- MID D'INTERFACE: MEMORISATION DE L'ADDRESSE DANS MID_PTR --- */        
 DCL 1    MID_XS1185,        
      2   LL                  BIN FIXED(15),        
      2   Z1                  CHAR(1),        
      2   Z2                  BIT(8),        
      2   MID_DET             CHAR(2000);        
 /*   2   MID_DET             CHAR(1920); TDMTHO 16/08/2005 */        
         
 DCL 1   MID1_XS1185          BASED(ADDR(MID_XS1185.MID_DET)),        
 /*---------------------------------------------------------*/        
 /*   MID1   UTILISE : PS1085            XS1185             */        
 /*---------------------------------------------------------*/        
 /* DCL 1    MID1                                           */        
 /*---------------------------------------------------------*/        
      2   CLE                 CHAR(01),                                         
      2   CDOPTRN             CHAR(05),                                         
      2   CDTTAPP             CHAR(02),        
      2   CDCNTVC             CHAR(03),        
    /*2   CDPTINT             CHAR(01), TDMCAS 24/3/5: 001/05/2733 */        
      2   TAB1(4),        
          3  CDSELAP          CHAR(01),        
      2   TAB2(9),        
          3   CDSELOP         CHAR(01),        
      2   TAB3(9),        
          3   CDSELAC         CHAR(01),        
      2   CDPRODU             CHAR(07),        
      2   CDTYPPR             CHAR(02),        
      2   CDLETTR             CHAR(03),        
      2   FILLER              CHAR(1954);        
         
         
 DCL 1   MID2_XS1185          BASED(ADDR(MID_XS1185.MID_DET)),        
 /*---------------------------------------------------------*/        
 /*   MID2   UTILISE : PS1085            XS1185             */        
 /*---------------------------------------------------------*/        
 /* DCL 1    MID2                                           */        
 /*---------------------------------------------------------*/        
      2   CLE                 CHAR(01),                                         
      2   CDOPTRN             CHAR(05),                                         
      2   FILLER              CHAR(1994);                                       
 JS1185.INPUT.MID_PTR = ADDR(MID_XS1185);        
 /*----------------------------------------- FIN INCLUDE JS1185SX --*/        
 DCL XS1185 ENTRY;            ####################################################        
 /*-------------------------------------------------------------------*/        
 /* INTERFACE XS1186:  INTERVENTIONS COMMERIALES   (PS1086 & INTERNET)*/        
 /*-------------------------------------------------------------------*/        
 /* POUR APPEL EN ROUTINE:                                            */        
 /*   INCLUDE DE JS1186SX DANS LE PGM APPELANT                        */        
 /*   INIT A FAIRE                                                    */        
 /*     - TOUS LES PTR DB,                                            */        
 /*     - INPUT.MID_PTR    =>   INITIALISE DANS COPY  JS1186SX        */        
 /*             SPA_PTR    =>   INITIALISE DANS COPY  JS1186SX        */        
 /*             PAGE9_PTR  = ADDR(PAGE9)  (SI NECESSAIRE, SINON NULL),*/        
 /*             SW_INT     = '1'B.                                    */        
 /*                                                                   */        
 /*                                                                   */        
 /* RETOUR:                                                           */        
 /*   - EN CAS D'ERRORDB => CDRTPGM = 'ERR_DB'                        */        
 /*                                                                   */        
 /* TDMROG 04/10/2004 AJOUT PTR DB DS137$.                            */        
 /* TDMTHO 27/11/2003 AJOUT PTR DB DSM88.                             */        
 /*                                                                   */        
 /*-------------------------------------------------------------------*/        
 DCL 1    JS1186,        
 /*------------------------- I N P U T -------------------------------*/        
     2   PTRPCB,                         ###############################################################        
      3  IOPCB             PTR,          ################################################        
      3  ALTPCB            PTR,          ################################################        
      3  PRTPCB            PTR,          ################################################        
      3  TABPCB            PTR,          ################################################        
      3  DS101PCB          PTR,          ################################################        
      3  DSM22PCB          PTR,          ################################################        
      3  DS133PCB          PTR,          ################################################        
      3  DSM19PCB          PTR,          ################################################        
      3  DEU02PCB          PTR,          ################################################        
      3  DS103PCB          PTR,          ################################################        
      3  DS139PCB          PTR,          ################################################        
      3  DSM55PCB          PTR,          ################################################        
      3  DA201PCB          PTR,          ################################################        
      3  DA203PCB          PTR,          ################################################        
      3  DSM43PCB          PTR,          ################################################        
      3  DSM88PCB          PTR,          ################################################        
      3  DS102PCB          PTR,          ################################################        
      3  DS137PCB          PTR,          ################################################        
      3  DSM07PCB          PTR,          ################################################        
      3  DS124PCB          PTR,          ################################################        
      3  DSM09PCB          PTR,          ################################################        
      3  DSM09BPCB         PTR,          ################################################        
      3  DSM60PCB          PTR,          ################################################        
      3  DSM61PCB          PTR,          ################################################        
      3  DSM62PCB          PTR,          ################################################        
      3  DSM63PCB          PTR,          ################################################        
      3  DSM64PCB          PTR,          ################################################        
      3  DSM65PCB          PTR,          ################################################        
      3  DSM66PCB          PTR,          ################################################        
      3  DSM67PCB          PTR,          ################################################        
      3  DSM68PCB          PTR,          ################################################        
      3  DSM69PCB          PTR,          ################################################        
      3  DS137$PCB         PTR,          ################################################        
     2   INPUT,        
      3  MID_PTR           PTR,        
      3  SPA_PTR           PTR,        
      3  PAGE9_PTR         PTR,          ################################################        
      3  SW_INT            BIT(1),       #############################################        
 /*------------------------ O U T P U T ------------------------------*/        
     2   RETURN_CODE,                    ##########################################################        
      3  CDRTPGM          CHAR (6),      ############################################        
      3  DBPTR            PTR,           #################################################        
      3  LASTDLI          CHAR (10),     ###########################################        
      3  ERREUR           BIT(1),        ##############################################        
     2   OUTPUT,        
       3  PAGE1_PS1086 LIKE PGTMP_PS1086;        
         
         
 DCL 1 PGTMP_PS1086,        
 /*---------------------------------------------------------*/        
 /*   PAGE 1 TRANSACTION : PS1086   XS1186                  */        
 /*---------------------------------------------------------*/        
 /* DCL 1   PAGE1       STATIC,                             */        
 /*---------------------------------------------------------*/        
      2  LL                 BIN FIXED(15),                                      
      2  ZZ                 BIN FIXED(15) INIT(0),                              
      2  LPG                PIC'9'        INIT(0),                              
      2  SCA                CHAR(02),                                           
      2  LTSCTRN_A          CHAR(08),        
      2  LTSCTRN            CHAR(06),        
      2  TBCDCLI            CHAR(09),        
      2  CDALCLI            CHAR(01),        
      2  LTOPTRN            CHAR(30),        
      2  CDOPTRN_A          CHAR(02),        
      2  CDOPTRN            CHAR(05),        
      2  LTNMENV            CHAR(30),        
      2  NOIDAFF            CHAR(09),        
      2  LTNMAFF            CHAR(18),        
      2  NOIDINT            CHAR(05),        
      2  NOIDSUJ            CHAR(05),        
      2  HHINTER            CHAR(05),        
      2  CDTYPPR_A          CHAR(02),        
      2  CDTYPPR            CHAR(02),        
      2  CDLETTR            CHAR(03),        
      2  CDPRODU_A          CHAR(02),        
      2  CDPRODU            CHAR(07),        
      2  LTPRODU            CHAR(30),        
      2  LTREF              CHAR(05),        
      2  CDREF_A            CHAR(02),        
      2  CDREF              CHAR(12),        
      2  LTENV1             CHAR(10),        
      2  CDENVPT_A          CHAR(02),        
      2  CDENVPT            CHAR(01),        
      2  LTENV2             CHAR(40),        
      2  TBTYPPRA(15),        
        3  CDSEA_A          CHAR(02),        
        3  CDSEA            CHAR(01),        
        3  LTPRA_A          CHAR(06),        
        3  LTPRA            CHAR(28),        
        3  CDPRA            CHAR(07),        
      2  TBTYPPRB(15),        
        3  CDSEB_A          CHAR(02),        
        3  CDSEB            CHAR(01),        
        3  LTPRB_A          CHAR(06),        
        3  LTPRB            CHAR(28),        
        3  CDPRB            CHAR(07),        
      2  LTMETRN            CHAR(79);                                           
         
 /*----------------------------------------------- INCLUDE JS1186SX --*/        
         
 /*------------------------------------------------------------*/        
 /*                                                            */        
 /*               SPA_XS1186    ET    MID1_XS1186              */        
 /*                                                            */        
 /*            POUR PASSAGE D'INFORMATIONS A XS1186            */        
 /*                                                            */        
 /*       VERSION DESTINEE AU PGM APPELANT EN INTERNET         */        
 /*                                                            */        
 /*------------------------------------------------------------*/        
         
 /* --- SPA D'INTERFACE: MEMORISATION DE L'ADDRESSE DANS SPA_PTR --- */        
 /*---------------------------------------------------------- SCENARI */        
 /*  DFINITION DES VARIABLES D'INITIALISATION DU SCENARIO             */        
 /*  ----------------------------------------------------             */        
              /* BLOCAGE CODE OPERATION */        
              /* NOUVEAU CANEVAS */        
         
 /*---------------------------------------------------------- SPAAREA */        
 DCL     XS1186_P            PTR;        
 DCL 1   XS1186_R            BASED(XS1186_P),        
      2  CDPOSTE             CHAR (4),        
      2  LTPOSTE             CHAR (25),        
      2  RESERVE             CHAR (1);        
 DCL 1   XS1186I             BASED(XS1186_P),        
      2  NOPGACT             CHAR (1),       #########################################        
      2  NOPGPRV(6)          CHAR (1),       #########################################        
      2  NUMIDLL(6)          BIN FIXED(15),  ####################################        
      2  TBCATOP             CHAR (06),      ########################################        
      2  CDTYSEL             CHAR (01),      ########################################        
      2  NBPAGE1             PIC '99',       #########################################        
      2  TBSCENA (16)        BIT (1);        ##########################################        
         
 DCL     XS1186_P2            PTR;        
         
 DCL 1   XS11862             BASED(XS1186_P2),        
         
      2  NOIDCLI             CHAR (08),      ########################################        
      2  NOIDSCR             PIC '9999',     #######################################        
      2  RFSIGNA             CHAR (08);      ########################################        
         
 XS1186_P = ADDR(SPA_XS1186.LTOPTR2);        
         
 XS1186_P2 = ADDR(SPA_XS1186.LTRUE1A);        
         
         
 DCL DADESIN_XS1186_F          FIXED DEC(7) BASED (ADDR(SPA_XS1186.        
 DADESIN_C));        
         
 DCL 1   SPA_XS1186        ,        
         
     /*  PARTIE FIXE  */        
         
      2  LL_SPA              BIN FIXED(15),        
      2  XXXX                CHAR (4),        
      2  TRANSAC             CHAR (8),        
      2  MSG_SPA             CHAR (1),      ##########################################        
      2  CDTYECR             CHAR (01),     ###############################        
      2  CDRTTSS             CHAR (02),     ########################################        
      2  NORFPRT             CHAR (08),     ##################################        
      2  CDSCTRN             CHAR (01),     #########################################        
      2  CDATTRN             CHAR (02),     ########################################        
      2  LTSCTRN             CHAR (04),     ####################################        
      2  CDEVTRN             CHAR (01),     #########################################        
      2  CDUTTRN             CHAR (08),     #########################################        
      2  CDOPTRN             CHAR (05),     #################################        
      2  TBRETRN(6)          CHAR (08),     #####################################        
      2  TBFCACT(24)         BIT  (1),      ######################################        
      2  CMDEXEC             CHAR (01),     ########################################        
      2  LTOPTRN             CHAR (30),     ######################################        
      2  LTOPTR2             CHAR (30),     ######################################        
      2  TRANS1              CHAR (08),     #######################################        
      2  TRANS2              CHAR (08),     #######################################        
      2  CDLGTRN             PIC '9',       #######################################        
      2  NOIDAFF             FIXED (7),     ################################        
      2  LTNMAFF             CHAR (30),     ##############################        
      2  CDRSAFF             CHAR (1),      #######################################        
      2  CDSEXAF             CHAR (1),      ##############################        
      2  CDLGEAF             CHAR (1),      ###############################        
      2  CDPOGEO             FIXED(5),      #########################################        
      2  NORULOC             FIXED(7),      #########################################        
      2  LTRUE1A             CHAR (20),     ##################################        
      2  CDCPOAF             CHAR (06),     ##############################        
      2  LTLOCAF             CHAR (25),     ##################################        
      2  NOHA1AF             BIN FIXED(15), #############################        
      2  NOHA1FR             CHAR (01),     ##################################        
      2  NOHA2AF             CHAR (04),     #####################################        
      2  LTRUEAF             CHAR(25),      #######################        
      2  CDPAYAF             CHAR(03),      #############################        
      2  NOIDPOL             FIXED (8),     ################################        
      2  CDTYPOL             CHAR (2),      ##################################        
      2  CDLGPOL             CHAR (1),      ######################################        
      2  CDETAPO             CHAR (1),      ##########################################        
      2  LTNMALP             CHAR (06),     #####################################        
      2  NODOMPO             FIXED(11),     ######################################        
      2  NOCPTPO             FIXED(11),     #####################################        
      2  NOIDNAI             FIXED (7),     ##################################        
      2  NOIDPLQ             CHAR (5),      ################################        
      2  NOIDCHA             CHAR (20),     ################################        
      2  TBTYPAF             BIT (240),     ################################        
                                            /* 60 : CHOIX EURO  */        
      2  TBSEXAF (2)         CHAR (01),     #####################################        
      2  CDGRPCL             CHAR (01),     #####################################        
      2  CDCMGES             CHAR (08),     ####################################        
      2  CDCMPRO             CHAR (01),     #######################################        
      2  NOTL1AF             FIXED (3),     ######################################        
      2  NOTL2AF             FIXED (9),     ######################################        
      2  NOIDSIN             FIXED (9),     ######################################        
      2  NOPPAFF             FIXED (7),     ########################################        
      2  CDCATOP             CHAR (01),     ########################################        
      2  LTOPCOM             CHAR (30),     ########################################        
      2  TRANS3              CHAR (08),     ########################################        
      2  NOORAFF             FIXED (7),     ######################################        
      2  NOIDFAC             CHAR (03),     ####################################        
      2  DANAIAF             FIXED (10),    ###################################        
      2  NOIDFND             CHAR  (03),    #################################        
      2  NOIDMAT             CHAR  (11),    #####################################        
      2  NONATAF             FIXED (11),    ##############################        
      2  LTABRFP             CHAR  (30),    ##############################        
                                            /*  OU CAISSE ET TRANSIT*/        
                                            /* VOIR SPACODEF        */        
                                            /* OU GROUPE+MEDECIN    */        
                                            /* OU RENTE T1          */        
      2  CDEGCOU             CHAR  (01),    ########################################        
      2  TBEGCOD_AFF         BIT   (40),    ########################################        
      2  CDNATPA_RT          CHAR  (02),    ########################################        
                                            /* D5: NUMERO DU PROPRIET.*/        
      2  DAIMPPA_RT          FIXED (5),     #########################################        
      2  CDAPPPR             CHAR  (02),    #######################################        
      2  CDCATTR             CHAR (01),     ###############################        
      2  CDRFPRT             CHAR (03),     #########################################        
      2  NOAVECO             PIC'(3)9',     #########################################        
      2  NOIDFAM             FIXED (7),     ####################################        
                                            /* NO INTERVENANT PRODUCT.*/        
      2  CDTRASW             CHAR  (01),    #######################################        
      2  TBCDCLI             CHAR  (09),    #######################################        
      2  CDALCLI             CHAR  (01),    #######################################        
      2  CDLGFAM             CHAR  (01),    #######################################        
      2  CDLGRUE             CHAR  (01),    #######################################        
      2  NOIDREM             PIC '99',      ################################        
      2  NBSINPO             FIXED BIN(15), #################################        
      2  CDEVTRA             CHAR (01),     ####################################        
      2  NOAF1EX             FIXED(07),     #####################################        
      2  SW_MEMOSIN          CHAR (1),      ######################################        
      2  NOAF2EX             BIN FIXED (15),################################        
      2  ANSINPO             PIC '99',      #######################################        
      2  CDTYFND             CHAR  (01),    ####################################        
                                            /* EN SINISTRE, = A SI*/        
                                            /* PAIEMENT TYPE 89 */        
      2  DADESIN_C           CHAR  (04),    ####################################        
      2  NOIDCRT_SC          FIXED (7),     #####################################        
      2  NOIDSIN_RL          FIXED (9),     #######################################        
      2  CDTYPOL_RL          CHAR  (02),    ######################################        
      2  TBEGGES (8)         BIT   (01),    ######################################        
                                            /* 1=SUIVI GESTIONNAIRE */        
                                            /* 2=SUPER GESTIONNAIRE */        
                                            /* 3=COMMANDE DE MAJ    */        
                                            /* 4=CDE NON PROTEGEE   */        
                                            /* 5= ON=KERNEL CONVERTI*/        
                                            /* 6= ON=NOUVEAU CANEVAS*/        
                                            /* 7=DEVISE OUTPUT T.T. */        
                                            /* 8=CLAUSIER TYPE "U"  */        
      2  NORTMEM             CHAR  (02),    ############################        
      2  CDDVTRN             CHAR  (01),    ######################################        
      2  CDPGTRN             CHAR  (01),    ######################################        
      2  CDDVPOL             CHAR  (01),    ######################################        
      2  CDMODTT             CHAR  (01),    ######################################        
      2  NOTYPDC             PIC '99',      ########################################        
         
     /*  PARTIE VARIABLE : A L'USAGE D'UNE TRANSACTION APPELANTE */        
         
 /* ---- SPA COMPLEMENTAIRE LONGUEUR 200 --------------------------- */        
      2  MEMOCMD,                           ##############################################################        
       3 CDNATOP             CHAR(01),      #########################################        
       3 CDTYPOP             CHAR(01),      #########################################        
       3 CDOBJOP             CHAR(03),      #########################################        
      2  LTOBJOP             CHAR(75),      #########################################        
      2  NOSQMEM             BIN FIXED(15), ####################################        
      2  CDTTAPP             CHAR(2),       ##########################################        
      2  CDAPPEL             CHAR(1),       ##########################################        
      2  CDMMSEL             CHAR(3),       ##########################################        
      2  LTINTKN             CHAR(20),      #########################################        
                                            /* VOIR SPAAREAK         */        
      2  CDLASTK             CHAR(1),       ##########################################        
      2  NOIDRSQ             FIXED(05),     ########################################        
      2  NOLTGEN             CHAR(13),      #########################################        
      2  RSVSPAC             CHAR(75),      #########################################        
 /* ---------------------------------------------------------------- */        
  2 NONE    CHAR(0);        
 JS1186.INPUT.SPA_PTR = ADDR(SPA_XS1186);        
 /* --- MID D'INTERFACE: MEMORISATION DE L'ADDRESSE DANS MID_PTR --- */        
 DCL 1    MID_XS1186,        
      2   LL                  BIN FIXED(15),        
      2   Z1                  CHAR(1),        
      2   Z2                  BIT(8),        
      2   MID_DET             CHAR(1920);        
         
 DCL 1   MID1_XS1186          BASED(ADDR(MID_XS1186.MID_DET)),        
 /*---------------------------------------------------------*/        
 /*   MID1   UTILISE : PS1086            XS1186             */        
 /*---------------------------------------------------------*/        
 /* DCL 1    MID1                                           */        
 /*---------------------------------------------------------*/        
      2   CLE                 CHAR(01),        
      2   CURSEUR,        
       3  LIGNE               PIC '99',        
       3  COLONNE             PIC '99',        
      2   CDOPTRN             CHAR(05),                                         
      2   CDTYPPR             CHAR(02),        
      2   CDPRODU             CHAR(07),        
      2   CDREF               CHAR(12),        
      2   CDENVPT             CHAR(01),        
      2   TBTYPPRA(15),        
       3   CDSEA              CHAR(01),        
      2   TBTYPPRB(15),        
       3   CDSEB              CHAR(01),        
      2   FILLER              CHAR(1858);        
 JS1186.INPUT.MID_PTR = ADDR(MID_XS1186);        
 /*----------------------------------------- FIN INCLUDE JS1186SX --*/        
 DCL XS1186 ENTRY;            ####################################################        
 /*------------------------------------------- INCLUDE JSM207SX --*/        
         
 /*------------------------------------------------------------*/        
 /*                                                            */        
 /*               SPA_XSM806    ET    MID1_XSM806              */        
 /*                                                            */        
 /*            POUR PASSAGE D'INFORMATIONS A XSM806            */        
 /*                                                            */        
 /*       VERSION DESTINEE AU PGM APPELANT en internet         */        
 /*                                                            */        
 /*------------------------------------------------------------*/        
         
 /* - SPA D'INTERFACE: MEMORISATION DE L'ADDRESSE DANS SPA_PTR -- */        
 /*---------------------------------------------------------- SCENARI */        
 /*  DFINITION DES VARIABLES D'INITIALISATION DU SCENARIO             */        
 /*  ----------------------------------------------------             */        
              /* BLOCAGE CODE OPERATION */        
              /* NOUVEAU CANEVAS */        
         
 /*---------------------------------------------------------- SPAAREA */        
 DCL     XSM806_P            PTR;        
 DCL 1   XSM806_R            BASED(XSM806_P),        
      2  CDPOSTE             CHAR (4),        
      2  LTPOSTE             CHAR (25),        
      2  RESERVE             CHAR (1);        
 DCL 1   XSM806I             BASED(XSM806_P),        
      2  NOPGACT             CHAR (1),       #########################################        
      2  NOPGPRV(6)          CHAR (1),       #########################################        
      2  NUMIDLL(6)          BIN FIXED(15),  ####################################        
      2  TBCATOP             CHAR (06),      ########################################        
      2  CDTYSEL             CHAR (01),      ########################################        
      2  NBPAGE1             PIC '99',       #########################################        
      2  TBSCENA (16)        BIT (1);        ##########################################        
         
 DCL     XSM806_P2            PTR;        
         
 DCL 1   XSM8062             BASED(XSM806_P2),        
         
      2  NOIDCLI             CHAR (08),      ########################################        
      2  NOIDSCR             PIC '9999',     #######################################        
      2  RFSIGNA             CHAR (08);      ########################################        
         
 XSM806_P = ADDR(SPA_XSM806.LTOPTR2);        
         
 XSM806_P2 = ADDR(SPA_XSM806.LTRUE1A);        
         
         
 DCL DADESIN_XSM806_F          FIXED DEC(7) BASED (ADDR(SPA_XSM806.        
 DADESIN_C));        
         
 DCL 1   SPA_XSM806        ,        
         
     /*  PARTIE FIXE  */        
         
      2  LL_SPA              BIN FIXED(15),        
      2  XXXX                CHAR (4),        
      2  TRANSAC             CHAR (8),        
      2  MSG_SPA             CHAR (1),      ##########################################        
      2  CDTYECR             CHAR (01),     ###############################        
      2  CDRTTSS             CHAR (02),     ########################################        
      2  NORFPRT             CHAR (08),     ##################################        
      2  CDSCTRN             CHAR (01),     #########################################        
      2  CDATTRN             CHAR (02),     ########################################        
      2  LTSCTRN             CHAR (04),     ####################################        
      2  CDEVTRN             CHAR (01),     #########################################        
      2  CDUTTRN             CHAR (08),     #########################################        
      2  CDOPTRN             CHAR (05),     #################################        
      2  TBRETRN(6)          CHAR (08),     #####################################        
      2  TBFCACT(24)         BIT  (1),      ######################################        
      2  CMDEXEC             CHAR (01),     ########################################        
      2  LTOPTRN             CHAR (30),     ######################################        
      2  LTOPTR2             CHAR (30),     ######################################        
      2  TRANS1              CHAR (08),     #######################################        
      2  TRANS2              CHAR (08),     #######################################        
      2  CDLGTRN             PIC '9',       #######################################        
      2  NOIDAFF             FIXED (7),     ################################        
      2  LTNMAFF             CHAR (30),     ##############################        
      2  CDRSAFF             CHAR (1),      #######################################        
      2  CDSEXAF             CHAR (1),      ##############################        
      2  CDLGEAF             CHAR (1),      ###############################        
      2  CDPOGEO             FIXED(5),      #########################################        
      2  NORULOC             FIXED(7),      #########################################        
      2  LTRUE1A             CHAR (20),     ##################################        
      2  CDCPOAF             CHAR (06),     ##############################        
      2  LTLOCAF             CHAR (25),     ##################################        
      2  NOHA1AF             BIN FIXED(15), #############################        
      2  NOHA1FR             CHAR (01),     ##################################        
      2  NOHA2AF             CHAR (04),     #####################################        
      2  LTRUEAF             CHAR(25),      #######################        
      2  CDPAYAF             CHAR(03),      #############################        
      2  NOIDPOL             FIXED (8),     ################################        
      2  CDTYPOL             CHAR (2),      ##################################        
      2  CDLGPOL             CHAR (1),      ######################################        
      2  CDETAPO             CHAR (1),      ##########################################        
      2  LTNMALP             CHAR (06),     #####################################        
      2  NODOMPO             FIXED(11),     ######################################        
      2  NOCPTPO             FIXED(11),     #####################################        
      2  NOIDNAI             FIXED (7),     ##################################        
      2  NOIDPLQ             CHAR (5),      ################################        
      2  NOIDCHA             CHAR (20),     ################################        
      2  TBTYPAF             BIT (240),     ################################        
                                            /* 60 : CHOIX EURO  */        
      2  TBSEXAF (2)         CHAR (01),     #####################################        
      2  CDGRPCL             CHAR (01),     #####################################        
      2  CDCMGES             CHAR (08),     ####################################        
      2  CDCMPRO             CHAR (01),     #######################################        
      2  NOTL1AF             FIXED (3),     ######################################        
      2  NOTL2AF             FIXED (9),     ######################################        
      2  NOIDSIN             FIXED (9),     ######################################        
      2  NOPPAFF             FIXED (7),     ########################################        
      2  CDCATOP             CHAR (01),     ########################################        
      2  LTOPCOM             CHAR (30),     ########################################        
      2  TRANS3              CHAR (08),     ########################################        
      2  NOORAFF             FIXED (7),     ######################################        
      2  NOIDFAC             CHAR (03),     ####################################        
      2  DANAIAF             FIXED (10),    ###################################        
      2  NOIDFND             CHAR  (03),    #################################        
      2  NOIDMAT             CHAR  (11),    #####################################        
      2  NONATAF             FIXED (11),    ##############################        
      2  LTABRFP             CHAR  (30),    ##############################        
                                            /*  OU CAISSE ET TRANSIT*/        
                                            /* VOIR SPACODEF        */        
                                            /* OU GROUPE+MEDECIN    */        
                                            /* OU RENTE T1          */        
      2  CDEGCOU             CHAR  (01),    ########################################        
      2  TBEGCOD_AFF         BIT   (40),    ########################################        
      2  CDNATPA_RT          CHAR  (02),    ########################################        
                                            /* D5: NUMERO DU PROPRIET.*/        
      2  DAIMPPA_RT          FIXED (5),     #########################################        
      2  CDAPPPR             CHAR  (02),    #######################################        
      2  CDCATTR             CHAR (01),     ###############################        
      2  CDRFPRT             CHAR (03),     #########################################        
      2  NOAVECO             PIC'(3)9',     #########################################        
      2  NOIDFAM             FIXED (7),     ####################################        
                                            /* NO INTERVENANT PRODUCT.*/        
      2  CDTRASW             CHAR  (01),    #######################################        
      2  TBCDCLI             CHAR  (09),    #######################################        
      2  CDALCLI             CHAR  (01),    #######################################        
      2  CDLGFAM             CHAR  (01),    #######################################        
      2  CDLGRUE             CHAR  (01),    #######################################        
      2  NOIDREM             PIC '99',      ################################        
      2  NBSINPO             FIXED BIN(15), #################################        
      2  CDEVTRA             CHAR (01),     ####################################        
      2  NOAF1EX             FIXED(07),     #####################################        
      2  SW_MEMOSIN          CHAR (1),      ######################################        
      2  NOAF2EX             BIN FIXED (15),################################        
      2  ANSINPO             PIC '99',      #######################################        
      2  CDTYFND             CHAR  (01),    ####################################        
                                            /* EN SINISTRE, = A SI*/        
                                            /* PAIEMENT TYPE 89 */        
      2  DADESIN_C           CHAR  (04),    ####################################        
      2  NOIDCRT_SC          FIXED (7),     #####################################        
      2  NOIDSIN_RL          FIXED (9),     #######################################        
      2  CDTYPOL_RL          CHAR  (02),    ######################################        
      2  TBEGGES (8)         BIT   (01),    ######################################        
                                            /* 1=SUIVI GESTIONNAIRE */        
                                            /* 2=SUPER GESTIONNAIRE */        
                                            /* 3=COMMANDE DE MAJ    */        
                                            /* 4=CDE NON PROTEGEE   */        
                                            /* 5= ON=KERNEL CONVERTI*/        
                                            /* 6= ON=NOUVEAU CANEVAS*/        
                                            /* 7=DEVISE OUTPUT T.T. */        
                                            /* 8=CLAUSIER TYPE "U"  */        
      2  NORTMEM             CHAR  (02),    ############################        
      2  CDDVTRN             CHAR  (01),    ######################################        
      2  CDPGTRN             CHAR  (01),    ######################################        
      2  CDDVPOL             CHAR  (01),    ######################################        
      2  CDMODTT             CHAR  (01),    ######################################        
      2  NOTYPDC             PIC '99',      ########################################        
         
     /*  PARTIE VARIABLE : A L'USAGE D'UNE TRANSACTION APPELANTE */        
         
 /* ---- SPA COMPLEMENTAIRE LONGUEUR 200 --------------------------- */        
      2  MEMOCMD,                           ##############################################################        
       3 CDNATOP             CHAR(01),      #########################################        
       3 CDTYPOP             CHAR(01),      #########################################        
       3 CDOBJOP             CHAR(03),      #########################################        
      2  LTOBJOP             CHAR(75),      #########################################        
      2  NOSQMEM             BIN FIXED(15), ####################################        
      2  CDTTAPP             CHAR(2),       ##########################################        
      2  CDAPPEL             CHAR(1),       ##########################################        
      2  CDMMSEL             CHAR(3),       ##########################################        
      2  LTINTKN             CHAR(20),      #########################################        
                                            /* VOIR SPAAREAK         */        
      2  CDLASTK             CHAR(1),       ##########################################        
      2  NOIDRSQ             FIXED(05),     ########################################        
      2  NOLTGEN             CHAR(13),      #########################################        
      2  RSVSPAC             CHAR(75),      #########################################        
 /* ---------------------------------------------------------------- */        
  2 NONE    CHAR(0);        
 JSM207.INPUT.SPA_PTR = ADDR(SPA_XSM806);        
         
 /* -- MID D'INTERFACE: MEMORISATION DE L'ADDRESSE DANS MID_PTR - */        
 DCL 1    MID_XSM806,        
      2   LL                  BIN FIXED(15),        
      2   Z1                  CHAR(1),        
      2   Z2                  BIT(8),        
      2   MID_DET             CHAR(1920);        
         
 DCL 1   MID1_XSM806          BASED(ADDR(MID_XSM806.MID_DET)),        
 /*---------------------------------------------------------*/        
 /*   MID1   UTILISE : PSM215 ET INTERNET      XSM806       */        
 /*---------------------------------------------------------*/        
 /* DCL 1    MID1                                           */        
 /*---------------------------------------------------------*/        
      2  CLE              CHAR (01),        
      2  CURSEUR,        
       3 LIGNE            PIC '99',        
       3 COLONNE          PIC '99',        
      2  CDOPTRN          CHAR (05),        
      2  LTNMCON          CHAR (30),        
      2  LTPRCON          CHAR (20),        
      2  DANAIC1          CHAR (02),        
      2  DANAIC2          CHAR (02),        
      2  DANAIC3          CHAR (04),        
      2  FILLER           CHAR (1852);        
 JSM207.INPUT.MID_PTR = ADDR(MID_XSM806);        
 /*------------------------------------ FIN INCLUDE JSM207SX --*/        
 /*-------------------------------------------------------------------*/        
 /*  INTERFACE POUR XSM806   CONTROLE DE RISQUE  (PSM215 ET INTERNET) */        
 /*-------------------------------------------------------------------*/        
 /* POUR APPEL EN ROUTINE:                                            */        
 /*   INCLUDE DE JSM207SX DANS LE PGM APPELANT                        */        
 /*   INIT A FAIRE                                                    */        
 /*     - TOUS LES PTR DB,                                            */        
 /*     - INPUT.MID_PTR    =>   INITIALISE DANS COPY  JSM207SX        */        
 /*             SPA_PTR    =>   INITIALISE DANS COPY  JSM207SX        */        
 /*             PAGE9_PTR  = ADDR(PAGE9)  (SI NECESSAIRE, SINON NULL),*/        
 /*             SW_INT     = '1'B.                                    */        
 /*                                                                   */        
 /*                                                                   */        
 /* RETOUR:                                                           */        
 /*   - EN CAS D'ERRORDB => CDRTPGM = 'ERR_DB'                        */        
 /*                                                                   */        
 /*                                                                   */        
 /* 13/09/2004 TDMTHO AJOUT DB DS129                                  */        
 /*                                                                   */        
 /*-------------------------------------------------------------------*/        
 DCL 1    JSM207,        
 /*------------------------- I N P U T -------------------------------*/        
      2   PTRPCB,                         ###############################################################        
       3  IOPCB            PTR,           #################################################        
       3  ALTPCB           PTR,           #################################################        
       3  PRTPCB           PTR,           #################################################        
       3  DEU02PCB         PTR,           #################################################        
       3  DEU02$PCB        PTR,           #################################################        
       3  DEU02DPCB        PTR,           #################################################        
       3  TABPCB           PTR,           #################################################        
       3  DSM19PCB         PTR,           #################################################        
       3  DSM40PCB         PTR,           #################################################        
       3  DSM55PCB         PTR,           #################################################        
       3  TABSPCB          PTR,           #################################################        
       3  DS101SPCB        PTR,           #################################################        
       3  DS101S2PCB       PTR,           #################################################        
       3  DS101S3PCB       PTR,           #################################################        
       3  DS106SPCB        PTR,           #################################################        
       3  DS108SPCB        PTR,           #################################################        
       3  DS124SPCB        PTR,           #################################################        
       3  DS125SPCB        PTR,           #################################################        
       3  DS137SPCB        PTR,           #################################################        
       3  DCO15SPCB        PTR,           #################################################        
       3  DCO26SPCB        PTR,           #################################################        
       3  DSM22SPCB        PTR,           #################################################        
       3  TABMPCB          PTR,           #################################################        
       3  DS101MPCB        PTR,           #################################################        
       3  DS101M2PCB       PTR,           #################################################        
       3  DS101M3PCB       PTR,           #################################################        
       3  DS106MPCB        PTR,           #################################################        
       3  DS108MPCB        PTR,           #################################################        
       3  DS124MPCB        PTR,           #################################################        
       3  DS125MPCB        PTR,           #################################################        
       3  DS137MPCB        PTR,           #################################################        
       3  DCO15MPCB        PTR,           #################################################        
       3  DCO26MPCB        PTR,           #################################################        
       3  DSM22MPCB        PTR,           #################################################        
       3  DDO01PCB         PTR,           #################################################        
       3  DDO02PCB         PTR,           #################################################        
       3  DDO03PCB         PTR,           #################################################        
       3  DS129PCB         PTR,           #################################################        
      2   INPUT,        
       3  MID_PTR           PTR,        
       3  SPA_PTR           PTR,        
       3  PAGE9_PTR         PTR,        
       3  SW_INT            BIT(1),       #############################################        
 /*------------------------ O U T P U T ------------------------------*/        
      2   RETURN_CODE,                    ##########################################################        
       3  CDRTPGM          CHAR (10),     ###########################################        
                                          /*   = ERR_DB SI ERRORDB    */        
       3  DBPTR            PTR,           #################################################        
       3  LASTDLI          CHAR (10),     ###########################################        
       3  ERREUR           BIT(1),        ##############################################        
      2   OUTPUT,        
       3  PAGE1_PSM215 LIKE PGTMP_PSM215;        
         
 DCL 1 PGTMP_PSM215,        
 /*---------------------------------------------------------*/        
 /*   PAGE 1 TRANSACTION : PSM215 ET INTERNET      XSM806   */        
 /*---------------------------------------------------------*/        
 /* DCL 1   PAGE1       STATIC,                             */        
 /*---------------------------------------------------------*/        
      2  LL               BIN FIXED (15),        
      2  ZZ               BIN FIXED (15)      ##################,        
      2  LPG              CHAR (02),        
      2  SCA              CHAR (02),        
      2  LTSCTRN_A        CHAR (08),        
      2  LTSCTRN          CHAR (04),        
      2  TBCDCLI          CHAR (09),        
      2  CDALCLI          CHAR (01),        
      2  LTOPTRN          CHAR (30),        
      2  CDOPTRN_A        CHAR (02),        
      2  CDOPTRN          CHAR (05),        
      2  LTOPTR2          CHAR (30),        
      2  NOIDAFF          CHAR (10),        
      2  LTNMAFF          CHAR (30),        
      2  LTPRAFF          CHAR (20),        
      2  CDRSAFF          CHAR (03),        
      2  LTRUEAF          CHAR (25),        
      2  NOHA1AF          CHAR (04),        
      2  NOHA2AF          CHAR (04),        
      2  CDCPOAF          CHAR (06),        
      2  LTLOCAF          CHAR (25),        
      2  CDPAYAF          CHAR (03),        
      2  LTPAYAF          CHAR (13),        
      2  CDLGEAF          CHAR (01),        
      2  CDSEXAF          CHAR (01),        
      2  DANAIAF          CHAR (10),        
      2  LTNMCON_A        CHAR (02),        
      2  LTNMCON          CHAR (30),        
      2  LTPRCON_A        CHAR (02),        
      2  LTPRCON          CHAR (20),        
      2  DANAIC1_A        CHAR (02),        
      2  DANAIC1          CHAR (02),        
      2  DANAIC2_A        CHAR (02),        
      2  DANAIC2          CHAR (02),        
      2  DANAIC3_A        CHAR (02),        
      2  DANAIC3          CHAR (04),        
      2  LTMETRN          CHAR (79) ;        
 DCL XSM806 ENTRY;            #####################################################        
         
 DCL XSM532  ENTRY;           ####################################################        
 /*********************************************************************/        
 /*                                                                   */        
 /*   INTERFACE POUR MAJ DB STAT. VIA TWFI XSM532                     */        
 /*   ===========================================                     */        
 /*                                                                   */        
 /*********************************************************************/        
         
 DCL 1    JSM131,        
 /*------------------------- I N P U T -------------------------------*/        
      2   PTRPCB,                         ###############################################################        
       3  ALTPCB           PTR,           #################################################        
      2   PARAM,                          ################################################################        
       3  CDSCTRN          CHAR  (1),     ###########################################        
       3  CDEVTRN          CHAR  (1),     ###########################################        
       3  NBTYSTA          PIC '9',       #############################################        
       3  TBTYSTA (18),                   #########################################################        
        4 CDTYSTA          CHAR  (5),     ###########################################        
        4 DAOPGES          FIXED DEC (7), #######################################        
        4 LTIDCLE          CHAR  (56),    ##########################################        
        4 NOIDCPT          FIXED BIN (15),######################################        
        4 MTVAINC          FIXED BIN (31),######################################        
         
 /*------------------------ O U T P U T ------------------------------*/        
      2   RETURN_CODE,                    ##########################################################        
       3  CDRTPGM          CHAR (6),      ############################################        
       3  DBPTR            PTR,           #################################################        
       3  LASTDLI          CHAR (10);     ###########################################        
 /*********************************************************************/        
         
 DCL XSM702  ENTRY;           ####################################################        
 /*********************************************************************/        
 /* INTERFACE POUR ROUTINE XSM702 IMPRESSION DE N'IMPORTE QUEL DEVIS  */        
 /*-------------------------------------------------------------------*/        
 /* TDMXXX    DATE    ! COMMENTAIRE                                   */        
 /* ------ ---------- ! --------------------------------------------- */        
 /* TDMTHO 04/02/2005 : AJOUT DEFINITION DE CODE POUR CDAPPEL (W ET S)*/        
 /* TDM... ../../.... :                                               */        
 /*********************************************************************/        
 DCL 1     JSM186,        
 /*-------------------- E N T R E E ----------------------------------*/        
       2   PTRPCB,                     ##############################################################        
        3  DBPCB(10)     PTR ,         ##################################################        
                                       /* 1=DSM88                     */        
                                       /* 2=DC105                     */        
                                       /* 3=DS101                     */        
                                       /* 4=DS102                     */        
                                       /* 10=UTILISe PAR IB/PK        */        
        3  WLTNMSCR_PTR  PTR ,         ##################################################        
        3  WLTNMSCR2_PTR PTR ,         ##################################################        
       2   ENTREE,                     ##############################################################        
        3  CDAPPEL       CHAR(01),     ##############################################        
                                       /* T=TRANSACTION               */        
                                       /* R=RELANCE                   */        
                                       /* W=DEVIS INTERNET PAR MAIL   */        
                                       /* S=SOUSCRIPTION INTERNET     */        
        3  CDTYLET(10)   CHAR(01),     ##############################################        
                                       /* 1=LETTRE ACCOMPAGNEMENT     */        
                                       /* 2=LETTRE DEVIS(REMISE PRIX) */        
                                       /* 3=LETTRE RENON 1            */        
                                       /* 4=LETTRE RENON 2            */        
                                       /* 5=LETTRE PROPOSITON         */        
        3 KEYDEVIS,                    #############################################################        
         4 CDTYKEY       CHAR(1),      ###############################################        
         4 NOIDKEY       DEC FIXED(9), ##########################################        
         4 NOSQDEV       DEC FIXED(7), ##########################################        
         4 NOSQTXT       DEC FIXED(3), ##########################################        
        3  CDLGTRN       PIC'9',       ################################################        
        3  TBTYPAF       BIT(240),     ##############################################        
 /*-------------------- S O R T I E ----------------------------------*/        
       2   SORTIES,                    #############################################################        
         3 NOIDAFF       DEC FIXED(7), ##########################################        
         3 CDCMGES       CHAR(08),     ##############################################        
       2   RETOURS,        
        3  CDRTPGM       CHAR (6),     ##############################################        
        3  DBPTR         PTR,          ###################################################        
        3  LASTDLI       CHAR (10);    #############################################        
         
 DCL 01    JSM186_IB,        
       02  DIB11FPCB     PTR,          ##################################################        
       02  DIB11NPCB     PTR,          ##################################################        
       02  DIB11APCB     PTR,          ##################################################        
       02  TYAFFPO       CHAR(03),     ##############################################        
       02  TYPOLAV       CHAR(03),     ##############################################        
       02  LTOBJOP       CHAR(75),     ##############################################        
       02  FILLER        CHAR(50);        
         
 DCL XSM664     ENTRY;        #########################################        
 /*********************************************************************        
 *     INTERFACE ROUTINE XSM664 = PSM300 BATCH                        *        
 *********************************************************************/        
         
 DCL PRBATCH FILE RECORD OUTPUT;        
         
 DCL 1  JSM171 ##############,        
       2   PTRPCB,                     #########################################        
         3 IOPCB         PTR,        
         3 ALTRPCB       PTR,        
         3 TABPCB        PTR,        
         3 CLAUSPCB      PTR,        
         3 DSM60PCB      PTR,        
         3 DA106PCB      PTR,        
         3 DSM19PCB      PTR,        
         3 DSM01PCB      PTR,        
         3 DSM06PCB      PTR,        
         3 DS101PCB      PTR,        
         3 DS102PCB      PTR,        
         3 DS103PCB      PTR,        
         3 DA105PCB      PTR,        
         3 DBAT01PCB     PTR,        
         3 DBAT03PCB     PTR,        
         3 DBAT06PCB     PTR,        
         3 DAC02PCB      PTR,        
         3 DAC03PCB      PTR,        
         3 DIE01PCB      PTR,        
         3 DBAT02PCB     PTR,        
         3 DMS02PCB      PTR,        
         3 DSA03PCB      PTR,        
         3 DMS05PCB      PTR,        
         3 DS113PCB      PTR,        
         3 DMS03PCB      PTR,        
         3 DSM22PCB      PTR,        
         3 DMD01PCB      PTR,        
         3 DMD02PCB      PTR,        
         3 DCO01PCB      PTR,        
         3 DSM20PCB      PTR,        
         3 DSM09PCB      PTR,        
         3 DA201PCB      PTR,        
         3 DD201PCB      PTR,        
         3 DD106PCB      PTR,        
         3 DD105PCB      PTR,        
         3 DS124PCB      PTR,        
         3 DSM61PCB      PTR,        
         3 DI105PCB      PTR,        
         3 DI106PCB      PTR,        
         3 DT105PCB      PTR,        
         3 DT106PCB      PTR,        
         3 DT201PCB      PTR,        
         3 DT202PCB      PTR,        
         3 DCR03PCB      PTR,        
         3 DCR04PCB      PTR,        
         3 DSA01PCB      PTR,        
         3 DSM62PCB      PTR,        
         3 DSM63PCB      PTR,        
         3 DSM64PCB      PTR,        
         3 DSM65PCB      PTR,        
         3 DSM66PCB      PTR,        
         3 DSM67PCB      PTR,        
         3 DSM68PCB      PTR,        
         3 DSM69PCB      PTR,        
         3 DMS01PCB      PTR,        
         3 DS137PCB      PTR,        
         3 DSM43PCB      PTR,        
         3 DA202PCB      PTR,        
         3 DA203PCB      PTR,        
         3 DS119PCB      PTR,        
         3 DSM93PCB      PTR,        
         3 DIB01PCB      PTR,        
         3 DIB02PCB      PTR,        
         3 DIB03PCB      PTR,        
         3 DIB11PCB      PTR,        
         3 DT505PCB      PTR,        
         3 DSMB1PCB      PTR,        
         3 DSMB2PCB      PTR,        
         3 TABGPCB       PTR,        
         3 DA105GPCB     PTR,        
         3 DS101GPCB     PTR,        
         3 DSM22GPCB     PTR,        
         3 DSMA1PCB      PTR,        
         3 DSMB0PCB      PTR,        
         3 DSMB9PCB      PTR,        
         3 DIB05PCB      PTR,        
         3 DD501PCB      PTR,        
         3 DS134PCB      PTR,        
         3 RESERVE(122)  PTR,        
       2 NOIDAFF           FIXED(7),        
       2 NOIDPOL           FIXED(8),        
       2 NOIDSIN           FIXED(9),        
       2 CDCMGES           CHAR(8),        
       2 CDOPTRN           CHAR(5),        
       2 MEMOCMD,        
        3 CDNATOP             CHAR(1),       #######################################        
        3 CDTYPOP             CHAR(1),       ###################################        
        3 CDOBJOP             CHAR(3),       ###################################        
       2 NOSQMEM           FIXED BIN(15),    ##################################        
       2 WLTNMSCR          CHAR(2000),        
       2 WLTNMSCR2         CHAR(10000),        
       2 NBLIGNE           FIXED(5),        
       2 CDSCTRN           CHAR(01),    ################################        
       2 NORFPRT           CHAR(08),    ################################        
       2 CDRTPGM           CHAR(02),    ################################        
       2 CDTTAPP           CHAR(02),    ################################        
       2 LASTDLI           CHAR(08),        
       2 NBVAR             FIXED(5),        
       2 LTOBJOP           CHAR(75),        
       2 LTSCTRN           CHAR(04),    ################################        
       2 CDSIGNA           CHAR(01),    ##########################################        
       2 CDSIGSV           CHAR(04),    ##########################################        
       2 NOIDCLI           CHAR(08),        
       2 LTINTKN           CHAR(20),    ##########################################        
       2 CDIMPDV           CHAR(01),    ##########################################        
       2 RESERVE           CHAR(46);    ##########################################        
 DCL CDOBJOP_R1   FIXED BIN(15) DEF JSM171.CDOBJOP;        
 DCL PTRPCB_TAB(200) PTR BASED(ADDR(JSM171.PTRPCB));        
         
 DCL XS1B53  ENTRY;           #####################################        
 DCL 1    JS1B53,        
 /*-------------------------- DATABASE -------------------------------*/        
      2   DB,        
       3  IOPCB               PTR,        
       3  ALTPCB              PTR,        
       3  PRTPCB              PTR,        
       3  SPA_PTR             PTR,        
       3  DEU02PCB            PTR,        
       3  DS101PCB            PTR,        
       3  DSM55PCB            PTR,        
       3  DS133PCB            PTR,        
       3  DS139PCB            PTR,        
       3  TABPCB              PTR,        
       3  DSM18PCB            PTR,        
       3  DS102PCB            PTR,        
       3  DS137PCB            PTR,        
       3  DSM40PCB            PTR,        
       3  DSM22PCB            PTR,        
 /*-------------------------- I N P U T ------------------------------*/        
      2   INPUT,        
       3  NOIDAFF             FIXED (7),        
       3  CDCHOIX             CHAR(01),        
       3  DAECHJJ             CHAR(02),        
       3  DAECHMM             CHAR(02),        
       3  CDLGEAF             CHAR (1),        
       3  CDLGTRN             PIC '9',        
       3  CDCMGES             CHAR (08),        
       3  CDSCTRN             CHAR (01),        
       3  CDEVTRN             CHAR (01),        
       3  TBCDCLI             CHAR (09),        
       3  CDALCLI             CHAR (01),        
       3  LTOBJOP,        
        4  NOSQINT            CHAR (05), #######################################        
        4  NOSQSUJ            CHAR (05), #######################################        
        4  CDCNTVC            CHAR (03), #######################################        
        4  CDCAC              CHAR (15), #######################################        
        4  CDOPER             CHAR (03), #######################################        
        4  CDPRODU            CHAR (07), #######################################        
        4  CDTYPPR            CHAR (03), #######################################        
        4  CDLETTR            CHAR (03), #######################################        
        4  CDCANAL            CHAR (09), #######################################        
        4  CDTTAPP            CHAR (02), #######################################        
        4  NOSEQRB            CHAR (03), #######################################        
        4  CDSGGES            CHAR (01), #######################################        
        4  CDCOUGE            CHAR (04), #######################################        
        4  CDDEVIS            CHAR (11), #######################################        
                                         /* NO PROD DEVIS BO INTRANET*/        
        4  CDRSCTL            CHAR (01); #######################################        
                                         /*TP IMPRES.VENANT FIRST L/C*/        
         
 FETCH XS1B53;        
         
 DCL XA2N53  ENTRY OPTIONS(FETCHABLE); #################################        
 /*********************************************************************/        
 /*                                                                   */        
 /* INTERFACE ROUTINE XA2N53                                          */        
 /*                                                                   */        
 /*********************************************************************/        
 DCL 1     JA2N53,        
 /*-------------------- E N T R E E ----------------------------------*/        
       2   ALTPCB       PTR,           ####################################################        
       2   DS146        PTR,           ####################################################        
       2   DSM80        PTR,           ####################################################        
       2   DSM07        PTR,           ####################################################        
       2   DSMB9        PTR,           ####################################################        
       2   DATAPTR,                    #############################################################        
         3 SEGMENT(50)  PTR,           ####################################################        
       2   NOIDAFF      DEC FIXED(7),  ###########################################        
       2   CDCMGES      CHAR(08),      ###############################################        
       2   CDSCTRN      CHAR(01),      ###############################################        
       2   NOIDPOL      CHAR(12),      ###############################################        
       2   CDRSCTL      CHAR(01),      ###############################################        
       2   CDLTACC      CHAR(01),      ###############################################        
       2   CDLTPRI      CHAR(01),      ###############################################        
       2   CDLTPRO      CHAR(01),      ###############################################        
       2   CDLTREN      CHAR(01),      ###############################################        
       2   LTOBJOP_W,        
         3 NOSQINT      CHAR(05),      ############################################        
         3 NOSQSUJ      CHAR(05),      ############################################        
         3 CDCNTVC      CHAR(03),      ############################################        
         3 CDCAC        CHAR(15),      ############################################        
         3 CDOPER       CHAR(03),      ############################################        
         3 CDPRODU      CHAR(07),      ############################################        
         3 CDTYPPR      CHAR(03),      ############################################        
         3 CDLETTR      CHAR(03),      ############################################        
         3 CDCANAL      CHAR(09),      ############################################        
         3 CDTTAPP      CHAR(02),      ############################################        
         3 NOSEQRB      CHAR(03),      ############################################        
         3 CDSGGES      CHAR(01),      ############################################        
         3 CDCOUGE      CHAR(04),      ############################################        
         3 CDDEVIS      CHAR(11),      ############################################        
                                       /* NO PROD DEVIS BO INTRANET*/        
         3 CDRSCTL      CHAR(01),      ############################################        
                                       /* TP IMPRES. VENANT FIRST L/C */        
       2   EMAILID,        
        3  EMAILTO  CHAR(50),      ###################################################        
        3  EMAILCC  CHAR(50),      ###################################################        
        3  EMAILFL  CHAR(50),      ###################################################        
        3  EMAILSB  CHAR(50),      ###################################################        
       2   CDPRNET  CHAR(08),      ###################################################        
       2   CDTYIMP  CHAR(01),      ###################################################        
       2   LTPLQVH  CHAR(12),      ###################################################        
       2   CDCHPAI  CHAR(01),      ###################################################        
       2   CDFONCT  CHAR(01),      ###################################################        
                                   /* 1 = FONCTIONNAIRE PROSPECT      */        
                                   /* 2 = FONCTIONNAIRE CONTRAT ACTIF */        
                                   /*' '= PAS FONCTIONNAIRE           */        
 /*-------------------- S O R T I E ----------------------------------*/        
       2   RETOURS,        
         3 CDRTPGM       CHAR(6),      ###############################################        
         3 NOIDDOC       FIXED DEC(7), ##########################################        
         3 DBPTR         PTR,          ###################################################        
         3 LASTDLI       CHAR (08);    #############################################        
         
 /*********************************************************************/        
 /* INTERFACE ROUTINE D'INITIALISATION TS1008                         */        
 /*********************************************************************/        
         
 DCL 1 JS1D40,        
       2 PTRPCB,        
         3 ALTPCB          PTR,        
         
 /******************  I N P U T ***************************************/        
      2  INPUT,        
         3 NOIDAFF  DEC FIXED(7), ###############################################        
         3 CDKERNL  CHAR(02),     ###################################################        
         
 /****************** O U T P U T **************************************/        
      2  OUTPUT,        
         3 FILLER   CHAR(20);        
 /*********************************************************************/        
 DCL XS1D40  ENTRY;  ########################################################        
         
 /* ROUTINE DE GENERATION DU BONUS-MALUS */        
 /* ------------------------------------ */        
 /*********************************************************************/        
 /* INTERFACE : XA2N63J                                               */        
 /*                                                                   */        
 /*                                                                   */        
 /*                                                                   */        
 /*********************************************************************/        
         
 DCL 1 XA2N63J,        
      2 PTRPCB       CHAR (256),    ################################################        
      2 INPUT        CHAR (1000),   ###############################################        
      2 OUTPUT       CHAR (1000);   ###############################################        
         
 /*********************************************************************/        
 /*             REDEFINITION DES POINTEURS                            */        
 /*********************************************************************/        
         
 DCL 1 XA2N63J_P      BASED(ADDR(XA2N63J.PTRPCB)),        
      2 DEU02PCB      PTR,               ######################################################        
      2 DBTABPCB      PTR,               ######################################################        
      2 DA201PCB      PTR,               ######################################################        
      2 DA203PCB      PTR;               ######################################################        
         
 /*********************************************************************/        
 /*             REDEFINITIONS PAR CLASSE DE METHODES                  */        
 /*********************************************************************/        
 /* METHODE : CONSULT_DAEFF_PROMO                                     */        
 /*********************************************************************/        
         
 /* -------------------- INPUT -------------------------------------- */        
 DCL 1 XA2N63J_I01                    BASED(ADDR(XA2N63J.INPUT)),        
      2 CDTABBM       CHAR(01),          #################################################        
      2 NBANCON       PIC'99',           #################################################        
      2 NBSIN5A       PIC'99',           ##################################################        
      2 CDASANT       CHAR(02);          #################################################        
         
 /* -------------------- OUTPUT ------------------------------------- */        
 DCL 1 XA2N63J_O01                    BASED(ADDR(XA2N63J.OUTPUT)),        
      2 CDBMDET       PIC'99';           ##################################################        
         
 /*********************************************************************/        
 /*                                                                   */        
 /* LISTE DES METHODES UTILISEES :                                    */        
 /*                                                                   */        
 /*            DET_BONUS_MALUS        
 /*                                                                   */        
 /*********************************************************************/        
 /*                                                                   */        
 /*    001 : XXXXXXXXXXXXXXXXXXXXXXX                                  */        
 /*    002 : XXXXXXXXXXXXXXXXXXXXXXX                                  */        
 /*    003 : XXXXXXXXXXXXXXXXXXXXXXX                                  */        
 /*    004 : XXXXXXXXXXXXXXXXXXXXXXX                                  */        
 /*    005 : XXXXXXXXXXXXXXXXXXXXXXX                                  */        
 /*                                                                   */        
 /*********************************************************************/        
         
 DCL XA2N63  ENTRY;        
         
 KA2151J_P.DEU02PCB  = GA2016J.DEU02PCB;        
 KA2151J_P.DA215PCB  = GA2016J.DA215PCB;        
 KA2151J_P.DA215$PCB = GA2016J.DA215$PCB;        
 KA2151J_P.DA2152PCB = GA2016J.DA2152PCB;        
 KA2151J_P.DA216PCB  = GA2016J.DA216PCB;        
         
 KS1005J.PTRPCB.DEU02PCB = GA2016J.DEU02PCB;    ##################################        
 KS1005J.PTRPCB.DS101PCB = GA2016J.DS101PCB;    ##################################        
 KS1005J.PTRPCB.DS102PCB = GA2016J.DS102$PCB;   #################################        
 KS1005J.PTRPCB.DS128PCB = GA2016J.DS128PCB;    ##################################        
 KS1005J.PTRPCB.DS132PCB = GA2016J.DS132PCB;    ##################################        
 KS1005J.PTRPCB.DS134PCB = GA2016J.DS134PCB;    ##################################        
 KS1005J.PTRPCB.DS137PCB = GA2016J.DS137PCB;    ##################################        
         
 KS1010J.DEU02PCB = GA2016J.DEU02PCB ;        
 KS1010J.DC105PCB = GA2016J.DC105PCB ; #####################        
 KS1010J.DS101PCB = GA2016J.DS101PCB ;        
 KS1010J.DS101$PCB = NULL();        
 KS1010J.DS102PCB = NULL();        
 KS1010J.DS104PCB = NULL();        
 KS1010J.DS104$PCB = NULL();        
 KS1010J.DS105PCB = NULL();        
 KS1010J.DS105$PCB = NULL();        
 KS1010J.DS106PCB = NULL();        
 KS1010J.DS106BPCB = NULL();        
 KS1010J.DS108PCB = NULL();        
 KS1010J.DS108$PCB = NULL();        
 KS1010J.DS125PCB = NULL();        
 KS1010J.DS125$PCB = NULL();        
 KS1010J.DS128PCB = NULL();        
 KS1010J.DS132PCB = NULL();        
 KS1010J.DS134PCB = NULL();        
 KS1010J.DS137PCB = GA2016J.DS137PCB ;        
 KS1010J.DSM22PCB = NULL();        
         
 /* NRB - TDMOHL - GENERATION LE 05/06/2008 - 12:55        LGTH=00274 */        
 /*****************************************************/        
 /*  TABLE MAIN :                                     */        
 /*****************************************************/        
         
 DCL  1 TBSM_MAIN ,                         #############################################################        
                                            /*TB!  !DSM25   !C1TAB    */        
                                            /*TB!  !DDO03   !C1TAB    */        
                                            /*TB!  !DIB15   !C1TAB    */        
                                            /*TB!  !DCR01   !CRTABLE  */        
                                            /*TB!  !DLG01   !TABLE    */        
                                            /*TB!  !DGZ02   !GZTABLE  */        
                                            /*TB!  !DNC02   !NCTABLE  */        
 /*K*/ 2 TBTXCOD  CHAR(4),                  /*CD!  !CODE TABLE        */        
 /*K*/ 2 TBTXA01  CHAR(20),                 /*CD!  !ARGUMENT          */        
       2 TBTXL01  CHAR(250);                ####################################################        
         
         
    DCL 1 SSA_C1TAB,        
         2 FIL1         CHAR (8)       INIT ('C1TAB  '),        
         2 FIL2         CHAR (1)       INIT ('*'),        
         2 CC           CHAR (3)       INIT ('---'),        
         2 PAR          CHAR (1)       INIT ('('),        
         2 FIL3         CHAR (8)       INIT ('KC1TAB  '),        
         2 OPER         CHAR (2)       INIT ('= '),        
         2 VALUE        CHAR (24),        
         2 FIL4         CHAR (1)       INIT (')');        
         
   /* DC105 */        
 /* NRB - TDMNAP - GENERATION LE 16/05/2007 - 18:25        LGTH=00270 */        
 /*****************************************************/        
 /*  STABLE MAIN :                                    */        
 /*****************************************************/        
         
 DCL  1 STBSM_MAIN ,                        ############################################################        
                                            /*TB!  !DSM25   !C1STAB   */        
                                            /*TB!  !DDO03   !C1STAB   */        
                                            /*TB!  !DIB15   !C1STAB   */        
                                            /*TB!  !DCR01   !CRSTABL  */        
                                            /*TB!  !DPH01   !PHSTABL  */        
                                            /*TB!  !DLG01   !STABLE   */        
                                            /*TB!  !DGZ02   !GZSTABL  */        
                                            /*TB!  !DNC02   !NCSTABL  */        
 /*K*/ 2 TBTXA02  CHAR(20),                 /*CD!  !SOUS-ARGUMENT     */        
       2 TBTXL02  CHAR(200),                ####################################################        
       2 $FILLER$ CHAR(050);                ####################################################        
         
    DCL 1 SSA_C1STAB,        
         2 FIL1         CHAR (8)       INIT ('C1STAB '),        
         2 FIL2         CHAR (1)       INIT ('*'),        
         2 CC           CHAR (3)       INIT ('---'),        
         2 PAR          CHAR (1)       INIT ('('),        
         2 FIL3         CHAR (8)       INIT ('KC1STAB '),        
         2 OPER         CHAR (2)       INIT ('= '),        
         2 VALUE        CHAR (20),        
         2 FIL4         CHAR (1)       INIT (')');        
 /* NRB - TDMKIP - GENERATION LE 14/06/2010 - 14:27        LGTH=00070 */        
 /*******************************************        
 *  DB DES COMPOSTEURS INTERNET ( DEVIS A2 )*        
 ********************************************/        
 DCL  1 XICOMA2 ,                     ###############################################################        
 /*K*/ 2 CDTYPCO  CHAR(1),            /*CD!  !CODE TYPE DE COMPOSTEUR */        
 /*K*/ 2 CDTYPOL  CHAR(2),            /*CD!  !CODE TYPE DE POLICE     */        
 /*K*/ 2 CDCOMPO  CHAR(12),           /*CD!  !CLE DU COMPOSTEUR       */        
       2 DADVCOU  PIC'(6)9',          ####################################################        
       2 NODVCOU  PIC'(4)9',          ####################################################        
       2 NODVSUP  PIC'(4)9',          ####################################################        
       2 RESERVE  CHAR(41);           #####################################################        
         
    DCL 1 SSA_XICOMA2,        
         2 FIL1         CHAR (8)       INIT ('XICOMPO'),        
         2 FIL2         CHAR (1)       INIT ('*'),        
         2 CC           CHAR (3)       INIT ('---'),        
         2 PAR          CHAR (1)       INIT ('('),        
         2 FIL3         CHAR (8)       INIT ('KXICOMPO'),        
         2 OPER         CHAR (2)       INIT ('= '),        
         2 VALUE        CHAR (15),        
         2 FIL4         CHAR (1)       INIT (')');        
   /* acc}s composteur devis */        
 /* NRB - TDMJOB - GENERATION LE 21/01/2009 - 09:45        LGTH=00274 */        
         
         /*-----------------------------------------------------------*/        
         /*--TABLE DE DEFINITION DES IMPRIMANTES LOCALES              */        
         /*-----------------------------------------------------------*/        
 DCL  1 TBTT_PRTT ,                  #############################################################        
                                     /*TB!  !DRH01   !RHTABLE         */        
                                     /*TB!  !DCT01   !CTTABLE         */        
                                     /*TB!  !DC201   !C2TABLE         */        
                                     /*TB!  !DC301   !C3TABLE         */        
                                     /*TB!  !DSM25   !C1TAB           */        
                                     /*TB!  !DCR01   !CRTABLE         */        
                                     /*TB!  !DDO03   !C1TAB           */        
                                     /*TB!  !DCI02   !CITAB           */        
                                     /*TB!  !AEDBTAB1!TABLE           */        
                                     /*TB!  !DLG01   !TABLE           */        
                                     /*TB!  !DLP03   !TABLE           */        
                                     /*TB!  !DND01   !NDTAB           */        
                                     /*TB!  !DP101   !P1TABLE         */        
 /*K*/ 2 TBTXCOD  CHAR(4),           /*CD!  !CODE TABLE               */        
 /*K*/ 2 TBTXA01  CHAR(20),          /*CD!  !ARGUMENT                 */        
       2 CDTYPRT  CHAR(1),           ######################################################        
       2 LTLOCPR  CHAR(30),          #####################################################        
       2 CDTYAPP(10)  CHAR(2),       ##################################################        
       2 FILLER2  CHAR(64),          #####################################################        
       2 CDALIPF  CHAR(8),           ######################################################        
       2 CDALIPN  CHAR(8),           ######################################################        
       2 CDTYPES  CHAR(1),           ######################################################        
       2 CDTYPRM  CHAR(8),           ######################################################        
       2 CDTYPR2  CHAR(8),           ######################################################        
       2 CDLTERF  CHAR(8),           ######################################################        
       2 CDLTERN  CHAR(8),           ######################################################        
       2 CDCMDPR  CHAR(5),           ######################################################        
       2 CDTYLTF  CHAR(1),           ######################################################        
       2 CDTYLTN  CHAR(1),           ######################################################        
                                     /*--!  !D = IMPRESSION DIFFEREE  */        
       2 CDRESEF  CHAR(6),           ######################################################        
       2 CDRESEN  CHAR(6),           ######################################################        
       2 LTNMVXF  CHAR(6),           ######################################################        
       2 LTNMVXN  CHAR(6),           ######################################################        
       2 CDEMPRT  CHAR(1),           ######################################################        
       2 CD2BACS  CHAR(1),           ######################################################        
       2 CDUPLEX  CHAR(1),           ######################################################        
                                     /*--!  !N OU '': PAS DE R/V      */        
                                     /*--!  !Y: R/V (BAC PRINCIPAL)   */        
                                     /*--!  !M: R/V (BAC MANUEL)      */        
       2 FIL1  CHAR(1),              #########################################################        
       2 CDIMPIX  CHAR(1),           ######################################################        
       2 CDALIPD  CHAR(8),           ######################################################        
       2 CDTYPRD  CHAR(8),           ######################################################        
       2 CDLTERD  CHAR(8),           ######################################################        
       2 CDTYLTD  CHAR(1),           ######################################################        
       2 CDRESED  CHAR(6),           ######################################################        
       2 LTNMVXD  CHAR(6),           ######################################################        
       2 CDPRT67  CHAR(3),           ######################################################        
       2 CDBCVXF  CHAR(1),           ######################################################        
       2 CDBCVXN  CHAR(1),           ######################################################        
       2 CDBCVXD  CHAR(1),           ######################################################        
       2 FILLER  CHAR(6),            #######################################################        
       2 CDEGARG  CHAR(1);           ######################################################        
 /* NRB - TDMAMB - GENERATION LE 09/03/2006 - 09:42        LGTH=00274 */        
         
         /* --------------------------------------------------------- */        
         /*  TABLE DES BUREAUX REGIONAUX     POUR SMICA               */        
         /* --------------------------------------------------------- */        
 DCL  1 TBSM_CABU ,                 #############################################################        
                                    /*--!  !                          */        
 /*K*/ 2 TBTXCOD  CHAR(4),          /*CD!  !CODE TABLE                */        
 /*K*/ 2 TBTXA01  CHAR(20),         /*CD!  !ARGUMENT                  */        
       2 LTBUREA(3)  CHAR(40),      ##################################################        
       2 CDINSTN  CHAR(1),          ######################################################        
       2 CDINSTS  CHAR(1),          ######################################################        
       2 CDINSTA  CHAR(1),          ######################################################        
       2 CDLGBFR  CHAR(1),          ######################################################        
       2 CDLGBNL  CHAR(1),          ######################################################        
       2 CDLGBDE  CHAR(1),          ######################################################        
       2 CDLGBEN  CHAR(1),          ######################################################        
       2 CDBUPER  CHAR(2),          ######################################################        
       2 CDRFPRT  CHAR(3),          ######################################################        
       2 CDPRBAN  CHAR(1),          ######################################################        
       2 CDRFPRT1  CHAR(3),         #####################################################        
       2 CDRFPRT2  CHAR(3),         #####################################################        
       2 CDRFPRT3  CHAR(3),         #####################################################        
       2 CDRFPRT4  CHAR(3),         #####################################################        
       2 CDRFPRT5  CHAR(3),         #####################################################        
       2 CDRFPRT6  CHAR(3),         #####################################################        
       2 CDRFPRT7  CHAR(3),         #####################################################        
       2 CDRFPRT8  CHAR(3),         #####################################################        
       2 FILLER  CHAR(93);          ######################################################        
         
 /* NRB - TDMGAS - GENERATION LE 04/11/2005 - 15:25        LGTH=00274 */        
 /* NRB - TDMGAS -                                         Lgth=00274 */        
 /*-------------------------------------------------------------------*/        
 /*-- TABLE DES utilisateurs extranet r{parateurs agr{{s              */        
 /*-------------------------------------------------------------------*/        
 DCL  1 TBSM_EXRA ,                       #############################################################        
                                          /*--!  !=DESCRIPTION ARGUMEN*/        
                                          /*--!  ! L'8 :util. extra re*/        
 /*K*/ 2 TBTXCOD  CHAR(4),                /*CD!  !CODE TABLE          */        
 /*K*/ 2 TBTXA01  CHAR(20),               /*CD!  !ARGUMENT            */        
       2 LTNMURA  CHAR(30),               #####################################################        
       2 LTTLURA  CHAR(15),               #####################################################        
       2 CDSEXUR  CHAR(1),                ######################################################        
       2 CDVANCO  CHAR(1),                ######################################################        
       2 FILLER3  CHAR(202),              ####################################################        
       2 CDEGARG  CHAR(1);                ######################################################        
 /* NRB - TDMWEL - Generation le 21/02/2002 - 16:15        Lgth=02010 */        
 /* NRB - TDMSAU - Generation le 27/03/2000 - 09:51        Lgth=02010 */        
 /*******************        
 *  SEGMENT SCRATCH *        
 *******************/        
 DCL  1 SMSCRAT ,                           ###############################################################        
                                            /*DB!  !DCR10   !SMSCRAT  */        
                                            /*DB!  !DDO09   !SMSCRAT  */        
 /*K*/ 2 NOIDSCR  CHAR(10),                 /*CD!  !NOM DE LA SCRATCH */        
       2 LTNMSCR  CHAR(2000);               ###################################################        
         
         
  DCL 1 SSA_SMSCRAT,        
         2 FIL1         CHAR (8)       INIT ('SMSCRAT'),        
         2 FIL2         CHAR (1)       INIT ('*'),        
         2 CC           CHAR (3)       INIT ('---'),        
         2 PAR          CHAR (1)       INIT ('('),        
         2 FIL3         CHAR (8)       INIT ('KSMSCRAT'),        
         2 OPER         CHAR (2)       INIT ('= '),        
         2 VALUE        CHAR (10),        
         2 FIL4         CHAR (1)       INIT (')');        
  /*DCL   LTNMSCR_R        CHAR (2000)      DEF SMSCRAT.LTNMSCR ; */        
  DCL   LTNMSCR_R CHAR (2000) BASED(ADDR(SMSCRAT.LTNMSCR)) ;        
 /* NRB - TDMTHO - Generation le 17/03/2004 - 11:28        Lgth=00600 */        
 /*********************************************************************/        
 /*  SEGMENT DB DEVIS                                                 */        
 /*  SMDV001        SMDEVIS_001        D201001                        */        
 /*  SMDV002        SMDEVIS_002        D202001                        */        
 /*  SMDV003        SMDEVIS_003        IB                             */        
 /*  SMDV004        SMDEVIS_004        IB2                            */        
 /*  SMDV005        SMDEVIS_005        IB3                            */        
 /*  SMDV006        SMDEVIS_006        SMPK100/SMPK001(D201001)       */        
 /*  SMDV007        SMDEVIS_007        MS                             */        
 /*  SMDV008        SMDEVIS_008        SA                             */        
 /*  SMDV009        SMDEVIS_009        D203013 (BATEAU)               */        
 /*  SMDV010        SMDEVIS_010        D203013 (BATEAU)               */        
 /*  SMDV011        SMDEVIS_011        D203013 (BATEAU)               */        
 /*  SMDV012        SMDEVIS_012        A2 (AUTO VEHICULE)             */        
 /*  SMDV013        SMDEVIS_013        A2 (AUTO VEHICULE)             */        
 /*  SMDV014        SMDEVIS_014        A2 (AUTO ACCESSOIRE)           */        
 /*  SMDV015        SMDEVIS_015        A2 (AUTO ANTECEDANT)           */        
 /*  SMDV016        SMDEVIS_016        MS605                          */        
 /*  SMDV022        SMDEVIS_022        VI                             */        
 /*********************************************************************/        
 DCL  1 SMDEVIS ,                       ###############################################################        
 /*K*/ 2 CDTYKEY  CHAR(1),              /*CD!  !TYPE DE CLE           */        
                                        /*--!  !A = AFFILER           */        
                                        /*--!  !D = DATE              */        
                                        /*--!  !P = OLICE             */        
 /*K*/ 2 NOIDKEY  DEC FIXED(9),         /*NO!  !CLE DU DEVIS          */        
                                        /*--!  !SI A :NUMERO AFFILIER */        
                                        /*--!  !SI D : XXSAAMMJJ(DATE */        
                                        /*--!  ! SI  A2: XX = 00      */        
                                        /*--!  !     IB: XX = 01      */        
                                        /*--!  !     PK: XX = 02      */        
                                        /*--!  !     FI: XX = 03      */        
                                        /*--!  !     VI: XX = 04      */        
                                        /*--!  !SI P :NUMERO DE POLICE*/        
 /*K*/ 2 NOSQDEV  DEC FIXED(7),         /*NO!  !NUMERO DE DEVIS       */        
                                        /*--!  !SI A :NUMERO DEVIS    */        
                                        /*--!  !     :VERSION DEVIS   */        
                                        /*--!  !SI D :NUMERO DEVIS    */        
                                        /*--!  !     :VERSION DEVIS   */        
                                        /*--!  !SI P :VERSION DEVIS   */        
 /*K*/ 2 NOSQTXT  DEC FIXED(3),         /*NO!  !NUMERO DU COPY        */        
       2 CDTYPRO  CHAR(7),              ######################################################        
       2 CDSBPRO  CHAR(7),              ######################################################        
       2 CDVEPRO  CHAR(3),              ######################################################        
       2 NOSQINT  PIC'(5)9',            ####################################################        
       2 NOSQSUJ  PIC'(5)9',            ####################################################        
       2 DATEMAJ  CHAR(4),              ######################################################        
       2 TIMEMAJ  CHAR(4),              ######################################################        
       2 TBEGCOD  CHAR(2),              ######################################################        
       2 DATAFIXE  CHAR(8),             #####################################################        
       2 DATA  CHAR(543);               #######################################################        
    DCL 1 SSA_SMDEVIS,        
         2 FIL1         CHAR (8)       INIT ('SMDEVIS'),        
         2 FIL2         CHAR (1)       INIT ('*'),        
         2 CC           CHAR (3)       INIT ('---'),        
         2 PAR          CHAR (1)       INIT ('('),        
         2 FIL3         CHAR (8)       INIT ('KSMDEVIS'),        
         2 OPER         CHAR (2)       INIT ('= '),        
         2 VALUE1       CHAR(01) ,        
         2 VALUE2       FIXED DEC(9) ,        
         2 VALUE3       FIXED DEC(7) ,        
         2 VALUE4       FIXED DEC(3) ,        
         2 FIL4         CHAR (1)       INIT (')');        
 /* NRB - TDMEUR - GENERATION LE 08/04/2010 - 13:38        LGTH=00600 */        
 /*********************************/        
 /*  SEGMENT DB DEVIS A2 GENERAL  */        
 /*********************************/        
                                /*--!  !SI A :NUMERO AFFILIER         */        
                                /*--!  !SI I :DATE DU DEVIS           */        
                                /*--!  !SI D :DATE DU DEVIS           */        
 DCL  1 SMDEVIS_012 ,           ###########################################################        
 /*K*/ 2 CDTYKEY  CHAR(1),      /*CD!  !TYPE DE CLE                   */        
                                /*--!  !A = AFFILER                   */        
                                /*--!  !D = DATE                      */        
 /*K*/ 2 NOIDKEY  DEC FIXED(9), /*NO!  !SI A :NUMERO AFFILIE  (7)     */        
                                /*--!  !SI D :DATE DU DEVIS           */        
 /*K*/ 2 NOSQDEV  DEC FIXED(7), /*NO!  !NUMERO DE DEVIS               */        
                                /*--!  !SI A :NUMERO DEVIS     (4)    */        
                                /*--!  !     :VERSION DEVIS    (3)    */        
                                /*--!  !SI D :NUMERO DEVIS     (4)    */        
                                /*--!  !     :VERSION DEVIS    (3)    */        
 /*K*/ 2 NOSQTXT  DEC FIXED(3), /*NO!  !NUMERO DU COPY                */        
       2 CDTYPRO  CHAR(7),      ######################################################        
       2 CDSBPRO  CHAR(7),      ######################################################        
       2 CDVEPRO  CHAR(3),      ######################################################        
       2 NOSQINT  PIC'(5)9',    ####################################################        
       2 NOSQSUJ  PIC'(5)9',    ####################################################        
       2 DATEMAJ  DEC FIXED(7), #################################################        
       2 TIMEMAJ  DEC FIXED(6), #################################################        
       2 TBEGCDV(16)  BIT(1),   ###################################################        
                                /*--!  !02 : PRESENCE ACCESSOIRES     */        
                                /*--!  !03 : PRESENCE ANTECEDENTS     */        
                                /*--!  !04 : PRESENCE CONDUCTEUR      */        
                                /*--!  !05 : CONTENTIEUX/RAPPEL       */        
                                /*--!  !06 : PRESENCE INFO PROPOSITION*/        
                                /*--!  !07 : DEVIS INTRANET           */        
                                /*--!  !08 : MODULO FAMILY            */        
                                /*--!  !09 : PRESENCE INFOS TARIFAIRES*/        
       2 TBEGREM(16)  BIT(1),   ###################################################        
       2 NOTXTEV  BIN FIXED(15),################################################        
       2 DAPERMI  DEC FIXED(7), #################################################        
       2 CDDVDEV  CHAR(1),      ######################################################        
       2 CDCMGES  DEC FIXED(7), #################################################        
       2 CDCMPRO  PIC'9',       #######################################################        
       2 NOPOORI  DEC FIXED(8), #################################################        
       2 NOPOCRE  DEC FIXED(8), #################################################        
       2 NOIDAFF  DEC FIXED(7), #################################################        
       2 LTNMAFF  CHAR(30),     #####################################################        
       2 CDRSAFF  CHAR(1),      ######################################################        
       2 LTRUEAF  CHAR(25),     #####################################################        
       2 NOHA1AF  BIN FIXED(15),################################################        
       2 NOHA2AF  CHAR(4),      ######################################################        
       2 LTLOCAF  CHAR(25),     #####################################################        
       2 CDCPOAF  CHAR(6),      ######################################################        
       2 CDLGAFF  CHAR(1),      ######################################################        
       2 DANAIAF  DEC FIXED(7), #################################################        
       2 CDCATAF  CHAR(3),      ######################################################        
       2 LTNOMCD  CHAR(20),     #####################################################        
       2 LTPRECD  CHAR(15),     #####################################################        
       2 LTRUECD  CHAR(30),     #####################################################        
       2 CDRSCCD  CHAR(1),      ######################################################        
       2 LTLOCCD  CHAR(25),     #####################################################        
       2 CDCPOCD  CHAR(6),      ######################################################        
       2 DANAICD  DEC FIXED(7), #################################################        
       2 TBEGDOC(16)  BIT(1),   ###################################################        
                                /*--!  ! 2 = IMPRES LETTRE ACCOMP.    */        
                                /*--!  ! 3 = IMPRES PROPOSITION       */        
                                /*--!  ! 4 = IMPRES LETTRE RENON      */        
                                /*--!  ! 5 = IMPRES CV PROVISOIRE     */        
                                /*--!  ! 6 = IMPRES LETTRE FRANCHISE  */        
                                /*--!  ! 7 = IMPRES EN DOC1           */        
       2 CDCATVH  CHAR(3),      ######################################################        
       2 CDCATCV  CHAR(2),      ######################################################        
       2 CDUSVEH  CHAR(2),      ######################################################        
       2 CDUSPRO  PIC'9',       #######################################################        
       2 NBKMPRO  DEC FIXED(3), #################################################        
       2 CDFRAAV  CHAR(1),      ######################################################        
       2 CDFFRAV  PIC'9',       #######################################################        
       2 CDFDHAV  PIC'9',       #######################################################        
       2 CDTAXAV  PIC'9',       #######################################################        
       2 CDTVASN  CHAR(1),      ######################################################        
       2 LTPLQVH  CHAR(12),     #####################################################        
       2 CDTABBM  CHAR(1),      ######################################################        
       2 CDINAMI  CHAR(1),      ######################################################        
       2 CDGAZOI  CHAR(1),      ######################################################        
       2 ANCSTVH  DEC FIXED(3), #################################################        
       2 NBPR1TR  PIC'999V9',   ###################################################        
       2 NBPR2TR  PIC'999V9',   ###################################################        
       2 LTCHAVH  CHAR(30),     #####################################################        
       2 LTMRQVH  CHAR(20),     #####################################################        
       2 NUPDSVH  PIC'99V9',    ####################################################        
       2 CDPUIVH  CHAR(1),      ######################################################        
       2 NUPUIVH  DEC FIXED(5), #################################################        
       2 NUCYLVH  DEC FIXED(5), #################################################        
       2 VACATVH  DEC FIXED(9), #################################################        
       2 VAACTVH  DEC FIXED(9), #################################################        
       2 VAACCVH  DEC FIXED(9), #################################################        
       2 VAFACVH  DEC FIXED(9), #################################################        
       2 VAOBJVH  DEC FIXED(9), #################################################        
       2 TBEGCOV(16)  BIT(1),   ###################################################        
                                /*--!  !01 : MAGISTRAT                */        
                                /*--!  !02 : FONCTIONNAIRE            */        
                                /*--!  !03 : FONCT. AVEC CONTRAT      */        
                                /*--!  !04 : CODE ANTIVOL 1           */        
                                /*--!  !05 : CODE ANTIVOL 2           */        
                                /*--!  !06 : PLUS 1 SINISTRE          */        
                                /*--!  !07 : DOMICILIATION            */        
                                /*--!  !08 : AUTRE CONDUC. - 26 ANS   */        
                                /*--!  !09 : CONDUCTEUR PASSIF        */        
                                /*--!  !10 : CLIENT FIDELISE          */        
                                /*--!  !11 : TMC ASSUREE              */        
                                /*--!  !12 : NOUVEAU TARIF G. ANNEXES */        
                                /*--!  !13 : REMPLACEMENT VEHICULE    */        
                                /*--!  !14 : IAV APRES IAA            */        
                                /*--!  !15 : MODULO TEACHER           */        
                                /*--!  !16 : MODULO SENIOR            */        
       2 CDTYPVH  DEC FIXED(5), #################################################        
       2 CDCKCHA  PIC'99',      ######################################################        
       2 DAFICIR  DEC FIXED(7), #################################################        
       2 ECRCSOU  PIC'99',      ######################################################        
       2 ECDMSOU  PIC'99',      ######################################################        
       2 ECRCACT  PIC'99',      ######################################################        
       2 ECANSOU  PIC'99',      ######################################################        
       2 TBEGGAR(16)  BIT(1),   ###################################################        
       2 TBEGCOG(16)  BIT(1),   ###################################################        
                                /*--!  !04 TARIF TEC FAMILLE          */        
                                /*--!  !05 FRANCHISE PENALISANTE      */        
                                /*--!  !06 MAILING PROMO DM 2006      */        
                                /*--!  !09 TJ2 INTERDIT               */        
                                /*--!  !10 TARIF HORECA               */        
                                /*--!  !11 FRANCHISES HORECA          */        
                                /*--!  !12 PAS GENERER P791/P792      */        
                                /*--!  !13 JEUNE CONDUCTEUR RENSEIGNE */        
       2 CDTYPTA  CHAR(1),      ######################################################        
       2 CDDEROG  CHAR(2),      ######################################################        
       2 CDPADIV  CHAR(2),      ######################################################        
       2 DAPROCV  DEC FIXED(7), #################################################        
       2 DAECHPR  PIC'9999',    ####################################################        
       2 CDTIMFX  DEC FIXED(3), #################################################        
       2 TBTYPPO(16)  BIT(1),   ###################################################        
                                /*--!  ! 1 : PROPOSITION              */        
       2 NOAGTAV  CHAR(6),      ######################################################        
       2 CDFORGA  CHAR(1),      ######################################################        
       2 CDDRIVE  CHAR(1),      ######################################################        
       2 NBKMCPT  DEC FIXED(11),################################################        
       2 CDADCOU  CHAR(1),      ######################################################        
       2 NOINSPO  CHAR(3),      ######################################################        
       2 CDGRPAF  CHAR(7),      ######################################################        
       2 DAENTMS  DEC FIXED(15),################################################        
       2 NBANCON  CHAR(2),      ######################################################        
       2 CDTYCAC  CHAR(7),      ######################################################        
       2 CDTYDEV  CHAR(2),      ######################################################        
       2 CDDMSEG  CHAR(2),      ######################################################        
       2 CDRCSEG  CHAR(2),      ######################################################        
       2 CDVOSEG  CHAR(2),      ######################################################        
       2 CDREGDM  CHAR(1),      ######################################################        
       2 CDGRPJE  CHAR(1),      ######################################################        
       2 CDPRAPP  CHAR(7),      ######################################################        
       2 CDLGDEV  CHAR(1),      ######################################################        
       2 CDQUACD  CHAR(1),      ######################################################        
       2 NBEXREN  CHAR(1),      ######################################################        
       2 CDCTRRI  CHAR(1),      ######################################################        
       2 CDACTCO  CHAR(15),     #####################################################        
       2 CDEURTX  CHAR(7),      ######################################################        
       2 CDCADIV  CHAR(4),      ######################################################        
       2 CDCIRLI  CHAR(2),      ######################################################        
       2 LTUSARE  CHAR(30),     #####################################################        
       2 CDFRDMA  CHAR(2),      ######################################################        
       2 CDFRVOL  CHAR(2),      ######################################################        
       2 LTQUATI  CHAR(12),     #####################################################        
       2 CDENVFM  CHAR(1),      ######################################################        
       2 CDART15  CHAR(1),      ######################################################        
       2 CDALARM  CHAR(1),      ######################################################        
       2 CDPROMO  CHAR(1),      ######################################################        
       2 ECJKSOU  CHAR(1),      ######################################################        
       2 MTTMCVH  DEC FIXED(7), #################################################        
       2 CDIDSEG  CHAR(1),      ######################################################        
       2 CDDVDOC1  CHAR(1),     #####################################################        
       2 NOIDDOC  CHAR(3),      ######################################################        
       2 CDIDTRF  CHAR(1),      ######################################################        
       2 FILLER  CHAR(2);       #######################################################        
         
         
 DCL   NOIDDOC_R  FIXED DEC(05)      BASED(ADDR(SMDEVIS_012.NOIDDOC));        
         
 DCL SMDEVIS_R12 LIKE SMDEVIS_012;        
 /* NRB - TDMLEN - GENERATION LE 13/08/2009 - 16:50        LGTH=00600 */        
 /*********************************        
 *  SEGMENT DB DEVIS A2 GARANTIES *        
 *********************************/        
 DCL  1 SMDEVIS_013 ,               ###########################################################        
 /*K*/ 2 CDTYKEY  CHAR(1),          /*CD!  !TYPE DE CLE               */        
                                    /*--!  !A = AFFILER               */        
                                    /*--!  !D = DATE                  */        
 /*K*/ 2 NOIDKEY  DEC FIXED(9),     /*NO!  !SI A :NUMERO AFFILIE  (7) */        
                                    /*--!  !SI D :DATE DU DEVIS (7)   */        
 /*K*/ 2 NOSQDEV  DEC FIXED(7),     /*NO!  !NUMERO DE DEVIS           */        
                                    /*--!  !SI A :NUMERO DEVIS     (4)*/        
                                    /*--!  !     :VERSION DEVIS    (3)*/        
                                    /*--!  !SI D :NUMERO DEVIS     (4)*/        
                                    /*--!  !     :VERSION DEVIS    (3)*/        
 /*K*/ 2 NOSQTXT  DEC FIXED(3),     /*NO!  !NUMERO DU COPY            */        
       2 CDTYPRO  CHAR(7),          ######################################################        
       2 CDSBPRO  CHAR(7),          ######################################################        
       2 CDVEPRO  CHAR(3),          ######################################################        
       2 NOSQINT  PIC'(5)9',        ####################################################        
       2 NOSQSUJ  PIC'(5)9',        ####################################################        
       2 DATEMAJ  DEC FIXED(7),     #################################################        
       2 TIMEMAJ  DEC FIXED(6),     #################################################        
       2 TBEGCDV(16)  BIT(1),       ###################################################        
       2 TBEGREM(16)  BIT(1),       ###################################################        
       2 DATAFIX  CHAR(6),          ######################################################        
       2 TBGARAN(10),        
        3 CDGARAS  CHAR(3),         #####################################################        
        3 DAEFGAR  DEC FIXED(7),    ################################################        
        3 DAXPGAR  DEC FIXED(7),    ################################################        
        3 CDTFGAR  CHAR(2),         #####################################################        
        3 NUVSTRF  PIC'99',         #####################################################        
        3 PRBASGA  DEC FIXED(11),   ###############################################        
        3 TBEGCOD(24)  BIT(1),      ##################################################        
                                    /*--!  ! 1 SI CAS + C => S        */        
                                    /*--!  ! 2 SI TARIF FORCE         */        
                                    /*--!  ! 3 SI A2DEVER PRESENT     */        
        3 NUMJDIV  DEC FIXED(5,2),  ##############################################        
        3 NUMJLEA  DEC FIXED(3),    ################################################        
        3 NUMJPDG  DEC FIXED(3),    ################################################        
         
        3 NURDCEX  DEC FIXED(3),    ################################################        
        3 NURDCLI  DEC FIXED(3),    ################################################        
        3 NURDPLU  DEC FIXED(3),    ################################################        
        3 NURDFRA  DEC FIXED(3),    ################################################        
        3 NURDLOI  DEC FIXED(3),    ################################################        
        3 NURDGAZ  DEC FIXED(3),    ################################################        
        3 NURDDIV  DEC FIXED(5,2),  ##############################################        
       2 NBSINRC  PIC'99',          ######################################################        
       2 NBSINDM  PIC'99',          ######################################################        
       2 TBEGPAR(16)  BIT(1),       ###################################################        
                                    /*--!  ! 1 RESIDE AVEC PARENTS    */        
                                    /*--!  ! 2 TITULAIRE 2 AUTRES POL.*/        
                                    /*--!  ! 3 ENFANT A CHARGE        */        
                                    /*--!  ! 4 STAGE                  */        
                                    /*--!  ! 5 STARTER                */        
       2 CDOPTIN  CHAR(5),          ######################################################        
       2 CDCIBCL  CHAR(2),          ######################################################        
       2 FILLER  CHAR(70);          ######################################################        
 DCL SMDEVIS_R13 LIKE SMDEVIS_013;        
 /* NRB - TDMOHL - Generation le 31/08/2001 - 07:06        Lgth=00600 */        
 /************************************        
 *  SEGMENT DB DEVIS A2 ACCESSOIRES  *        
 *************************************/        
 DCL  1 SMDEVIS_014 ,              ###########################################################        
 /*K*/ 2 CDTYKEY  CHAR(1),         /*CD!  !TYPE DE CLE                */        
                                   /*--!  !A = AFFILER                */        
                                   /*--!  !D = DATE                   */        
 /*K*/ 2 NOIDKEY  DEC FIXED(9),    /*NO!  !SI A :NUMERO AFFILIE  (7)  */        
                                   /*--!  !SI D :DATE DU DEVIS (7)    */        
 /*K*/ 2 NOSQDEV  DEC FIXED(7),    /*NO!  !NUMERO DE DEVIS            */        
                                   /*--!  !SI A :NUMERO DEVIS     (4) */        
                                   /*--!  !     :VERSION DEVIS    (3) */        
                                   /*--!  !SI D :NUMERO DEVIS     (4) */        
                                   /*--!  !     :VERSION DEVIS    (3) */        
 /*K*/ 2 NOSQTXT  DEC FIXED(3),    /*NO!  !NUMERO DU COPY             */        
       2 CDTYPRO  CHAR(7),         ######################################################        
       2 CDSBPRO  CHAR(7),         ######################################################        
       2 CDVEPRO  CHAR(3),         ######################################################        
       2 NOSQINT  PIC'(5)9',       ####################################################        
       2 NOSQSUJ  PIC'(5)9',       ####################################################        
       2 DATEMAJ  DEC FIXED(7),    #################################################        
       2 TIMEMAJ  DEC FIXED(6),    #################################################        
       2 TBEGCDV(16)  BIT(1),      ###################################################        
       2 TBEGREM(16)  BIT(1),      ###################################################        
       2 DATAFIX  CHAR(6),         ######################################################        
       2 TBACCVH(10)  DEC FIXED(7),#############################################        
       2 TBACCSP(14),        
        3 LTACCSP  CHAR(30),       ####################################################        
        3 VAACCSP  DEC FIXED(7),   ################################################        
       2 FILLER  CHAR(27);         ######################################################        
 /* NRB - TDMBIE - Generation le 13/06/2003 - 17:03        Lgth=00600 */        
 /***********************************        
 *  SEGMENT DB DEVIS ANTECEDENTS A2 *        
 ************************************/        
                                /*--!  !SI A :NUMERO AFFILIER         */        
                                /*--!  !SI I :DATE DU DEVIS           */        
                                /*--!  !SI D :DATE DU DEVIS           */        
 DCL  1 SMDEVIS_015 ,           ###########################################################        
 /*K*/ 2 CDTYKEY  CHAR(1),      /*CD!  !TYPE DE CLE                   */        
                                /*--!  !A = AFFILER                   */        
                                /*--!  !D = DATE                      */        
 /*K*/ 2 NOIDKEY  DEC FIXED(9), /*NO!  !SI A :NUMERO AFFILIE  (7)     */        
                                /*--!  !SI D :DATE DU DEVIS           */        
 /*K*/ 2 NOSQDEV  DEC FIXED(7), /*NO!  !NUMERO DE DEVIS               */        
                                /*--!  !SI A :NUMERO DEVIS     (4)    */        
                                /*--!  !     :VERSION DEVIS    (3)    */        
                                /*--!  !SI D :NUMERO DEVIS     (4)    */        
                                /*--!  !     :VERSION DEVIS    (3)    */        
 /*K*/ 2 NOSQTXT  DEC FIXED(3), /*NO!  !NUMERO DU COPY                */        
       2 CDTYPRO  CHAR(7),      ######################################################        
       2 CDSBPRO  CHAR(7),      ######################################################        
       2 CDVEPRO  CHAR(3),      ######################################################        
       2 NOSQINT  PIC'(5)9',    ####################################################        
       2 NOSQSUJ  PIC'(5)9',    ####################################################        
       2 DATEMAJ  DEC FIXED(7), #################################################        
       2 TIMEMAJ  DEC FIXED(6), #################################################        
       2 TBEGCDV(16)  BIT(1),   ###################################################        
       2 TBEGREM(16)  BIT(1),   ###################################################        
       2 DATAFIX  CHAR(6),      ######################################################        
       2 CDANTCO  CHAR(1),      ######################################################        
       2 NBSINRC  DEC FIXED(3), #################################################        
       2 NBSINVO  DEC FIXED(3), #################################################        
       2 NBSINDM  DEC FIXED(3), #################################################        
       2 NBIVVOL  DEC FIXED(3), #################################################        
       2 NBINTOX  DEC FIXED(3), #################################################        
       2 NBDEFUI  DEC FIXED(3), #################################################        
       2 NBFRASS  DEC FIXED(3), #################################################        
       2 NBDECPE  DEC FIXED(3), #################################################        
       2 CDPRASS  CHAR(1),      ######################################################        
       2 CDPORES  CHAR(1),      ######################################################        
       2 CDIDRES  CHAR(1),      ######################################################        
       2 TABCMP(3),        
        3 NOIDCMP  CHAR(4),     #####################################################        
        3 DAXPCMP  DEC FIXED(7),################################################        
        3 NOPOCMP  CHAR(12),    ####################################################        
                                /*--!  ! 1=RC 2=RISQ.ANN. 3=CAS       */        
       2 CDIMPRE  CHAR(1),      ######################################################        
       2 CDCMGES  DEC FIXED(7), #################################################        
       2 CDREFCI  CHAR(1),      ######################################################        
       2 CDMOTRE  CHAR(2),      ######################################################        
       2 CDMOTAN  CHAR(2),      ######################################################        
       2 ECRCDEC  CHAR(2),      ######################################################        
       2 CDENVRE  CHAR(1),      ######################################################        
       2 FILLER  CHAR(450);     #####################################################        
 /* NRB - TDMTHO - GENERATION LE 05/05/2006 - 15:26        LGTH=00600 */        
 /***********************************************************        
 *  SEGMENT DB DEVIS A2 INFOS COMPLEMENTAIRES PROPOSITIONS  *        
 ***********************************************************/        
 DCL  1 SMDEVIS_018 ,           ###########################################################        
 /*K*/ 2 CDTYKEY  CHAR(1),      /*CD!  !TYPE DE CLE                   */        
                                /*--!  !A = AFFILIE                   */        
                                /*--!  !D = DATE                      */        
 /*K*/ 2 NOIDKEY  DEC FIXED(9), /*NO!  !SI A :NUMERO AFFILIE  (7)     */        
                                /*--!  !SI D :DATE DU DEVIS (7)       */        
 /*K*/ 2 NOSQDEV  DEC FIXED(7), /*NO!  !NUMERO DE DEVIS               */        
                                /*--!  !SI A :NUMERO DEVIS     (4)    */        
                                /*--!  !     :VERSION DEVIS    (3)    */        
                                /*--!  !SI D :NUMERO DEVIS     (4)    */        
                                /*--!  !     :VERSION DEVIS    (3)    */        
 /*K*/ 2 NOSQTXT  DEC FIXED(3), /*NO!  !NUMERO DU COPY                */        
       2 CDTYPRO  CHAR(7),      ######################################################        
       2 CDSBPRO  CHAR(7),      ######################################################        
       2 CDVEPRO  CHAR(3),      ######################################################        
       2 NOSQINT  PIC'(5)9',    ####################################################        
       2 NOSQSUJ  PIC'(5)9',    ####################################################        
       2 DATEMAJ  DEC FIXED(7), #################################################        
       2 TIMEMAJ  DEC FIXED(6), #################################################        
       2 TBEGCDV(16)  BIT(1),   ###################################################        
       2 TBEGREM(16)  BIT(1),   ###################################################        
       2 DATAFIX  CHAR(6),      ######################################################        
       2 DAEFFPO  DEC FIXED(7), #################################################        
       2 NODOMPO  DEC FIXED(12),################################################        
       2 NOCPTDB  DEC FIXED(12),################################################        
       2 NOIDDXC  CHAR(12),     #####################################################        
       2 DAPERCO  DEC FIXED(7), #################################################        
       2 NOPERCO  CHAR(10),     #####################################################        
       2 DANAITI  DEC FIXED(7), #################################################        
       2 CDQUATI  CHAR(1),      ######################################################        
       2 CDRSTIT  CHAR(1),      ######################################################        
       2 CDLGTIT  CHAR(1),      ######################################################        
       2 LTNOMTI  CHAR(20),     #####################################################        
       2 LTPRETI  CHAR(15),     #####################################################        
       2 LTRUETI  CHAR(30),     #####################################################        
       2 CDCPOTI  CHAR(6),      ######################################################        
       2 LTLOCTI  CHAR(25),     #####################################################        
       2 CDPAYTI  CHAR(3),      ######################################################        
       2 NOTELTI  CHAR(16),     #####################################################        
       2 DAPERTI  DEC FIXED(7), #################################################        
       2 NOPERTI  CHAR(10),     #####################################################        
       2 LTPROTI  CHAR(15),     #####################################################        
       2 CDRSPRE  CHAR(1),      ######################################################        
       2 CDLGPRE  CHAR(1),      ######################################################        
       2 LTNOMPR  CHAR(20),     #####################################################        
       2 LTPREPR  CHAR(15),     #####################################################        
       2 LTRUEPR  CHAR(30),     #####################################################        
       2 CDCPOPR  CHAR(6),      ######################################################        
       2 LTLOCPR  CHAR(25),     #####################################################        
       2 CDPAYPR  CHAR(3),      ######################################################        
       2 DAPERPR  DEC FIXED(7), #################################################        
       2 NOPERPR  CHAR(10),     #####################################################        
       2 JEUNECO(3),        
        3 LTNMCON  CHAR(20),    ####################################################        
        3 LTPRCON  CHAR(15),    ####################################################        
        3 DATENAI  DEC FIXED(7),################################################        
        3 DAPERMI  DEC FIXED(5),################################################        
        3 CDQUACO  CHAR(1),     #####################################################        
        3 CDSUPPL  CHAR(1),     #####################################################        
       2 DAECHCT  CHAR(4),      ######################################################        
       2 FILLER  CHAR(97);      ######################################################        
 /* NRB - TDMSOX - GENERATION LE 10/06/2010 - 16:19        LGTH=00600 */        
 /***************************************        
 *  SEGMENT DB DEVIS NOUVELLE ERGONOMIE *        
 ***************************************/        
                                /*--!  !SI A :NUMERO AFFILIE          */        
                                /*--!  !SI I :DATE DU DEVIS           */        
                                /*--!  !SI D :DATE DU DEVIS           */        
 DCL  1 SMDEVIS_047 ,           ###########################################################        
 /*K*/ 2 CDTYKEY  CHAR(1),      /*CD!  !TYPE DE CLE                   */        
                                /*--!  !A = AFFILE                    */        
                                /*--!  !D = DATE                      */        
 /*K*/ 2 NOIDKEY  DEC FIXED(9), /*NO!  !SI A :NUMERO AFFILIE  (7)     */        
                                /*--!  !SI D :DATE DU DEVIS           */        
 /*K*/ 2 NOSQDEV  DEC FIXED(7), /*NO!  !NUMERO DE DEVIS               */        
                                /*--!  !SI A :NUMERO DEVIS     (4)    */        
                                /*--!  !     :VERSION DEVIS    (3)    */        
                                /*--!  !SI D :NUMERO DEVIS     (4)    */        
                                /*--!  !     :VERSION DEVIS    (3)    */        
 /*K*/ 2 NOSQTXT  DEC FIXED(3), /*NO!  !NUMERO DU COPY                */        
       2 CDTYPRO  CHAR(7),      ######################################################        
       2 CDSBPRO  CHAR(7),      ######################################################        
       2 CDVEPRO  CHAR(3),      ######################################################        
       2 NOSQINT  PIC'(5)9',    ####################################################        
       2 NOSQSUJ  PIC'(5)9',    ####################################################        
       2 DATEMAJ  DEC FIXED(7), #################################################        
       2 TIMEMAJ  DEC FIXED(6), #################################################        
       2 TBEGCDV(16)  BIT(1),   ###################################################        
       2 TBEGREM(16)  BIT(1),   ###################################################        
       2 DATAFIX  CHAR(6),      ######################################################        
       2 CDIDPRO  CHAR(3),      ######################################################        
       2 NUVSPRO  PIC'99',      ######################################################        
       2 CDANSSI  CHAR(2),      ######################################################        
       2 NBSI5AN  DEC FIXED(3), #################################################        
       2 CDASANT  CHAR(2),      ######################################################        
       2 CDCLFID  CHAR(1),      ######################################################        
       2 CDCIBCL  CHAR(2),      ######################################################        
       2 CDPKVIR  CHAR(3),      ######################################################        
       2 CDOMETH  CHAR(1),      ######################################################        
       2 VATMCVH  DEC FIXED(7), #################################################        
       2 CDOLDVH  CHAR(1),      ######################################################        
       2 CDECOVH  CHAR(2),      ######################################################        
       2 NBKMAVH  DEC FIXED(3), #################################################        
       2 TBDETG2(10),        
        3 CDGARAS  CHAR(3),     #####################################################        
        3 CDFRANS  CHAR(2),     #####################################################        
        3 CDTYFRS  CHAR(1),     #####################################################        
        3 CDTARJE  CHAR(1),     #####################################################        
        3 CDMOMJR  CHAR(2),     #####################################################        
        3 DAEFMJR  DEC FIXED(7),################################################        
        3 NBDUMJR  PIC'99',     #####################################################        
       2 TBJEUCD(2),        
        3 CDRSSCD  CHAR(1),     #####################################################        
        3 LTNOMCD  CHAR(20),    ####################################################        
        3 LTPRECD  CHAR(15),    ####################################################        
        3 DANAICD  DEC FIXED(7),################################################        
        3 LTRUECD  CHAR(30),    ####################################################        
        3 CDCPOCD  CHAR(6),     #####################################################        
        3 LTLOCAD  CHAR(25),    ####################################################        
       2 CDPROFS  CHAR(2),      ######################################################        
       2 CDGEPRO  CHAR(2),      ######################################################        
       2 FILLER  CHAR(160);     #####################################################        
         
         
 /********************************************        
 *                    SPA                    *        
 ********************************************/        
 /*---------------------------------------------------------- SCENARI */        
 /*  DFINITION DES VARIABLES D'INITIALISATION DU SCENARIO             */        
 /*  ----------------------------------------------------             */        
              /* BLOCAGE CODE OPERATION */        
              /* NOUVEAU CANEVAS */        
         
 /*---------------------------------------------------------- SPAAREA */        
 DCL     SPA001_P            PTR;        
 DCL 1   SPA001_R            BASED(SPA001_P),        
      2  CDPOSTE             CHAR (4),        
      2  LTPOSTE             CHAR (25),        
      2  RESERVE             CHAR (1);        
 DCL 1   SCENARI             BASED(SPA001_P),        
      2  NOPGACT             CHAR (1),       #########################################        
      2  NOPGPRV(6)          CHAR (1),       #########################################        
      2  NUMIDLL(6)          BIN FIXED(15),  ####################################        
      2  TBCATOP             CHAR (06),      ########################################        
      2  CDTYSEL             CHAR (01),      ########################################        
      2  NBPAGE1             PIC '99',       #########################################        
      2  TBSCENA (16)        BIT (1);        ##########################################        
         
 DCL     SPA002_P            PTR;        
 DCL 1   SCENA02             BASED(SPA002_P),        
      2  NOIDCLI             CHAR (08),      ########################################        
      2  NOIDSCR             PIC '9999',     #######################################        
      2  RFSIGNA             CHAR (08);      ########################################        
         
 SPA001_P = ADDR(SPA.LTOPTR2);        
 SPA002_P = ADDR(SPA.LTRUE1A);        
         
 DCL DADESIN_SPA_F          FIXED DEC(7) BASED (ADDR(SPA.DADESIN_C));        
         
 DCL 1   SPA        BASED(GA2016J.SPA_PTR),        
         
         
     /*  PARTIE FIXE  */        
         
      2  LL_SPA              BIN FIXED(15),        
      2  XXXX                CHAR (4),        
      2  TRANSAC             CHAR (8),        
      2  MSG_SPA             CHAR (1),      ##########################################        
      2  CDTYECR             CHAR (01),     ###############################        
      2  CDRTTSS             CHAR (02),     ########################################        
      2  NORFPRT             CHAR (08),     ##################################        
      2  CDSCTRN             CHAR (01),     #########################################        
      2  CDATTRN             CHAR (02),     ########################################        
      2  LTSCTRN             CHAR (04),     ####################################        
      2  CDEVTRN             CHAR (01),     #########################################        
      2  CDUTTRN             CHAR (08),     #########################################        
      2  CDOPTRN             CHAR (05),     #################################        
      2  TBRETRN(6)          CHAR (08),     #####################################        
      2  TBFCACT(24)         BIT  (1),      ######################################        
      2  CMDEXEC             CHAR (01),     ########################################        
      2  LTOPTRN             CHAR (30),     ######################################        
      2  LTOPTR2             CHAR (30),     ######################################        
      2  TRANS1              CHAR (08),     #######################################        
      2  TRANS2              CHAR (08),     #######################################        
      2  CDLGTRN             PIC '9',       #######################################        
      2  NOIDAFF             FIXED (7),     ################################        
      2  LTNMAFF             CHAR (30),     ##############################        
      2  CDRSAFF             CHAR (1),      #######################################        
      2  CDSEXAF             CHAR (1),      ##############################        
      2  CDLGEAF             CHAR (1),      ###############################        
      2  CDPOGEO             FIXED(5),      #########################################        
      2  NORULOC             FIXED(7),      #########################################        
      2  LTRUE1A             CHAR (20),     ##################################        
      2  CDCPOAF             CHAR (06),     ##############################        
      2  LTLOCAF             CHAR (25),     ##################################        
      2  NOHA1AF             BIN FIXED(15), #############################        
      2  NOHA1FR             CHAR (01),     ##################################        
      2  NOHA2AF             CHAR (04),     #####################################        
      2  LTRUEAF             CHAR(25),      #######################        
      2  CDPAYAF             CHAR(03),      #############################        
      2  NOIDPOL             FIXED (8),     ################################        
      2  CDTYPOL             CHAR (2),      ##################################        
      2  CDLGPOL             CHAR (1),      ######################################        
      2  CDETAPO             CHAR (1),      ##########################################        
      2  LTNMALP             CHAR (06),     #####################################        
      2  NODOMPO             FIXED(11),     ######################################        
      2  NOCPTPO             FIXED(11),     #####################################        
      2  NOIDNAI             FIXED (7),     ##################################        
      2  NOIDPLQ             CHAR (5),      ################################        
      2  NOIDCHA             CHAR (20),     ################################        
      2  TBTYPAF             BIT (240),     ################################        
                                            /* 60 : CHOIX EURO  */        
      2  TBSEXAF (2)         CHAR (01),     #####################################        
      2  CDGRPCL             CHAR (01),     #####################################        
      2  CDCMGES             CHAR (08),     ####################################        
      2  CDCMPRO             CHAR (01),     #######################################        
      2  NOTL1AF             FIXED (3),     ######################################        
      2  NOTL2AF             FIXED (9),     ######################################        
      2  NOIDSIN             FIXED (9),     ######################################        
      2  NOPPAFF             FIXED (7),     ########################################        
      2  CDCATOP             CHAR (01),     ########################################        
      2  LTOPCOM             CHAR (30),     ########################################        
      2  TRANS3              CHAR (08),     ########################################        
      2  NOORAFF             FIXED (7),     ######################################        
      2  NOIDFAC             CHAR (03),     ####################################        
      2  DANAIAF             FIXED (10),    ###################################        
      2  NOIDFND             CHAR  (03),    #################################        
      2  NOIDMAT             CHAR  (11),    #####################################        
      2  NONATAF             FIXED (11),    ##############################        
      2  LTABRFP             CHAR  (30),    ##############################        
                                            /*  OU CAISSE ET TRANSIT*/        
                                            /* VOIR SPACODEF        */        
                                            /* OU GROUPE+MEDECIN    */        
                                            /* OU RENTE T1          */        
      2  CDEGCOU             CHAR  (01),    ########################################        
      2  TBEGCOD_AFF         BIT   (40),    ########################################        
      2  CDNATPA_RT          CHAR  (02),    ########################################        
                                            /* D5: NUMERO DU PROPRIET.*/        
      2  DAIMPPA_RT          FIXED (5),     #########################################        
      2  CDAPPPR             CHAR  (02),    #######################################        
      2  CDCATTR             CHAR (01),     ###############################        
      2  CDRFPRT             CHAR (03),     #########################################        
      2  NOAVECO             PIC'(3)9',     #########################################        
      2  NOIDFAM             FIXED (7),     ####################################        
                                            /* NO INTERVENANT PRODUCT.*/        
      2  CDTRASW             CHAR  (01),    #######################################        
      2  TBCDCLI             CHAR  (09),    #######################################        
      2  CDALCLI             CHAR  (01),    #######################################        
      2  CDLGFAM             CHAR  (01),    #######################################        
      2  CDLGRUE             CHAR  (01),    #######################################        
      2  NOIDREM             PIC '99',      ################################        
      2  NBSINPO             FIXED BIN(15), #################################        
      2  CDEVTRA             CHAR (01),     ####################################        
      2  NOAF1EX             FIXED(07),     #####################################        
      2  SW_MEMOSIN          CHAR (1),      ######################################        
      2  NOAF2EX             BIN FIXED (15),################################        
      2  ANSINPO             PIC '99',      #######################################        
      2  CDTYFND             CHAR  (01),    ####################################        
                                            /* EN SINISTRE, = A SI*/        
                                            /* PAIEMENT TYPE 89 */        
      2  DADESIN_C           CHAR  (04),    ####################################        
      2  NOIDCRT_SC          FIXED (7),     #####################################        
      2  NOIDSIN_RL          FIXED (9),     #######################################        
      2  CDTYPOL_RL          CHAR  (02),    ######################################        
      2  TBEGGES (8)         BIT   (01),    ######################################        
                                            /* 1=SUIVI GESTIONNAIRE */        
                                            /* 2=SUPER GESTIONNAIRE */        
                                            /* 3=COMMANDE DE MAJ    */        
                                            /* 4=CDE NON PROTEGEE   */        
                                            /* 5= ON=KERNEL CONVERTI*/        
                                            /* 6= ON=NOUVEAU CANEVAS*/        
                                            /* 7=DEVISE OUTPUT T.T. */        
                                            /* 8=CLAUSIER TYPE "U"  */        
      2  NORTMEM             CHAR  (02),    ############################        
      2  CDDVTRN             CHAR  (01),    ######################################        
      2  CDPGTRN             CHAR  (01),    ######################################        
      2  CDDVPOL             CHAR  (01),    ######################################        
      2  CDMODTT             CHAR  (01),    ######################################        
      2  NOTYPDC             PIC '99',      ########################################        
         
     /*  PARTIE VARIABLE : A L'USAGE D'UNE TRANSACTION APPELANTE */        
         
            /* SPA FIXE                         */        
 /*------------------------------------------------------------------*/        
 /*          UTILISE :          GA2016                               */        
 /*------------------------------------------------------------------*/        
 /* DCL 1    SPA                                                     */        
 /*------------------------------------------------------------------*/        
 /* ---- SPA COMPLEMENTAIRE LONGUEUR 200 --------------------------- */        
      2  MEMOCMD,                           ##############################################################        
       3 CDNATOP             CHAR(01),      #########################################        
       3 CDTYPOP             CHAR(01),      #########################################        
       3 CDOBJOP             CHAR(03),      #########################################        
      2  LTOBJOP             CHAR(75),      #########################################        
      2  NOSQMEM             BIN FIXED(15), ####################################        
      2  CDTTAPP             CHAR(2),       ##########################################        
      2  CDAPPEL             CHAR(1),       ##########################################        
      2  CDMMSEL             CHAR(3),       ##########################################        
      2  LTINTKN             CHAR(20),      #########################################        
                                            /* VOIR SPAAREAK         */        
      2  CDLASTK             CHAR(1),       ##########################################        
      2  NOIDRSQ             FIXED(05),     ########################################        
      2  NOLTGEN             CHAR(13),      #########################################        
      2  RSVSPAC             CHAR(75),      #########################################        
 /* ---------------------------------------------------------------- */        
      2  INFOS_USER, #####################################        
         3 NOIDUSR   PIC'(7)9',        
         3 NOSQUSR   PIC'99',        
         3 TYPUSER   CHAR(7),        
         3 CDLGUSR   CHAR(1),        
         3 TBEGUSR(16) BIT(1), ####################################        
         
         3 CDSTAT    CHAR(05),        
         3 LTSITE    CHAR(10),        
         3 CDAFGRP   CHAR(07),        
         3 CDMSETH   CHAR(01), ##################################        
         3 CDTYSOU   CHAR(5),        
      2   SPAS1096,        
 /*       sert au retour d'identification quand la personne n'est        
          pas encore affiliee , elle ne peut pas continuer ...        
          PS : ces donnees sont utilisees dans l'identification !!!  */        
       3   CDDEST            CHAR(05),    #########################################        
       3   NODEVI            CHAR(13),    #########################################        
                                          /* 00SAAMMJJnnnn           */        
       3   CDMODULO          CHAR(02),    #########################################        
       3   LTEMAIL           CHAR(50),        
       3   CDTYPRO           CHAR(2),     ##########################################        
       3   CDGEPRO           CHAR(2),     ##########################################        
       3   FILLSP1           CHAR(30),        
         
      2   SPAVAR,        
         
       3   LTOBJOP_016       CHAR(75), #########################################        
         
 /*       Infos identification : Uniquement si SPA.NOIDAFF > 0       */        
       3   IDENTI,        
        4   CDRSAFF          CHAR (1),        
        4   NOIDAFF          FIXED(7),        
        4   LTNMAFF          CHAR (30),        
        4   LTPRAFF          CHAR (15),        
        4   DANAIAF          PIC'(8)9', ########################################        
        4   CDSEXAF          CHAR (1),        
        4   CDLGEAF          CHAR (1),        
        4   LTRUEAF          CHAR (25),        
        4   NOHA1AF          BIN FIXED(15),        
        4   NOHA2AF          CHAR (04),        
        4   LTLOCAF          CHAR (25),        
        4   CDCPOAF          CHAR (06),        
        4   EMAILAF          CHAR (50),        
        4   CDTYPRO          CHAR(2),  ##########################################        
        4   CDGEPRO          CHAR(2),  ##########################################        
        4   DADEPER          PIC'(8)9', ########################################        
         
       3   CDTYPOP           CHAR(01), #########################################        
       3   CDLIMIT           CHAR(01), #########################################        
       3   CDBLOCK           CHAR(01), #########################################        
       3   NEWDEVI           CHAR(01), #########################################        
       3   NOIDDEV           CHAR(13), #########################################        
       3   DEVISAF           CHAR(13), #########################################        
       3   VERSDEV           FIXED(03),########################################        
       3   AUTORSO           CHAR(01), #########################################        
 /*   R_ETAPE = "A2016n" pour etre sr de raz la SPAVAR !!!          */        
       3   R_ETAPE           CHAR(06), #########################################        
       3   DAVALID           CHAR(10), #########################################        
       3   NBRELAN           PIC '9',  ##########################################        
         
       3   FILLSP2           CHAR(10),        
         
 /*       vehicule choisi en guidance WA2083                         */        
      2   SCENARIO_1,        
 /*       ===========                                                */        
       3   ANNCSTR           PIC'(4)9',   ########################################        
       3   MARDEBU           CHAR(40),    #########################################        
       3   TXTCARB           CHAR(08),    #########################################        
         
       3   NOIDMAR           FIXED(07),        
       3   NOIDMOD           FIXED(07),        
       3   NOIDTYP           FIXED(07),        
       3   LTMARQU           CHAR(40),        
       3   LTMODEL           CHAR(40),        
       3   LTTYPEV           CHAR(40),        
       3   NBRTRAN           FIXED(03),        
       3   NBTYPKW           FIXED(03),        
       3   CDTYOP3           CHAR(01),    ##########################################        
       3   CDTYDM3           CHAR(01),    ##########################################        
       3   PRIHTVA           FIXED(9,2),        
       3   NBRPORT           FIXED(03),        
       3   LTBOITE           CHAR(50),        
       3   LTCARBU           CHAR(50),        
       3   TYPCYLI           FIXED(05),        
       3   NBCVDIN           FIXED(03),        
       3   NBVITES           FIXED(03),        
       3   CDSPORT           CHAR(01),        
       3   POIDVID           FIXED(05),        
       3   TAXETMC           FIXED(9,2),        
       3   DAFINIM           PIC'(6)9',        
       3   CDECOV2           CHAR(01),     #########################################        
         
 /*       Options montes d'origine et accessoires supplementaires    */        
 /*       08.06.2010 New Tarifs : on ne passe plus sur cette page    */        
      2   SCENARIO_4,        
 /*       ===========                                                */        
 /*        
       3   TAB_OPT(100),        
        4   NOIDTXT          FIXED(07),        
        4   PRIOPTI          FIXED(09,2),        
 */        
 /*       les 14 accessoires/options e memoriser dans le devis    */        
       3   TAB_SUP(14),        
        4   LTOPTSU          CHAR(50),        
        4   PRIOPSU          FIXED(09,2),        
 /*       Options selectionnees                                      */        
 /*    3   SEL_OPT(100)      CHAR(01),          Y/N                  */        
       3   TOTALAC           FIXED(9,2),        
         
 /*       Infos conducteur                                           */        
      2   SCENARIO_5,        
 /*       ===========                                                */        
       3   DANAIPR           PIC'(8)9',      ############################        
       3   CDPOPRE           PIC'(4)9',        
       3   VACATVH           FIXED(9,2),        
       3   CDPOSRM           CHAR(1),        ##########################################        
       3   CDUSAVH           CHAR(1),        ##########################################        
       3   CDCDC26           CHAR(1),        ##########################################        
       3   CDASTMC           CHAR(1),        ##########################################        
       3   BOVHOCC           CHAR(1),        ##########################################        
       3   NBSINIS           PIC '99',       #########################################        
       3   DAPERMI           PIC'(8)9',      ########################################        
       3   BOAUTCP           CHAR(1),        ##########################################        
       3   CDTYPRO           CHAR(2),        ##########################################        
       3   CDGEPRO           CHAR(2),        ##########################################        
       3   BOHOREC           CHAR(1),        ##########################################        
       3   NBKMPAN           PIC'(6)9',      ########################################        
       3   AGEPREN           PIC'99',        ##########################################        
       3   STARTOK           CHAR(01),       #########################################        
 /*        Si CDJEUNE = 1=> voir donnees du scenario 8               */        
       3   CDJEUNE           PIC'9',         ###########################################        
       3   AGEPERM           PIC'99',        ##########################################        
         
 /*       Resultat devis auto                                        */        
      2   SCENARIO_6,        
 /*       ===========                                                */        
       3   CDPADIV           CHAR(02),       #########################################        
       3   CDBMDET           PIC'99',        ##########################################        
       3   CDCIBCL           CHAR(02),       #########################################        
       3   CDPROMO           CHAR(01),       #########################################        
                                             /* 1= eco + > 10.000kms */        
                                             /* 2= < 10.000kms       */        
                                             /* 3= < 10.000kms + eco */        
       3   NBKMAVH           PIC'999',       #########################################        
       3   RESULTAT_AUTO,        
        4   MTGARCI          FIXED(13,2),    ######################################        
        4   MTGACAS          FIXED(13,2),    ######################################        
        4   MTGACA1          FIXED(13,2),    ######################################        
        4   MTGAASS          FIXED(13,2),    ######################################        
         
 /*         mobility                                                 */        
        4   MTGAMOB          FIXED(13,2),    ######################################        
        4   MTGAMO1          FIXED(13,2),    ######################################        
        4   MTGAMO2          FIXED(13,2),    ######################################        
         
 /*         Montants mini omniums                                    */        
        4   MTGAOM1          FIXED(13,2),    ######################################        
        4   MTGAOM2          FIXED(13,2),    ######################################        
         
 /*         Montants des omniums pour chaque niveau de franchise     */        
        4   TB_OMNI(3),        
          5  MTGAOM3         FIXED(13,2),    ######################################        
          5  MTGAOM4         FIXED(13,2),    ######################################        
         
        4   TBPRIME(20),        
          5  CDTYGAR          CHAR(03),      ########################################        
          5  CDTFGAR          CHAR(02),      ########################################        
          5  NUVSTRF          PIC'99',       #########################################        
          5  MTPBMRD          FIXED(13,2),   #####################################        
         
       3   RESULTAT_AUTO_PROMO,        
        4   MTGARCI          FIXED(13,2),    ######################################        
        4   MTGACAS          FIXED(13,2),    ######################################        
        4   MTGACA1          FIXED(13,2),    ######################################        
        4   MTGAASS          FIXED(13,2),    ######################################        
         
 /*         mobility                                                 */        
        4   MTGAMOB          FIXED(13,2),    ######################################        
        4   MTGAMO1          FIXED(13,2),    ######################################        
        4   MTGAMO2          FIXED(13,2),    ######################################        
         
 /*         Montants mini omniums                                    */        
        4   MTGAOM1          FIXED(13,2),    ######################################        
        4   MTGAOM2          FIXED(13,2),    ######################################        
         
 /*         Montants des omniums pour chaque niveau de franchise     */        
        4   TB_OMNI(3),        
          5  MTGAOM3         FIXED(13,2),    ######################################        
          5  MTGAOM4         FIXED(13,2),    ######################################        
         
        4   TBPRIME(20),        
          5 CDTYGAR          CHAR(03),       #########################################        
          5 CDTFGAR          CHAR(02),       #########################################        
          5 NUVSTRF          PIC'99',        ##########################################        
          5 MTPBMRD          FIXED(13,2),    ######################################        
         
       3   RESULTAT_REM,        
        4   MTRMRCI          FIXED(13,2),    ######################################        
        4   MTRMVO1          FIXED(13,2),    ######################################        
        4   MTRMIN1          FIXED(13,2),    ######################################        
        4   MTRMBRI          FIXED(13,2),    ######################################        
        4   MTRMDM3          FIXED(13,2),    ######################################        
        4   MTRMDM4          FIXED(13,2),    ######################################        
         
        4   TBPRIME(10),        
          5 CDTYGAR          CHAR(03),       #########################################        
          5 CDTFGAR          CHAR(02),       #########################################        
          5 NUVSTRF          PIC'99',        ##########################################        
          5 MTPBMRD          FIXED(13,2),    ######################################        
         
 /*       Garanties choisies                                         */        
       3   SELECT_GAR,        
        4   CDSERCI          CHAR(01),       #########################################        
        4   CDSECAS          CHAR(01),       #########################################        
        4   CDSECA1          CHAR(01),       #########################################        
        4   CDSEASS          CHAR(01),       #########################################        
        4   CDTYPOM          CHAR(01),       #########################################        
                                             /* choisie : 1,2,3,4    */        
        4   CDNIVFR          CHAR(01),       #########################################        
                                             /* choisi 1,2,3         */        
                                             /* !!! si jeune         */        
        4   CDSEMOB          CHAR(01),       #########################################        
        4   CDSEMO1          CHAR(01),       #########################################        
         
 /*       pour la remorque                                           */        
        4   CDRMRCI          CHAR(01),       #########################################        
        4   CDRMVO1          CHAR(01),       #########################################        
        4   CDRMIN1          CHAR(01),       #########################################        
        4   CDRMBRI          CHAR(01),       #########################################        
        4   CDRMDM3          CHAR(01),       #########################################        
        4   CDRMDM4          CHAR(01),       #########################################        
         
 /*       Infos remorque                                             */        
      2   SCENARIO_7,        
 /*       ===========                                                */        
       3   LTMARRM           CHAR(15),        
       3   ANCSTRM           PIC'(4)9',        
       3   MTCATRM           FIXED(9,2),        
       3   MTACTRM           FIXED(9,2),        
       3   NUPDSRM           PIC'(5)9',        
         
 /*       Infos tarif jeune                                          */        
      2   SCENARIO_8,        
 /*       ===========                                                */        
       3   NBSINDM           PIC'99',        
       3   CDJEUFA           CHAR(01), #########################################        
       3   CDTY2PO           CHAR(01), #########################################        
       3   CDSTACO           CHAR(01), #########################################        
       3   CDENFCH           CHAR(01), #########################################        
       3   CDSTART           CHAR(01), #########################################        
         
 /*       souscription 1                                             */        
      2   SCENARIO_9,        
 /*       ===========                                                */        
       3   NUMCPIE           CHAR(5),  ##########################################        
       3   NOIDPOC           CHAR(15), #########################################        
       3   DAECHRC           CHAR(08), #########################################        
       3   CDRESRI           CHAR(01), #########################################        
       3   CDTYPRE           CHAR(01), #########################################        
       3   NUMSMRS           CHAR(06), #########################################        
         
 /*       souscription 2                                             */        
      2   SCENARIO_10,      #########################################################        
 /*       ===========                                                */        
       3   LTNOMCO           CHAR(30), #########################################        
       3   LTPRECO           CHAR(30), #########################################        
       3   DANAICO           CHAR(08), #########################################        
       3   LTEMPPR           CHAR(20), #########################################        
       3   CDTYPPR           CHAR(01), #########################################        
       3   CDCONAL           CHAR(1),  ##########################################        
       3   CDCONIV           CHAR(1),  ##########################################        
       3   CDCONFU           CHAR(1),  ##########################################        
       3   NBSINVO           PIC'9',   ###########################################        
       3   NBSINDM           PIC'9',   ###########################################        
       3   NBDEPER           PIC'9',   ###########################################        
         
 /*       souscription 3                                             */        
      2   SCENARIO_11,       #########################################################        
 /*       ===========                                                */        
       3   LTNMHA1           CHAR(30), #########################################        
       3   LTPRHA1           CHAR(30), #########################################        
       3   DANAIS1           PIC'(8)9',########################################        
       3   ANPERM1           CHAR(04), #########################################        
       3   CDQUHA1           CHAR(01), #########################################        
       3   LTQUHA1           CHAR(12), #########################################        
       3   LTNMHA2           CHAR(30), #########################################        
       3   LTPRHA2           CHAR(30), #########################################        
       3   DANAIS2           PIC'(8)9',########################################        
       3   ANPERM2           CHAR(04), #########################################        
       3   CDQUHA2           CHAR(01), #########################################        
       3   LTQUHA2           CHAR(12), #########################################        
       3   LTNMHA3           CHAR(30), #########################################        
       3   LTPRHA3           CHAR(30), #########################################        
       3   DANAIS3           PIC'(8)9',########################################        
       3   ANPERM3           CHAR(04), #########################################        
       3   CDQUHA3           CHAR(01), #########################################        
       3   LTQUHA3           CHAR(12), #########################################        
         
 /*       souscription 4                                             */        
      2   SCENARIO_12,       #########################################################        
 /*       ===========                                                */        
       3   NUPLQVH           CHAR(07), #########################################        
       3   LTCHAVH           CHAR(17), #########################################        
       3   NUPLQRM           CHAR(07), #########################################        
       3   LTCHARM           CHAR(17), #########################################        
       3   DAEFFRC           PIC'(8)9',########################################        
       3   DAEFFAU           PIC'(8)9',########################################        
       3   CDMODPA           CHAR(01), #########################################        
       3   NBKMCPT           FIXED(7), #########################################        
         
      2   FILLER             CHAR(112);        
         
 /********************************************************************/        
 /* CDPROMO : code promo permanente (nov 2009)                       */        
 /* 1 = 15% sur RC  et Omnium                                        */        
 /* si moins de 10000 kms/an                                         */        
 /*                                                                  */        
 /* 2 = 25% sur RC  et 15% sur Omnium                                */        
 /* si moins de 10000 kms/an ET vehicule eco                         */        
 /*                                                                  */        
 /* 3 = 10% sur RC                                                   */        
 /* si vehicule eco (et pas < 10000kms/an)                           */        
 /********************************************************************/        
             /* SPA VARIABLE                     */        
         
 /***************************/        
 /*    FICHIERS             */        
 /***************************/        
 DCL SYSPRINT FILE STREAM OUTPUT PRINT;        
         
 /***************************/        
 /*    DESCRIPTION DU MID   */        
 /***************************/        
 DCL 1 MID6 BASED(GA2016J.MID_PTR),        
 /* >>> HEADER DU MID         */        
      2   LL                  BIN FIXED(15),        
      2   Z1                  CHAR(1),        
      2   Z2                  CHAR(1),        
      2   HEADER,        
       3  TRANSAC             CHAR (08),  ############################        
       3  NOIDCLI             CHAR (08),  ############################        
       3  NOIDSCR             CHAR (04),  ############################        
       3  RFSIGNA             CHAR (08),  ############################        
       3  CDLGTRN             CHAR (01),  ############################        
       3  CDDVTRN             CHAR (01),  ############################        
       3  CLE                 CHAR (01),  ############################        
       3  CDOPTRN             CHAR (05),  ############################        
       3  CDIDSES             CHAR (01),  ############################        
       3  NODOACT             CHAR (02),  ############################        
       3  RESERVE             CHAR (07),  ############################        
 /*     HEADER DU MID     <<< */        
         
 /* ------------------------------------------------------------ */        
 /* DCL 1   MID6   UTILISE : WA2016                              */        
 /* ------------------------------------------------------------ */        
  /* INFOS_STAT */        
 /*-----------------------------------------------------------*/        
 /*   MID    UTILISE POUR LES STATISTIQUES DU SITE ETHIAS     */        
 /*-----------------------------------------------------------*/        
 /* CKI 17.02.06 : SI MFS => AJOUT DANS INPUT JSM328M LONG 59 */        
 /*   (VOIR PPH102)                                           */        
 /*-----------------------------------------------------------*/        
      2  CDLGPAG     CHAR (01),        
      2  CDENTREE    CHAR (01),        
      2  CDTYPVI     CHAR (07),        
      2  NOPGACT     CHAR (16),        
      2  NOPGDEM     CHAR (16),        
      2  NOIDUSR     PIC '(07)9',        
      2  NOSQUSR     PIC '99',        
      2  BANNER      CHAR (09),        
         
   2  CDSERCI          CHAR(1),      ##############################################        
   2  CDSECAS          CHAR(1),      ##############################################        
   2  CDSECA1          CHAR(1),      ##############################################        
   2  CDSEASS          CHAR(1),      ##############################################        
   2  CDTYPOM          CHAR(1),      ##############################################        
   2  CDNIVFR          CHAR(1),      ##############################################        
   2  CDSEMOB          CHAR(1),      ##############################################        
   2  CDSEMO1          CHAR(1),      ##############################################        
         
 /* pour la remorque ...                                           */        
   2  CDRMRCI          CHAR(1),      ##############################################        
   2  CDRMVO1          CHAR(1),      ##############################################        
   2  CDRMINI          CHAR(1),      ##############################################        
   2  CDRMBRI          CHAR(1),      ##############################################        
   2  CDRMDM4          CHAR(1),      ##############################################        
   2  CDRMDM3          CHAR(1);      ##############################################        
         
         
 /***************************/        
 /*    DESCRIPTION DU MOD   */        
 /***************************/        
 DCL 1 PAGE6 BASED(GA2016J.PAGE_PTR),        
 /* >>> HEADER PAGE 1       */        
      2  LL                 BIN FIXED(15),        
      2  ZZ                 BIN FIXED(15),        
      2  LPG                CHAR(02),        
      2  SCA                CHAR(02),        
      2  CDEXTOP            CHAR(08),  ##################################        
      2  NOIDSCR            CHAR(04),  ##################################        
      2  RFSIGNA            CHAR(08),  ##################################        
      2  CDLGTRN            CHAR(01),  ##################################        
      2  CDSCTRN            CHAR(01),  ##################################        
      2  LTSCTRN_A          CHAR(08),        
      2  LTSCTRN            CHAR(04),        
      2  LTOPTRN            CHAR(30),        
      2  CDOPTRN_A          CHAR(08),        
      2  CDOPTRN            CHAR(05),        
      2  BOMETRN            CHAR(01),        
      2  LTMETRN            CHAR(79),        
      2  RESERVE            CHAR(10),        
 /*     HEADER PAGE  1  <<< */        
 /* -------------------------------------------------------------- */        
 /* DCL 1   PAGE6     TRANSACTION: WA2016   WA2016   GA20166       */        
 /* -------------------------------------------------------------- */        
 /* >>> HEADER 2 MOD      */        
      2  LTRFCSR            CHAR (07),  ####################################        
      2  NURFCSI            CHAR (03),  ####################################        
      2  NURFCSJ            CHAR (03),  ####################################        
      2  LTRFPOS            CHAR (07),  ####################################        
      2  NURFPSI            CHAR (03),  ####################################        
      2  NURFPSJ            CHAR (03),  ####################################        
      2  CDBTENT            CHAR (10),  ####################################        
      2  LTOPCDE            CHAR (60),  ####################################        
      2  RSERVE2            CHAR (60),  ####################################        
 /*     HEADER 2 MOD  <<< */        
      2 NOIDUSR         PIC'(7)9',        
      2 NOSQUSR         PIC '99',        
      2 NEWUSER         CHAR(1),        
      2 CDENTREE        CHAR (01),        
      2 NOIDPAG         CHAR(07),        
         
   2  NOIDDEV          CHAR(13),     #############################################        
         
   2  CDSERCI          CHAR(1) ,     #############################################        
   2  MTGARCI          CHAR(10),     #############################################        
         
   2  CDSECAS          CHAR(1),      ##############################################        
   2  MTGACAS          CHAR(10),     #############################################        
         
   2  CDSECA1          CHAR(1),      ##############################################        
   2  MTGACA1          CHAR(10),     #############################################        
         
   2  CDSEASS          CHAR(1),      ##############################################        
   2  MTGAASS          CHAR(10),     #############################################        
         
   /* Type d'omnium choisie 1,2,3,4                                */        
   /* 1= mini omnium normale                                       */        
   /* 2= mini omnium normale plus                                  */        
   /* 3= omnium normale                                            */        
   /* 4= omnium normale plus                                       */        
   2  CDTYPOM          CHAR(1),      ##############################################        
         
   2  MTGAOM1          CHAR(10),     #############################################        
   2  MTGAOM2          CHAR(10),     #############################################        
         
 /* TABLEAU des omniums et omniums'plus'sur 3 niveaux de franchises */        
 /* --------------------------------------------------------------- */        
         
   2  CDNIVFR          CHAR(1),      ##############################################        
         
   2  TB_OMNI(03),        
    3  MTGAOM3         CHAR(10),     #############################################        
    3  MTGAOM4         CHAR(10),     #############################################        
    3  LTFRAGR         CHAR(5),      ##############################################        
    3  LTFRNAG         CHAR(5),      ##############################################        
         
   2  CDSEMOB          CHAR(1),      ##############################################        
   2  MTGAMOB          CHAR(10),     #############################################        
         
   2  CDSEMO1          CHAR(1),      ##############################################        
   2  MTGAMO1          CHAR(10),     #############################################        
         
 /* pour la remorque : si CDPOSRM = 'Y' uniquement                 */        
         
   2  CDPOSRM          CHAR(1),      ##############################################        
         
   2  CDRMRCI          CHAR(1),      ##############################################        
   2  MTRMRCI          CHAR(10),     #############################################        
   2  CDRMVO1          CHAR(1),      ##############################################        
   2  MTRMVO1          CHAR(10),     #############################################        
   2  CDRMINI          CHAR(1),      ##############################################        
   2  MTRMIN1          CHAR(10),     #############################################        
   2  CDRMBRI          CHAR(1),      ##############################################        
   2  MTRMBRI          CHAR(10),     #############################################        
   2  CDRMDM4          CHAR(1),      ##############################################        
   2  MTRMDM4          CHAR(10),     #############################################        
   2  CDRMDM3          CHAR(1),      ##############################################        
   2  MTRMDM3          CHAR(10),     #############################################        
         
 /* promo permanente sur RC si CDPROMO = 1,2,3                     */        
   2  CDPROMO          CHAR('1'),    ############################################        
         
   2  MTRCPRO          CHAR(10),     #############################################        
         
   2  MTOMPR1          CHAR(10),     #############################################        
         
   2  MTOMPR2          CHAR(10),     #############################################        
         
   2  TB_OMNI_PR(03),        
    3  MTOMPR3         CHAR(10),     #############################################        
    3  MTOMPR4         CHAR(10),     #############################################        
         
 /* SI JEUNE , on a seulement 2 niveaux de franchises  !!!         */        
   2  CDJEUNE          CHAR(01),    ############################################        
 /* SI VEHICULE DE PLUS DE 60000 EUROS                             */        
   2  CDLIMIT          CHAR(01),    ############################################        
 /* SI VEHICULE DE PLUS DE 6 ANS                                   */        
   2  CDP6ANS          CHAR(01),    ############################################        
         
 /* resume des choix (e droite de la page)                         */        
         
   2  LTMARQU          CHAR(40),     #############################################        
   2  LTLIBTYP         CHAR(40),     #############################################        
   2  LTNBRPORT        CHAR(2),        
   2  LTNBTYPKW        CHAR(3),        
   2  AGEPREN          CHAR(2),      ##############################################        
   2  VACATVH          CHAR(10),     #############################################        
         
 /* SI vehicule vert                                               */        
   2  CDVVERT          CHAR(01),    ############################################        
         
 /* Numero d'affilie si cookie doit etre cree                      */        
   2  NOIDAFF          CHAR(7),      ##############################################        
 /* Bonus malus                                                    */        
   2  VABMACT          CHAR(02);    ############################################        
         
 DCL  1  PAGE6TXT       CHAR(STG(PAGE6)) BASED(ADDR(PAGE6));        
         
         
 /***************************************/        
 /*    DESCRIPTION DU MESSAGE D'ERREUR  */        
 /***************************************/        
 DCL 1 PAGEER BASED(GA2016J.PAGEER_PTR),        
         
 /************************************************************/        
 /*    PAGE D'ERREUR                                         */        
 /************************************************************/        
      2  LL                 BIN FIXED(15),        
      2  ZZ                 BIN FIXED(15),        
      2  LPG                CHAR (1),        
      2  LTOPTRN            CHAR(30),        
      2  LTMETRN            CHAR(79),        
      2  CDLGTRN            CHAR(01),   ##############################        
      2  LTRTPG1            CHAR(79),   ##############################        
      2  LTRTPG2            CHAR(79),   ##############################        
      2  LTRTPG3            CHAR(79);   ##############################        
         
         
 /*================== CONSTANTES ================================*/        
         
 DCL ON                  BIT(1)     VALUE('1'B);        
 DCL OFF                 BIT(1)     VALUE('0'B);        
 DCL NUM                 CHAR(10)   VALUE('0123456789');        
 DCL NUMB                CHAR(11)   VALUE('0123456789 ');        
         
 /********************************************************************/        
 /*     DECLARATION DES CARACTERES POUR TABLE 274                    */        
 /********************************************************************/        
         
 DCL MINUS274 CHAR (41)        
              VALUE ('abcdefghijklmnopqrstuvwxyzeee');        
         
      /*CARACTERES MINUSCULES EN CODE PAGE 274*/        
 /********************************************************************/        
 /*     DECLARATION DES CARACTERES POUR TABLE 500                    */        
 /********************************************************************/        
         
 DCL MINUS500 CHAR (41)        
              VALUE ('abcdefghijklmnopqrstuvwxyz{}@\');        
         
      /*CARACTERES MINUSCULES EN CODE PAGE 500*/        
 /********************************************************************/        
 /*     DECLARATION DES CARACTERES POUR TABLE 274 ET TABLE 500       */        
 /********************************************************************/        
         
 DCL MINUS CHAR (41);        
 DCL MAJUS CHAR (41)        
           VALUE ('ABCDEFGHIJKLMNOPQRSTUVWXYZEEEEUUUAAAIIOOC');        
         
                        /*CARACTERES MAJUSCULES + DECLARATION DE MINUS*/        
         
 /*================== VARIABLES =================================*/        
         
 DCL ERREUR       STATIC BIT(1)     INIT('0'B);        
         
 DCL CDRTPGM_W    STATIC CHAR (09)  INIT ('');        
         
 DCL (IND,I, J, K ,X, Y) FIXED BIN (31);        
         
 /**************************************************        
 * AUTRES DECLARATIONS                             *        
 **************************************************/        
         
 /*================== VARIABLES =================================*/        
 DCL INTER_C1            CHAR(1);        
 DCL INTER_P1            PIC'9'       DEF INTER_C1;        
 DCL INTER_C2            CHAR(2);        
 DCL INTER_P2            PIC'(2)9'    DEF INTER_C2;        
 DCL INTER_Z2            PIC'Z9';        
 DCL INTER_C3            CHAR(3);        
 DCL INTER_P3            PIC'(3)9'    DEF INTER_C3;        
 DCL INTER_Z3            PIC'ZZ9';        
 DCL INTER_F3            FIXED(03);        
 DCL INTER_C4            CHAR(4);        
 DCL INTER_P4            PIC'(4)9'    DEF INTER_C4;        
 DCL INTER_F4            FIXED(04);        
 DCL INTER_C5            CHAR(5);        
 DCL INTER_P5            PIC'(5)9'    DEF INTER_C5;        
 DCL INTER_Z5            PIC'(4)Z9';        
 DCL INTER_F5            FIXED(05);        
 DCL INTER_C6            CHAR(6);        
 DCL INTER_P6            PIC'(6)9'    DEF INTER_C6;        
 DCL INTER_C7            CHAR(7);        
 DCL INTER_P7            PIC'(7)9'    DEF INTER_C7;        
 DCL INTER_Z7            PIC'ZZZZZZ9';        
 DCL INTER_F7            FIXED(07);        
 DCL INTER_C8            CHAR(8);        
 DCL INTER_P8            PIC'(8)9'    DEF INTER_C8;        
 DCL INTER_F8            FIXED(08);        
 DCL INTER_C9            CHAR(9);        
 DCL INTER_P9            PIC'(9)9'    DEF INTER_C9;        
 DCL INTER_F9            FIXED(09);        
 DCL INTER_P10           PIC'(10)9';        
 DCL INTER_C10           CHAR(10)     DEF INTER_P10;        
 DCL INTER_C11           CHAR(11);        
 DCL INTER_P11           PIC'(11)9'   DEF INTER_C11;        
 DCL INTER_F11           FIXED(11);        
 DCL INTER_F15           FIXED(15);        
 DCL W_NUPDSVH           PIC '99V,9';        
 DCL W_POIDS             FIXED(7,2);        
 DCL STAT_W              CHAR(08);        
 DCL DATES1              PIC '(7)9';        
 DCL 1   DATESR1 BASED(ADDR(DATES1)),        
      2  S               PIC '9',        
      2  AA              PIC '99',        
      2  MM              PIC '99',        
      2  JJ              PIC '99';        
         
 DCL DATES2              PIC '(8)9';        
 DCL 1   DATESR2 BASED(ADDR(DATES2)),        
      2  JJ              PIC '99',        
      2  MM              PIC '99',        
      2  AA              PIC '9999';        
 DCL CDRFPRT_W    STATIC CHAR (03)  INIT ('');        
         
         
 DCL TXT001 (3)          CHAR(1)     INIT (        
   'P'        
  ,'D'        
  ,'T'        
                                   );        
 DCL TXTTMC (3)          CHAR(6)     INIT (        
   'T.M.C.'        
  ,'B.I.V.'        
  ,'T.M.C.'        
  );        
         
 DCL W_TYGA                CHAR(03);        
 DCL W_TFGA                CHAR(02);        
 DCL W_NUVS                PIC '99';        
 DCL W_MTPB                FIXED(9);        
 DCL W_NURDDIV             FIXED(5,2);        
 DCL W_NUMJDIV             FIXED(5,2);        
 DCL SWGAR                 BIT(1) INIT('0'B);        
         
 DCL 1 SAVERETOUR_ID         STATIC,        
      2 INFOS_USER,        
        3 NOIDUSR            FIXED DEC(7),        
        3 NOSQUSR            FIXED DEC(3),        
      2  NOIDAFF             FIXED DEC(7),        
      2  LTNMAFF             CHAR (30),        
      2  CDRSAFF             CHAR (1),        
      2  CDSEXAF             CHAR (1),        
      2  CDLGEAF             CHAR (1),        
      2  CDCPOAF             CHAR (06),        
      2  LTLOCAF             CHAR (25),        
      2  NOHA1AF             BIN FIXED(15),        
      2  NOHA2AF             CHAR (04),        
      2  LTRUEAF             CHAR(25),        
      2  DANAIAF             FIXED DEC(10),        
      2  LTOPCOM             CHAR(30),        
      2  LTEMAIL             CHAR(50),        
      2  CDTYPRO             CHAR(02),        
      2  CDGEPRO             CHAR(02);        
         
 DCL 1 SAVERETOUR_CR         CHAR(06)  STATIC;        
         
 DCL 1 LTOBJOP_Z,        
      2  NOSQINT             CHAR(05), ######################################        
      2  NOSQSUJ             CHAR(05), ######################################        
      2  CDCNTVC             CHAR(03), ######################################        
      2  CDCAC               CHAR(15), ######################################        
      2  CDOPER              CHAR(03), ######################################        
      2  CDPRODU             CHAR(07), ######################################        
      2  CDTYPPR             CHAR(03), ######################################        
      2  CDLETTR             CHAR(03), ######################################        
      2  CDCANAL             CHAR(09), ######################################        
      2  CDTTAPP             CHAR(02), ######################################        
      2  NOSEQRB             CHAR(03), ######################################        
      2  CDSGGES             CHAR(01), ######################################        
      2  CDCOUGE             CHAR(04), ######################################        
      2  CDDEVIS             CHAR(11), ######################################        
      2  CDRSCTL             CHAR(01); ######################################        
 DCL 1  LTOBJOP_R   CHAR(STG(LTOBJOP_Z)) BASED(ADDR(LTOBJOP_Z));        
 /********************************************************************/        
 /*  DECLARATION DES PCB                                             */        
 /********************************************************************/        
 /*---------------------------------------------------------- PCBINIT */        
 /*------------------------------------------------------ END PCBINIT */        
 /*-------------------------------------------------------- FCTINIVA */        
    DCL  CEETDLI ENTRY OPTIONS (ASM);        
    DCL  PLITDLI ENTRY;        
    DCL  GN    CHAR(4)               VALUE ('GN  ');        
    DCL  GU    CHAR(4)               VALUE ('GU  ');        
    DCL  GHU   CHAR(4)               VALUE ('GHU ');        
    DCL  GNP   CHAR(4)               VALUE ('GNP ');        
    DCL  GHN   CHAR(4)               VALUE ('GHN ');        
    DCL  GHNP  CHAR(4)               VALUE ('GHNP');        
    DCL  GCV   CHAR(4)               VALUE ('GCV ');        
    DCL  ISRT  CHAR(4)               VALUE ('ISRT');        
    DCL  DLET  CHAR(4)               VALUE ('DLET');        
    DCL  REPL  CHAR(4)               VALUE ('REPL');        
    DCL  CHNG  CHAR(4)               VALUE ('CHNG');        
    DCL  LOG   CHAR(4)               VALUE ('LOG ');        
    DCL  STAT  CHAR(4)               VALUE ('STAT');        
    DCL  ROLL  CHAR(4)               VALUE ('ROLL');        
    DCL  ROLB  CHAR(4)               VALUE ('ROLB');        
    DCL  PURG  CHAR(4)               VALUE ('PURG');        
    DCL  CMD   CHAR(4)               VALUE ('CMD ');        
    DCL  GCMD  CHAR(4)               VALUE ('GCMD');        
    DCL  CHKP  CHAR(4)               VALUE ('CHKP');        
    DCL  XRST  CHAR(4)               VALUE ('XRST');        
    DCL  DEQ   CHAR(4)               VALUE ('DEQ ');        
    DCL  ONE   FIXED BIN (31)        VALUE (0001B);        
    DCL  TWO   FIXED BIN (31)        VALUE (0010B);        
    DCL  THREE FIXED BIN (31)        VALUE (0011B);        
    DCL  FOUR  FIXED BIN (31)        VALUE (0100B);        
    DCL  FIVE  FIXED BIN (31)        VALUE (0101B);        
    DCL  SIX   FIXED BIN (31)        VALUE (0110B);        
    DCL  SEVEN FIXED BIN (31)        VALUE (0111B);        
    DCL  EIGHT FIXED BIN (31)        VALUE (1000B);        
    DCL  NINE  FIXED BIN (31)        VALUE (1001B);        
 /*----------------------------------------------------- END FCTINIVA */        
 /*-------------------------------------------------------- TPPCBMSK */        
   DCL ALTPCB PTR;        
    DCL  1  ALT      BASED(ALTPCB),        
           2  LTERM                CHAR(8),        
           2  RESERVED             CHAR(2),        
           2  STATUS               CHAR(2),        
           2  DATEIMS              FIXED(7),        
           2  TIMEIMS              FIXED(7,1),        
           2  SEQUENCE             BIN FIXED(31),        
           2  MODNAME              CHAR(8),        
           2  USERFIELD            CHAR(8);        
 /*---------------------------------------------------- END TPPCBMSK */        
 ALTPCB= GA2016J.ALTPCB;        
         
 /*-------------------------------------------------------- DBPCBMSK */        
   DCL      DXI05PCB             PTR;        
    DCL  LKEY_DXI05 FIXED BINARY(31,0);        
         
    DCL  1  DXI05           BASED(DXI05PCB) ,        
         
           2  DBDNAME              CHAR(8),        
           2  SEGLEVEL             CHAR(2),        
           2  STATUS               CHAR(2),        
           2  PROCOPT              CHAR(4),        
           2  RESERVED             CHAR(4),        
           2  SEGNAME              CHAR(8),        
           2  KEYLEN               FIXED BIN(31),        
           2  SENSEG               FIXED BIN(31),        
           2  KEYAREA              CHAR(LKEY_DXI05 REFER(DXI05.KEYLEN));        
         
 /*---------------------------------------------------- END DBPCBMSK */        
 DXI05PCB= GA2016J.DXI05PCB;        
         
 /*-------------------------------------------------------- DBPCBMSK */        
   DCL      DC105PCB             PTR;        
    DCL  LKEY_DC105 FIXED BINARY(31,0);        
         
    DCL  1  DC105           BASED(DC105PCB) ,        
         
           2  DBDNAME              CHAR(8),        
           2  SEGLEVEL             CHAR(2),        
           2  STATUS               CHAR(2),        
           2  PROCOPT              CHAR(4),        
           2  RESERVED             CHAR(4),        
           2  SEGNAME              CHAR(8),        
           2  KEYLEN               FIXED BIN(31),        
           2  SENSEG               FIXED BIN(31),        
           2  KEYAREA              CHAR(LKEY_DC105 REFER(DC105.KEYLEN));        
         
 /*---------------------------------------------------- END DBPCBMSK */        
 DC105PCB= GA2016J.DC105PCB;        
         
 /*-------------------------------------------------------- DBPCBMSK */        
   DCL      DA215PCB             PTR;        
    DCL  LKEY_DA215 FIXED BINARY(31,0);        
         
    DCL  1  DA215           BASED(DA215PCB) ,        
         
           2  DBDNAME              CHAR(8),        
           2  SEGLEVEL             CHAR(2),        
           2  STATUS               CHAR(2),        
           2  PROCOPT              CHAR(4),        
           2  RESERVED             CHAR(4),        
           2  SEGNAME              CHAR(8),        
           2  KEYLEN               FIXED BIN(31),        
           2  SENSEG               FIXED BIN(31),        
           2  KEYAREA              CHAR(LKEY_DA215 REFER(DA215.KEYLEN));        
         
 /*---------------------------------------------------- END DBPCBMSK */        
 DA215PCB= GA2016J.DA215PCB;        
         
 /*-------------------------------------------------------- DBPCBMSK */        
   DCL      DA215$PCB             PTR;        
         
    DCL  LKEY_DA215$ FIXED BINARY(31,0);        
         
    DCL  1  DA215$           BASED(DA215$PCB) ,        
         
           2  DBDNAME              CHAR(8),        
           2  SEGLEVEL             CHAR(2),        
           2  STATUS               CHAR(2),        
           2  PROCOPT              CHAR(4),        
           2  RESERVED             CHAR(4),        
           2  SEGNAME              CHAR(8),        
           2  KEYLEN               FIXED BIN(31),        
           2  SENSEG               FIXED BIN(31),        
           2  KEYAREA              CHAR(LKEY_DA215$ REFER(DA215$.KEYLEN)        
 );        
 /*---------------------------------------------------- END DBPCBMSK */        
 DA215$PCB= GA2016J.DA215$PCB;        
         
 /*-------------------------------------------------------- DBPCBMSK */        
   DCL      DA2152PCB             PTR;        
         
    DCL  LKEY_DA2152 FIXED BINARY(31,0);        
         
    DCL  1  DA2152           BASED(DA2152PCB) ,        
         
           2  DBDNAME              CHAR(8),        
           2  SEGLEVEL             CHAR(2),        
           2  STATUS               CHAR(2),        
           2  PROCOPT              CHAR(4),        
           2  RESERVED             CHAR(4),        
           2  SEGNAME              CHAR(8),        
           2  KEYLEN               FIXED BIN(31),        
           2  SENSEG               FIXED BIN(31),        
           2  KEYAREA              CHAR(LKEY_DA2152 REFER(DA2152.KEYLEN)        
 );        
 /*---------------------------------------------------- END DBPCBMSK */        
 DA2152PCB= GA2016J.DA2152PCB;        
         
 /*-------------------------------------------------------- DBPCBMSK */        
   DCL      DA216PCB             PTR;        
    DCL  LKEY_DA216 FIXED BINARY(31,0);        
         
    DCL  1  DA216           BASED(DA216PCB) ,        
         
           2  DBDNAME              CHAR(8),        
           2  SEGLEVEL             CHAR(2),        
           2  STATUS               CHAR(2),        
           2  PROCOPT              CHAR(4),        
           2  RESERVED             CHAR(4),        
           2  SEGNAME              CHAR(8),        
           2  KEYLEN               FIXED BIN(31),        
           2  SENSEG               FIXED BIN(31),        
           2  KEYAREA              CHAR(LKEY_DA216 REFER(DA216.KEYLEN));        
         
 /*---------------------------------------------------- END DBPCBMSK */        
 DA216PCB= GA2016J.DA216PCB;        
         
 /*-------------------------------------------------------- DBPCBMSK */        
   DCL      DA223PCB             PTR;        
    DCL  LKEY_DA223 FIXED BINARY(31,0);        
         
    DCL  1  DA223           BASED(DA223PCB) ,        
         
           2  DBDNAME              CHAR(8),        
           2  SEGLEVEL             CHAR(2),        
           2  STATUS               CHAR(2),        
           2  PROCOPT              CHAR(4),        
           2  RESERVED             CHAR(4),        
           2  SEGNAME              CHAR(8),        
           2  KEYLEN               FIXED BIN(31),        
           2  SENSEG               FIXED BIN(31),        
           2  KEYAREA              CHAR(LKEY_DA223 REFER(DA223.KEYLEN));        
         
 /*---------------------------------------------------- END DBPCBMSK */        
 DA223PCB= GA2016J.DA223PCB;        
         
 /*-------------------------------------------------------- DBPCBMSK */        
   DCL      DEU02PCB             PTR;        
    DCL  LKEY_DEU02 FIXED BINARY(31,0);        
         
    DCL  1  DEU02           BASED(DEU02PCB) ,        
         
           2  DBDNAME              CHAR(8),        
           2  SEGLEVEL             CHAR(2),        
           2  STATUS               CHAR(2),        
           2  PROCOPT              CHAR(4),        
           2  RESERVED             CHAR(4),        
           2  SEGNAME              CHAR(8),        
           2  KEYLEN               FIXED BIN(31),        
           2  SENSEG               FIXED BIN(31),        
           2  KEYAREA              CHAR(LKEY_DEU02 REFER(DEU02.KEYLEN));        
         
 /*---------------------------------------------------- END DBPCBMSK */        
 DEU02PCB= GA2016J.DEU02PCB;        
         
 /* TDMTHO 20/02/2008 */        
 /*-------------------------------------------------------- DBPCBMSK */        
   DCL      DSM80PCB             PTR;        
    DCL  LKEY_DSM80 FIXED BINARY(31,0);        
         
    DCL  1  DSM80           BASED(DSM80PCB) ,        
         
           2  DBDNAME              CHAR(8),        
           2  SEGLEVEL             CHAR(2),        
           2  STATUS               CHAR(2),        
           2  PROCOPT              CHAR(4),        
           2  RESERVED             CHAR(4),        
           2  SEGNAME              CHAR(8),        
           2  KEYLEN               FIXED BIN(31),        
           2  SENSEG               FIXED BIN(31),        
           2  KEYAREA              CHAR(LKEY_DSM80 REFER(DSM80.KEYLEN));        
         
 /*---------------------------------------------------- END DBPCBMSK */        
 DSM80PCB= GA2016J.DSM80PCB;        
         
 /*-------------------------------------------------------- DBPCBMSK */        
   DCL      DS146PCB             PTR;        
    DCL  LKEY_DS146 FIXED BINARY(31,0);        
         
    DCL  1  DS146           BASED(DS146PCB) ,        
         
           2  DBDNAME              CHAR(8),        
           2  SEGLEVEL             CHAR(2),        
           2  STATUS               CHAR(2),        
           2  PROCOPT              CHAR(4),        
           2  RESERVED             CHAR(4),        
           2  SEGNAME              CHAR(8),        
           2  KEYLEN               FIXED BIN(31),        
           2  SENSEG               FIXED BIN(31),        
           2  KEYAREA              CHAR(LKEY_DS146 REFER(DS146.KEYLEN));        
         
 /*---------------------------------------------------- END DBPCBMSK */        
 DS146PCB= GA2016J.DS146PCB;        
         
 /*-------------------------------------------------------- DBPCBMSK */        
   DCL      DSM88PCB             PTR;        
    DCL  LKEY_DSM88 FIXED BINARY(31,0);        
         
    DCL  1  DSM88           BASED(DSM88PCB) ,        
         
           2  DBDNAME              CHAR(8),        
           2  SEGLEVEL             CHAR(2),        
           2  STATUS               CHAR(2),        
           2  PROCOPT              CHAR(4),        
           2  RESERVED             CHAR(4),        
           2  SEGNAME              CHAR(8),        
           2  KEYLEN               FIXED BIN(31),        
           2  SENSEG               FIXED BIN(31),        
           2  KEYAREA              CHAR(LKEY_DSM88 REFER(DSM88.KEYLEN));        
         
 /*---------------------------------------------------- END DBPCBMSK */        
 DSM88PCB= GA2016J.DSM88PCB;        
         
 /* TDMTHO 10/09/2008 */        
 /*-------------------------------------------------------- DBPCBMSK */        
   DCL      DSMB9PCB             PTR;        
    DCL  LKEY_DSMB9 FIXED BINARY(31,0);        
         
    DCL  1  DSMB9           BASED(DSMB9PCB) ,        
         
           2  DBDNAME              CHAR(8),        
           2  SEGLEVEL             CHAR(2),        
           2  STATUS               CHAR(2),        
           2  PROCOPT              CHAR(4),        
           2  RESERVED             CHAR(4),        
           2  SEGNAME              CHAR(8),        
           2  KEYLEN               FIXED BIN(31),        
           2  SENSEG               FIXED BIN(31),        
           2  KEYAREA              CHAR(LKEY_DSMB9 REFER(DSMB9.KEYLEN));        
         
 /*---------------------------------------------------- END DBPCBMSK */        
 DSMB9PCB= GA2016J.DSMB9PCB;        
         
 /********************************************        
 * GESTION DES ERREURS                       *        
 ********************************************/        
 DCL 1   MESS_TRACE  STATIC,                ################################################        
      2  LL_TR              BIN FIXED(15)   INIT(44),        
      2  ZZ_TR              BIN FIXED(15)   INIT(0),        
      2  TRACE              CHAR(40);        
 DCL 1   TB_TRACE(100) STATIC,        
      2  FLAG_TRACE         CHAR(01),        
      2  MSGE_TRACE         CHAR(40);        
 DCL     ITRACE             BIN FIXED (31)  STATIC;        
 DCL     ERR_MSG     STATIC CHAR(79);        
 DCL     PTRMSG             PTR;        
 DCL 1   ERR_DBA            BASED(PTRMSG),        
      2  FILL1              CHAR(12),        
      2  FILL2              CHAR(04),        
      2  DBD_DBA            CHAR(08),        
      2  FILL3              CHAR(08),        
      2  CALL_DBA           CHAR(10),        
      2  FILL4              CHAR(05),        
      2  KEY_DBA            CHAR(24),        
      2  FILL5              CHAR(05),        
      2  ST_DBA             CHAR(02),        
      2  FILL6              CHAR(01);        
 TB_TRACE(*)='';        
 ITRACE=0;        
 PTRMSG=ADDR(ERR_MSG);        
         
         
 /* VARIABLE PERMETTANT D'AFFICHER LA DATE ET L'HEURE DE COMPILATION */        
         
 /* VARIABLE MAX CHECK POINT : NBR MAX. DE LOTS AUTORISE AVANT CHKPT */        
 /*------------------------------------------------------------ DEBUG */        
 PT: PROC;        
 /******************************/        
 /*       MEMO TRACE           */        
 /******************************/        
 JWB001.TBTRACE_I = JWB001.TBTRACE_I+1;        
 IF JWB001.TBTRACE_I > 100        
    THEN DO;        
         JWB001.TBTRACE_I = 1;        
         JWB001.FLAG_TRACE(*) = '';        
         END;        
 JWB001.FLAG_TRACE(JWB001.TBTRACE_I) = '*';        
 JWB001.MSGE_TRACE(JWB001.TBTRACE_I) = TRACE;        
                               IF JWB001.CDTRACE > 0 THEN        
      PUT SKIP EDIT(TRACE)(A);        
 $END PT;        
         
 DEBUG: PROC;        
 /**************************************/        
 /*       PRINTING   TRACE             */        
 /**************************************/        
 DCL KT BIN FIXED(31);        
 PUT FILE(SYSPRINT) EDIT('- PROGRAM TRACE: -')        
                        (SKIP(3),A)        
                        ('------------------')        
                        (SKIP,A);        
 DO KT=1 TO 100;        
    IF JWB001.MSGE_TRACE(KT)^=''        
       THEN PUT FILE(SYSPRINT)        
            EDIT(JWB001.FLAG_TRACE(KT),        
                 JWB001.MSGE_TRACE(KT))        
                                   (SKIP,A,A);        
 END;        
 PUT FILE(SYSPRINT) EDIT('------------------')        
                        (SKIP,A);        
 $END DEBUG;        
 /*-------------------------------------------------------- END DEBUG */        
 /* %INCLUDE ERRORDL1;      ERREUR DE DATA BASE - 'ERR_DL1' + JWB001  */        
 /* %INCLUDE ERRORPLI;      ERREUR PLI - SANS IOPCB, AVEC JWB001      */        
 /*********************************************************************/        
 /* TDMXXX !   DATE   ! DESCRIPTION DE LA MODIF                       */        
 /* ------ ! -------- ! ----------------------------------------------*/        
 /* TDMOHL ! 22042002 ! AJOUT INCLUDE PCBINIVA,FCTINIVA               */        
 /* TDMOHL ! 28042003 ! CHANGE INCLUDE FCTINIVA -> FCTINIVA           */        
 /* TDMOHL ! 15112004 ! AJOUT DECLARATION XEU100                      */        
 /*********************************************************************/        
 ERRORMSG: PROC(ERRORNUMBER,LANGAGECODE,ERRORMESSAGE) REORDER;        
 /***********************************/        
 /* RECHERCHE D'UN MESSAGE D'ERREUR */        
 /***********************************/        
         
 DCL ERRORNUMBER    CHAR(*),        
     LANGAGECODE    PIC '9',        
     ERRORMESSAGE   CHAR(*);        
         
 DCL XEU100 ENTRY OPTIONS(FETCHABLE);        
         
 /*---------------------------------------------------------- PCBINIT */        
 /*------------------------------------------------------ END PCBINIT */        
 /*-------------------------------------------------------- FCTINIVA */        
    DCL  CEETDLI ENTRY OPTIONS (ASM);        
    DCL  PLITDLI ENTRY;        
    DCL  GN    CHAR(4)               VALUE ('GN  ');        
    DCL  GU    CHAR(4)               VALUE ('GU  ');        
    DCL  GHU   CHAR(4)               VALUE ('GHU ');        
    DCL  GNP   CHAR(4)               VALUE ('GNP ');        
    DCL  GHN   CHAR(4)               VALUE ('GHN ');        
    DCL  GHNP  CHAR(4)               VALUE ('GHNP');        
    DCL  GCV   CHAR(4)               VALUE ('GCV ');        
    DCL  ISRT  CHAR(4)               VALUE ('ISRT');        
    DCL  DLET  CHAR(4)               VALUE ('DLET');        
    DCL  REPL  CHAR(4)               VALUE ('REPL');        
    DCL  CHNG  CHAR(4)               VALUE ('CHNG');        
    DCL  LOG   CHAR(4)               VALUE ('LOG ');        
    DCL  STAT  CHAR(4)               VALUE ('STAT');        
    DCL  ROLL  CHAR(4)               VALUE ('ROLL');        
    DCL  ROLB  CHAR(4)               VALUE ('ROLB');        
    DCL  PURG  CHAR(4)               VALUE ('PURG');        
    DCL  CMD   CHAR(4)               VALUE ('CMD ');        
    DCL  GCMD  CHAR(4)               VALUE ('GCMD');        
    DCL  CHKP  CHAR(4)               VALUE ('CHKP');        
    DCL  XRST  CHAR(4)               VALUE ('XRST');        
    DCL  DEQ   CHAR(4)               VALUE ('DEQ ');        
    DCL  ONE   FIXED BIN (31)        VALUE (0001B);        
    DCL  TWO   FIXED BIN (31)        VALUE (0010B);        
    DCL  THREE FIXED BIN (31)        VALUE (0011B);        
    DCL  FOUR  FIXED BIN (31)        VALUE (0100B);        
    DCL  FIVE  FIXED BIN (31)        VALUE (0101B);        
    DCL  SIX   FIXED BIN (31)        VALUE (0110B);        
    DCL  SEVEN FIXED BIN (31)        VALUE (0111B);        
    DCL  EIGHT FIXED BIN (31)        VALUE (1000B);        
    DCL  NINE  FIXED BIN (31)        VALUE (1001B);        
 /*----------------------------------------------------- END FCTINIVA */        
         
 /*******************************************/        
 /* DB DES TABLES                           */        
 /*******************************************/        
 /*-------------------------------------------------------- DBPCBMSK */        
   DCL      DBTABPCB             PTR;        
    DCL  LKEY_TAB FIXED BINARY(31,0);        
         
    DCL  1  TAB           BASED(DBTABPCB) ,        
         
           2  DBDNAME              CHAR(8),        
           2  SEGLEVEL             CHAR(2),        
           2  STATUS               CHAR(2),        
           2  PROCOPT              CHAR(4),        
           2  RESERVED             CHAR(4),        
           2  SEGNAME              CHAR(8),        
           2  KEYLEN               FIXED BIN(31),        
           2  SENSEG               FIXED BIN(31),        
           2  KEYAREA              CHAR(LKEY_TAB REFER(TAB.KEYLEN));        
         
 /*---------------------------------------------------- END DBPCBMSK */        
 DBTABPCB = JWB001.DBTABLE.DBTABPCB;        
         
 /******************/        
 /* SEGMENT TABLE  */        
 /******************/        
 /* NRB - TDMOHL - GENERATION LE 22/05/2007 - 14:28        LGTH=00274 */        
 /*****************************************************/        
 /*  TABLE MAIN :                                     */        
 /*****************************************************/        
         
 DCL  1 TBGI_MAIN ,                         #############################################################        
                                            /*TB!  !DPH01   !PHTABLE  */        
                                            /*TB!  !DRH01   !RHTABLE  */        
                                            /*TB!  !DND01   !NDTAB    */        
                                            /*TB!  !DSM25   !C1TAB    */        
                                            /*TB!  !DDO03   !C1TAB    */        
                                            /*TB!  !DIB15   !C1TAB    */        
                                            /*TB!  !DCR01   !CRTABLE  */        
                                            /*TB!  !DLG01   !TABLE    */        
                                            /*TB!  !DCT01   !CTTABLE  */        
                                            /*TB!  !DC201   !C2TABLE  */        
                                            /*TB!  !DCI02   !CITAB    */        
                                            /*TB!  !DSMC0   !C1TAB    */        
                                            /*TB!  !DAV01   !AVTABLE  */        
                                            /*TB!  !DCD01   !CDTAB    */        
                                            /*TB!  !DCL01   !CLTABLE  */        
                                            /*TB!  !DCP11   !CPTAB    */        
                                            /*TB!  !DCO39   !COTAB    */        
                                            /*TB!  !DC101   !C1TAB    */        
                                            /*TB!  !DC102   !C1TAB    */        
                                            /*TB!  !DC103   !C1TAB    */        
                                            /*TB!  !DC301   !C3TABLE  */        
                                            /*TB!  !DDP01   !DPTAB    */        
                                            /*TB!  !DGA01   !GATABLE  */        
                                            /*TB!  !DGI01   !GITABLE  */        
                                            /*TB!  !DGZ02   !GZTABLE  */        
                                            /*TB!  !DLP03   !LPTABLE  */        
                                            /*TB!  !DNC02   !NCTABLE  */        
                                            /*TB!  !DPS01   !PSTABLE  */        
                                            /*TB!  !DP101   !P1TABLE  */        
                                            /*TB!  !DRD01   !RDTABLE  */        
                                            /*TB!  !DSP01   !SPTABLE  */        
                                            /*TB!  !DSW02   !SWTAB    */        
                                            /*TB!  !DXI01   !XITABLE  */        
                                            /*TB!  !DFP24   !FPTABLE  */        
       2 TBTXCOD  CHAR(4),                  ######################################################        
       2 TBTXA01  CHAR(20),                 #####################################################        
       2 TBTXL01  CHAR(250);                ####################################################        
         
         
    DCL 1 SSA_C1TAB,        
         2 FIL1         CHAR (8)       INIT ('C1TAB  '),        
         2 FIL2         CHAR (1)       INIT ('*'),        
         2 CC           CHAR (3)       INIT ('---'),        
         2 PAR          CHAR (1)       INIT ('('),        
         2 FIL3         CHAR (8)       INIT ('KC1TAB  '),        
         2 OPER         CHAR (2)       INIT ('= '),        
         2 VALUE        CHAR (24),        
         2 FIL4         CHAR (1)       INIT (')');        
         
 /* NRB - TDMVAN - Generation le 11/04/2000 - 09:20        Lgth=00274 */        
 /******************************************        
 *  SEGMENT TABLE                          *        
 *  MESSAGES D'ERREUR                      *        
 ******************************************/        
         
 DCL  1 TBGI_T004 ,                    #############################################################        
 /*K*/ 2 TBTXCOD  CHAR(4),             /*CD!  !CODE TABLE             */        
 /*K*/ 2 TBTXA01  CHAR(20),            /*CD!  !ARGUMENT DE LA TABLE   */        
       2 LTMEERR(3)  CHAR(66),         ##################################################        
       2 $FILLER$ CHAR(052);           ####################################################        
 /* NRB - TDMOHL - GENERATION LE 17/10/2006 - 09:33        LGTH=00274 */        
 /*-------------------------------------------------------------------*/        
 /*-- DICTIONNAIRE DES MESSAGES D'ERREUR                              */        
 /*-------------------------------------------------------------------*/        
 DCL  1 TBGI_W004 ,                  #############################################################        
                                     /*TB!  !DSM25   !C1TAB           */        
                                     /*TB!  !DCR01   !CRTABLE         */        
                                     /*TB!  !DPH01   !PHTABLE         */        
                                     /*TB!  !DDO03   !C1TAB           */        
                                     /*TB!  !DLG01   !TABLE           */        
                                     /*TB!  !DND01   !NDTAB           */        
                                     /*TB!  !DRH01   !RHTABLE         */        
                                     /*TB!  !DC201   !C2TABLE         */        
                                     /*TB!  !AEDBTAB1!TABLE           */        
                                     /*TB!  !DGZ02   !GZTABLE         */        
                                     /*TB!  !DC301   !C3TABLE         */        
                                     /*--!  !L'06 ERRORNUMBER         */        
 /*K*/ 2 TBTXCOD  CHAR(4),           /*CD!  !CODE TABLE               */        
 /*K*/ 2 TBTXA01  CHAR(20),          /*CD!  !CODE MSG = KKPPPNNNIL    */        
                                     /*--!  !KK  = PROJET             */        
                                     /*--!  !PPP = NO PROGRAMME       */        
                                     /*--!  !NNN = NO MESSAGE         */        
                                     /*--!  !I   = NO SCENARIO        */        
                                     /*--!  !L   = LANGUE (F/N/A/E)   */        
       2 LTMEERR  CHAR(79),          #####################################################        
       2 FILLER  CHAR(170),          #####################################################        
       2 CDEGARG  CHAR(1);           ######################################################        
         
 /*******************************************/        
 /* AUTRES DECLARATIONS                     */        
 /*******************************************/        
 DCL CLAUSE        CHAR(7);        
 DCL METAPCB_W     PTR;        
 DCL CDDFSEG_W     CHAR (8);        
 DCL CDTABLE_W     CHAR (4);        
 DCL CDLGTRN_W     PIC '9';        
 DCL (I,J,L,M,K)   FIXED BIN(31);        
         
 /* SAUVER L'ENVIRONNEMENT */        
         
 METAPCB_W = IEU001.METAPCB;        
 CDDFSEG_W = IEU001.CDDFSEG;        
 CDLGTRN_W = LANGAGECODE;        
         
 IEU001.METAPCB = JWB001.DBTABLE.METAPCB;        
 SSA_C1TAB.FIL1 = JWB001.DBTABLE.LTSGTAB;        
 SSA_C1TAB.FIL3 = 'K' !! SUBSTR(JWB001.DBTABLE.LTSGTAB,1,7);        
 IEU001.CDDFSEG = JWB001.DBTABLE.CDDFTAB;        
         
 ERRORMESSAGE = '';        
 IF ERRORNUMBER = '' THEN        
      ERRORNUMBER = 'UNSPECI';        
         
 DO WHILE (ERRORMESSAGE = '');        
 CDTABLE_W = SUBSTR(JWB001.DBTABLE.CDDFTAB,4,4);        
 IF CDTABLE_W = 'W004' THEN        
      DO;        
      SSA_C1TAB.VALUE = 'W004' !! SUBSTR(ERRORNUMBER,1,9)        
                               !! TRANSLATE(CDLGTRN_W,'FNAE','1234');        
      CALL XEU100(IEU001,FOUR,GU,TAB,TBGI_W004,SSA_C1TAB);        
      END;        
 ELSE DO;        
      SSA_C1TAB.VALUE = CDTABLE_W !! ERRORNUMBER;        
      CALL XEU100(IEU001,FOUR,GU,TAB,TBGI_T004,SSA_C1TAB);        
      END;        
         
 SELECT (IEU001.CDRTPGM);        
   WHEN('  ')        
     IF CDTABLE_W = 'W004' THEN        
          DO;        
          ERRORMESSAGE = TBGI_W004.LTMEERR;        
          IF ERRORMESSAGE = '' THEN        
               ERRORMESSAGE = ERRORNUMBER;        
          END;        
     ELSE DO;        
          IF CDLGTRN_W < 1 ! CDLGTRN_W > 3 THEN        
               ERRORMESSAGE = TBGI_T004.LTMEERR(1);        
          ELSE IF TBGI_T004.LTMEERR(CDLGTRN_W) = '' THEN        
                    ERRORMESSAGE = TBGI_T004.LTMEERR(1);        
               ELSE ERRORMESSAGE = TBGI_T004.LTMEERR(CDLGTRN_W);        
          IF ERRORMESSAGE = '' THEN        
               ERRORMESSAGE = ERRORNUMBER;        
          END;        
   WHEN ('DBAPGE')        
             DO;        
             IF CDTABLE_W = 'W004' THEN        
                  DO;        
                  IF CDLGTRN_W = 1 THEN        
                       ERRORMESSAGE = ERRORNUMBER;        
                  ELSE CDLGTRN_W = 1;        
                  END;        
             ELSE ERRORMESSAGE = ERRORNUMBER;        
             IEU001.CDRTPGM = ' ';        
             END;        
   OTHERWISE DO;        
             CALL ERR_DL1;        
             RETURN;        
             END;        
   END;        
 END;        
         
 /* RETABLIR L'ENVIRONNEMMENT */        
         
 IEU001.METAPCB = METAPCB_W;        
 IEU001.CDDFSEG = CDDFSEG_W;        
         
 L=LENGTH(ERRORMESSAGE);        
 M=L;        
 K=INDEX(ERRORMESSAGE,'#');        
 IF K^=0 & SUBSTR(ERRORMESSAGE,K+7)=''  THEN        
      DO;        
      CLAUSE=SUBSTR(ERRORMESSAGE,K,7);        
      J=INDEX(CLAUSE,' ');        
      IF J=0 & VERIFY(SUBSTR(ERRORMESSAGE,K+8,L-(K+8)),' ')=0 THEN        
           DO;        
           SPA.TBFCACT(2)='1'B;        
           SPA.LTOPCOM=SUBSTR(CLAUSE,2,2)!!'#' !!SUBSTR(CLAUSE,4);        
           SUBSTR(ERRORMESSAGE,K)='';        
           DO J=L TO 1 BY -1        
              WHILE(SUBSTR(ERRORMESSAGE,J,1)=' ');        
           END;        
           IF JWB001.CDEVCLI = '3' THEN        
                SUBSTR(ERRORMESSAGE,J+1)=' (F2:...)'!!HEX3F;        
           ELSE SUBSTR(ERRORMESSAGE,J+1)=' (F2:...)';        
           END;        
      END;        
 ELSE IF JWB001.CDEVCLI = '3' THEN        
           DO;        
           DO I=L BY -1 TO 1 WHILE(SUBSTR(ERRORMESSAGE,I,1) = ' ');        
              M=M-1;                                                            
           END;                                                                 
           SELECT(M);                                                           
             WHEN(0)ERRORMESSAGE=HEX403F;                                       
             WHEN(L);                                                           
             OTHER SUBSTR(ERRORMESSAGE,M+1)=HEX3F;                              
           END;                                                                 
           END;        
 $END ERRORMSG;        
                        /* RECHERCHE MESSAGE D'ERREUR DANS DB TABLES */        
         
 ERR_DL1:PROC REORDER;        
 /********************************************************************/        
 /*                                                                  */        
 /*                PROCEDURE DL1 : ERREUR DATA BASE                  */        
 /*  COPIE CKI DE FFWP.P.COPY(ERRORDL1)                              */        
 /********************************************************************/        
 JWB001.CDRTPGM = 'ERR_DL1';        
 PUT PAGE EDIT('A20166',  ' - VERSION DU : * 18.AUG.10 16.17.22 * - ',        
         
               'LAST SV CALL = ',JWB001.LSTCALL,        
               'LAST DB CALL = ',JWB001.LSTSERV)        
              (SKIP,A, A,(2) (SKIP,A,A));        
 PUT SKIP DATA(TRACE);        
 PUT SKIP DATA(SPAVAR);        
 PUT SKIP DATA(SCENARIO_5);        
         
         
 CALL DEBUG;        
         
 $END ERR_DL1;        
 /*-------------------------------------------------------------------*/        
 /*  COPIE CKI DE FFWP.P.COPY(ERRORPLI)                              */        
 ON ERROR SNAP        
    BEGIN ;        
          ON ERROR SYSTEM;        
          PUT PAGE EDIT('A20166', ' - VERSION DU : * 18.AUG.10 16.17.22        
 * - ',        
          ' ON ERROR CONDITION',        
          'ONCODE    = ',ONCODE,        
          'ONLOC     = ',ONLOC,        
          'ONSOURCE  = ',ONSOURCE)        
          (SKIP,A,A,        
           SKIP,A,        
           SKIP,A,F(5),        
           SKIP,A,A(10),        
           SKIP,A,A);        
         
           PUT SKIP EDIT('LAST SERV CALL = ',JWB001.LSTCALL,        
                         'LAST DB2  CALL = ',JWB001.LSTSERV)        
              (SKIP,A,A);        
 PUT SKIP DATA(TRACE);        
 PUT SKIP DATA(SPAVAR);        
 PUT SKIP DATA(SCENARIO_5);        
         
         
          CALL DEBUG;        
          SIGNAL ERROR;        
    END;        
 /*-----------------------------------------------*/        
         
 /*******************************        
 *     RACINE DU SCENARIO       *        
 *******************************/        
         
 IF SPA.CDPGTRN ='5' THEN        
  DO;        
   MINUS = MINUS500;        
  END;        
 ELSE        
  DO;        
   MINUS = MINUS274;        
  END;        
         
 IF JWB001.CDTRACE=9        
 THEN DO;        
   PUT SKIP EDIT('--------------------------')(A);        
   PUT SKIP EDIT('!RACINE/CDRTPGM:'!!JWB001.CDRTPGM,'!')(A);        
   PUT SKIP EDIT('!RACINE/BOACCES:',SCENARI.TBSCENA(2),'        !')(A);        
         
   PUT SKIP EDIT('!RACINE/BOVALID:',SCENARI.TBSCENA(4),'        !')(A);        
         
   PUT SKIP EDIT('!RACINE/BOUPDTE:',SCENARI.TBSCENA(7),'        !')(A);        
         
   PUT SKIP EDIT('!RACINE/BOSUITE:',SCENARI.TBSCENA(8),'        !')(A);        
         
   PUT SKIP EDIT('!RACINE/BOSWTCH:',SCENARI.TBSCENA(9),'        !')(A);        
         
   PUT SKIP EDIT('!RACINE/BOSCROL:',SCENARI.TBSCENA(5),'        !')(A);        
         
   PUT SKIP EDIT('!RACINE/BOERRAC:',SCENARI.TBSCENA(3),'        !')(A);        
         
   PUT SKIP EDIT('!RACINE/BOREPOS:',SCENARI.TBSCENA(6),'        !')(A);        
         
   PUT SKIP EDIT('--------------------------')(A);        
 END;        
         
 SELECT(JWB001.LTNMMTH);        
    WHEN('SCENA_INIT')   CALL F1;        
    WHEN('CTX_GET')      CALL F2;        
    WHEN('CTX_SAVE')     CALL F3;        
    WHEN('CTRL_ACCES')   CALL F4;        
    WHEN('PAGE_DFT')     CALL F5;        
    WHEN('PAGE_INIT')    CALL F6;        
    WHEN('PAGE_SCROLL')  CALL F7;        
    WHEN('PAGE_XML')     CALL F8;        
    WHEN('PAGE9_XML')    CALL F9;        
    WHEN('VALID_SYN')    CALL FA;        
    WHEN('VALID_CTX')    CALL FB;        
    WHEN('UPDATE_DB')    CALL FC;        
    WHEN('SWITCH_SC')    CALL FD;        
    WHEN('TEST_SCROLL')  CALL FE;        
    WHEN('CTX_CLEAR')    CALL FF;        
    WHEN('TEST_PF1 ')    CALL FG;        
    WHEN('TEST_BOUTON')  CALL FH;        
    OTHER        
       DO;        
       JWB001.CDRTPGM = 'A20166' !! '01';        
       IF JWB001.CDTRACE >= 3 THEN        
         DO;        
           PUT SKIP LIST( '!!! NOM DE METHODE NON REPERTORIE !!!');        
           PUT SKIP LIST('CONTENU DE L''INTERFACE GA20166:');        
           PUT SKIP EDIT('METHODE =',JWB001.LTNMMTH) (A,A);        
         END;        
       END;        
 END;        
         
 IF JWB001.CDTRACE=9        
 THEN DO;        
   PUT SKIP EDIT('------------------------------')(A);        
   PUT SKIP EDIT('!END RACINE/CDRTPGM:'!!JWB001.CDRTPGM,'!')(A);        
   PUT SKIP EDIT('!END RACINE/BOACCES:',SCENARI.TBSCENA(2),'        !')(        
 A);        
   PUT SKIP EDIT('!END RACINE/BOVALID:',SCENARI.TBSCENA(4),'        !')(        
 A);        
   PUT SKIP EDIT('!END RACINE/BOUPDTE:',SCENARI.TBSCENA(7),'        !')(        
 A);        
   PUT SKIP EDIT('!END RACINE/BOSUITE:',SCENARI.TBSCENA(8),'        !')(        
 A);        
   PUT SKIP EDIT('!END RACINE/BOSWTCH:',SCENARI.TBSCENA(9),'        !')(        
 A);        
   PUT SKIP EDIT('!END RACINE/BOSCROL:',SCENARI.TBSCENA(5),'        !')(        
 A);        
   PUT SKIP EDIT('!END RACINE/BOERRAC:',SCENARI.TBSCENA(3),'        !')(        
 A);        
   PUT SKIP EDIT('!END RACINE/BOREPOS:',SCENARI.TBSCENA(6),'        !')(        
 A);        
   PUT SKIP EDIT('------------------------------')(A);        
 END;        
 /*-----------------------------------------------*/        
         
 F1: PROC REORDER ;        
     TRACE = 'GA20166 ===> ' !! 'F1';        
         
     CALL PT;        
 /**********************************************        
 * VERIFIER L'EXISTENCE DU SCENARIO            *        
 * CHARGER LA ZONE DE COMMUNICATION 'WKSCENA'  *        
 **********************************************/        
 CDRTPGM_W = '';        
 ERREUR    = OFF;        
         
 IF JWB001.CDTRACE >= 3 THEN        
   DO;        
     PUT SKIP LIST('SPA.CDOPTRN =',SPA.CDOPTRN);        
     PUT SKIP LIST('SPA.CDEVTRN =',SPA.CDEVTRN);        
     PUT SKIP LIST('SPA.INFOS_USER.CDMSETH:',        
                    SPA.INFOS_USER.CDMSETH);        
     PUT SKIP LIST('SPA.INFOS_USER.CDTYSOU:',        
                    SPA.INFOS_USER.CDTYSOU);        
     PUT SKIP LIST('SPAVAR.IDENTI.NOIDAFF:',SPAVAR.IDENTI.NOIDAFF);        
     PUT SKIP LIST('SPAVAR.IDENTI.DANAIAF:',SPAVAR.IDENTI.DANAIAF);        
     PUT SKIP LIST('SPAVAR.IDENTI.EMAILAF:',SPAVAR.IDENTI.EMAILAF);        
     PUT SKIP LIST('SPA.NOIDAFF:',SPA.NOIDAFF);        
     PUT SKIP LIST('SPA.NOPPAFF:',SPA.NOPPAFF);        
     PUT SKIP LIST('SPAVAR.LTOBJOP_016=',SPAVAR.LTOBJOP_016);        
     PUT SKIP LIST('SPAVAR.CDBLOCK=',SPAVAR.CDBLOCK);        
     PUT SKIP LIST('SPAVAR.CDTYPOP=',SPAVAR.CDTYPOP);        
     PUT SKIP LIST('SPAVAR.NOIDDEV=',SPAVAR.NOIDDEV);        
     PUT SKIP LIST('SCENARIO_1.NOIDMAR=',SCENARIO_1.NOIDMAR);        
     PUT SKIP LIST('SCENARIO_1.NOIDMOD=',SCENARIO_1.NOIDMOD);        
     PUT SKIP LIST('SCENARIO_1.NOIDTYP=',SCENARIO_1.NOIDTYP);        
     PUT SKIP LIST('SCENARIO_1.LTMARQU=',SCENARIO_1.LTMARQU);        
     PUT SKIP LIST('SCENARIO_1.LTMODEL=',SCENARIO_1.LTMODEL);        
     PUT SKIP LIST('SCENARIO_1.LTTYPEV=',SCENARIO_1.LTTYPEV);        
     PUT SKIP LIST('SCENARIO_1.NBRTRAN=',SCENARIO_1.NBRTRAN);        
     PUT SKIP LIST('SCENARIO_1.NBTYPKW=',SCENARIO_1.NBTYPKW);        
     PUT SKIP LIST('SCENARIO_1.CDTYDM3=',SCENARIO_1.CDTYDM3);        
     PUT SKIP LIST('SCENARIO_1.CDTYOP3=',SCENARIO_1.CDTYOP3);        
     PUT SKIP LIST('SCENARIO_1.PRIHTVA=',SCENARIO_1.PRIHTVA);        
     PUT SKIP LIST('SCENARIO_1.TYPCYLI=',SCENARIO_1.TYPCYLI);        
     PUT SKIP LIST('SCENARIO_1.NBCVDIN=',SCENARIO_1.NBCVDIN);        
     PUT SKIP LIST('SCENARIO_1.LTBOITE=',SCENARIO_1.LTBOITE);        
     PUT SKIP LIST('SCENARIO_1.LTCARBU=',SCENARIO_1.LTCARBU);        
     PUT SKIP LIST('SCENARIO_1.NBVITES=',SCENARIO_1.NBVITES);        
     PUT SKIP LIST('SCENARIO_1.CDSPORT=',SCENARIO_1.CDSPORT);        
     PUT SKIP LIST('SCENARIO_1.POIDVID=',SCENARIO_1.POIDVID);        
     PUT SKIP LIST('SCENARIO_1.TAXETMC=',SCENARIO_1.TAXETMC);        
     PUT SKIP LIST('SCENARIO_1.DAFINIM=',SCENARIO_1.DAFINIM);        
     PUT SKIP LIST('SCENARIO_1.CDECOV2=',SCENARIO_1.CDECOV2);        
     PUT SKIP LIST('SCENARIO_5.DANAIPR=',SCENARIO_5.DANAIPR);        
     PUT SKIP LIST('SCENARIO_5.CDPOPRE=',SCENARIO_5.CDPOPRE);        
     PUT SKIP LIST('SCENARIO_5.VACATVH=',SCENARIO_5.VACATVH);        
     PUT SKIP LIST('SCENARIO_5.CDASTMC=',SCENARIO_5.CDASTMC);        
     PUT SKIP LIST('SCENARIO_5.CDTYPRO=',SCENARIO_5.CDTYPRO);        
     PUT SKIP LIST('SCENARIO_5.CDGEPRO=',SCENARIO_5.CDGEPRO);        
     PUT SKIP LIST('SCENARIO_5.BOVHOCC=',SCENARIO_5.BOVHOCC);        
     PUT SKIP LIST('SCENARIO_5.CDUSAVH=',SCENARIO_5.CDUSAVH);        
     PUT SKIP LIST('SCENARIO_5.NBSINIS=',SCENARIO_5.NBSINIS);        
     PUT SKIP LIST('SCENARIO_5.DAPERMI=',SCENARIO_5.DAPERMI);        
     PUT SKIP LIST('SCENARIO_5.BOAUTCP=',SCENARIO_5.BOAUTCP);        
     PUT SKIP LIST('SCENARIO_5.BOHOREC=',SCENARIO_5.BOHOREC);        
     PUT SKIP LIST('SCENARIO_5.NBKMPAN=',SCENARIO_5.NBKMPAN);        
     PUT SKIP LIST('SCENARIO_5.CDCDC26=',SCENARIO_5.CDCDC26);        
     PUT SKIP LIST('SCENARIO_5.CDPOSRM=',SCENARIO_5.CDPOSRM);        
     PUT SKIP LIST('SCENARIO_5.STARTOK=',SCENARIO_5.STARTOK);        
     PUT SKIP LIST('SCENARIO_5.CDJEUNE=',SCENARIO_5.CDJEUNE);        
     PUT SKIP LIST('SCENARIO_5.AGEPREN=',SCENARIO_5.AGEPREN);        
     PUT SKIP LIST('SCENARIO_5.AGEPERM=',SCENARIO_5.AGEPERM);        
     PUT SKIP LIST('Scenario_6.CDPADIV=',SCENARIO_6.CDPADIV);        
     PUT SKIP LIST('Scenario_6.CDPROMO=',SCENARIO_6.CDPROMO);        
     PUT SKIP LIST('Scenario_6.CDBMDET=',SCENARIO_6.CDBMDET);        
     PUT SKIP LIST('Scenario_6.CDCIBCL=',SCENARIO_6.CDCIBCL);        
     PUT SKIP LIST('Scenario_6.NBKMAVH=',SCENARIO_6.NBKMAVH);        
     PUT SKIP LIST('SCENARIO_7.LTMARRM = ',SCENARIO_7.LTMARRM);        
     PUT SKIP LIST('SCENARIO_7.ANCSTRM = ',SCENARIO_7.ANCSTRM);        
     PUT SKIP LIST('SCENARIO_7.MTCATRM = ',SCENARIO_7.MTCATRM);        
     PUT SKIP LIST('SCENARIO_7.MTACTRM = ',SCENARIO_7.MTACTRM);        
     PUT SKIP LIST('SCENARIO_7.NUPDSRM = ',SCENARIO_7.NUPDSRM);        
         
     PUT SKIP LIST('SCENARIO_8.NBSINDM',SCENARIO_8.NBSINDM);        
     PUT SKIP LIST('SCENARIO_8.CDJEUFA',SCENARIO_8.CDJEUFA);        
     PUT SKIP LIST('SCENARIO_8.CDTY2PO',SCENARIO_8.CDTY2PO);        
     PUT SKIP LIST('SCENARIO_8.CDSTACO',SCENARIO_8.CDSTACO);        
     PUT SKIP LIST('SCENARIO_8.CDENFCH',SCENARIO_8.CDENFCH);        
     PUT SKIP LIST('SCENARIO_8.CDSTART',SCENARIO_8.CDSTART);        
   END;        
         
 SELECT(SPA.CDOPTRN);        
   WHEN('A2DVI','A2DVE');        
   WHEN('A2SOU');        
   WHEN('A2MSE');        
   WHEN('A2M20');###########################################        
   WHEN('A2RDV','A2CDV','A2EDV');        
   OTHER DO;        
       JWB001.CDRTPGM = 'A20166' !! 'XX';        
       RETURN;        
     END;        
 END;        
 SCENARI.NUMIDLL(LEVEL) = STG(MID6);    ########################################        
         
 /* CDTYPOP indique si on doit afficher ou non le devis */        
 IF SPAVAR.CDTYPOP = 'A'        
   THEN SCENARI.TBSCENA(12) = OFF;###########################################        
         
   ELSE SCENARI.TBSCENA(12) = ON;        
         
         
 SCENARI.TBSCENA(2) = ON;        
         
 SCENARI.TBSCENA(4) = ON;        
         
 SCENARI.TBSCENA(7) = OFF;        
         
 SCENARI.TBSCENA(8) = OFF;        
         
 SCENARI.TBSCENA(9) = OFF;        
         
 SCENARI.TBSCENA(5) = OFF;        
         
 SCENARI.TBSCENA(3) = OFF;        
         
 SCENARI.TBSCENA(6) = OFF;        
         
 SCENARI.TBSCENA(1) = ON;        
         
 SCENARI.TBSCENA(11) = OFF;        
         
         
 SELECT(MID6.CDLGTRN);        
   WHEN('1','F') SPA.CDLGTRN = 1;        
   WHEN('2','N') SPA.CDLGTRN = 2;        
   OTHER;        
 END;        
 CALL $DATES_TIMES;        
         
     TRACE = 'GA20166 ===> ' !! 'END F1';        
         
     CALL PT;        
 $END F1;        
 /*-----------------------------------------------*/        
 F2: PROC REORDER ;        
     TRACE = 'GA20166 ===> ' !! 'F2';        
         
     CALL PT;        
 /***************************************************/        
 /* RECHARGER LA RUBRIQUE COLLECTEE PAR LA GUIDANCE */        
 /***************************************************/        
 /* Attention,        
    la guidance met l'affilie dans la SPA mais celle-ci sera ecrasee        
    apres le F2.        
    Donc, on re-garnira la SPA en FA avec les donnees sauvees dans        
    SAVERETOUR, sinon on perd le SPA.NOIDAFF !!!        
 */        
         
 SELECT(SCENARI.CDTYSEL);        
   WHEN('1','3') DO;    ######################################################        
                        /*        ou identification complete    */        
     IF JWB001.CDTRACE >= 3 THEN        
       DO;        
         PUT SKIP LIST('**** RETOUR IDENTIFICATION GA20166 ');        
         PUT SKIP LIST('Donnees avant de relire la spa propre ...');        
         PUT SKIP LIST('SPA.INFOS_USER.CDMSETH=',        
                        SPA.INFOS_USER.CDMSETH);        
         PUT SKIP LIST('SCENARI.CDTYSEL=',SCENARI.CDTYSEL);        
         PUT SKIP LIST('SPA.LTOPCOM =',SPA.LTOPCOM);        
         PUT SKIP LIST('SPA.NOIDUSR : ',SPA.NOIDUSR);        
         PUT SKIP LIST('SPA.NOSQUSR : ',SPA.NOSQUSR);        
         PUT SKIP LIST('SPAS1096.NODEVI : ',SPAS1096.NODEVI);        
         PUT SKIP LIST('SPAS1096.LTEMAIL: ',SPAS1096.LTEMAIL);        
         PUT SKIP LIST('SPAS1096.CDTYPRO: ',SPAS1096.CDTYPRO);        
         PUT SKIP LIST('SPAS1096.CDGEPRO: ',SPAS1096.CDGEPRO);        
         PUT SKIP LIST('SPA.CDOPTRN =',SPA.CDOPTRN);        
         PUT SKIP LIST('SPA.CDRSAFF =',SPA.CDRSAFF);        
         PUT SKIP LIST('SPA.NOIDAFF =',SPA.NOIDAFF);        
         PUT SKIP LIST('SPA.NOPPAFF =',SPA.NOPPAFF);        
         PUT SKIP LIST('SPA.LTNMAFF =',SPA.LTNMAFF);        
         PUT SKIP LIST('SPA.DANAIAF =',SPA.DANAIAF);        
         PUT SKIP LIST('SPA.CDSEXAF =',SPA.CDSEXAF);        
         PUT SKIP LIST('SPA.CDLGEAF =',SPA.CDLGEAF);        
         PUT SKIP LIST('SPA.LTRUEAF =',SPA.LTRUEAF);        
         PUT SKIP LIST('SPA.NOHA1AF =',SPA.NOHA1AF);        
         PUT SKIP LIST('SPA.NOHA2AF =',SPA.NOHA2AF);        
         PUT SKIP LIST('SPA.CDCPOAF =',SPA.CDCPOAF);        
         PUT SKIP LIST('SPA.LTLOCAF =',SPA.LTLOCAF);        
       END;        
     /* PS : on relit la SPA du programme apr}s le F2        
        => on doit passer par cette zone interm{diaire pour sauver        
           les infos de la SPA de ID avant de relire la SPA propre        
     */        
     SAVERETOUR_ID = SPA, BY NAME;########################################        
     SAVERETOUR_ID.LTOPCOM = SPA.LTOPCOM;        
         
     /* car on ne sait pas les mettre dans la SPA generale      */        
     SAVERETOUR_ID.LTEMAIL = SPAS1096.LTEMAIL;        
     SAVERETOUR_ID.CDTYPRO = SPAS1096.CDTYPRO;        
     SAVERETOUR_ID.CDGEPRO = SPAS1096.CDGEPRO;        
     IF JWB001.CDTRACE >= 3 THEN        
       DO;        
         PUT SKIP LIST('SAVERETOUR_ID.NOIDAFF=',SAVERETOUR_ID.NOIDAFF);        
         PUT SKIP LIST('SAVERETOUR_ID.LTEMAIL=',SAVERETOUR_ID.LTEMAIL);        
         PUT SKIP LIST('SAVERETOUR_ID.CDTYPRO=',SAVERETOUR_ID.CDTYPRO);        
         PUT SKIP LIST('SAVERETOUR_ID.CDGEPRO=',SAVERETOUR_ID.CDGEPRO);        
       END;        
         
   END;        
   WHEN('2') DO;        #########################################        
     IF JWB001.CDTRACE >= 3 THEN        
       DO;        
         PUT SKIP LIST('GA20166 : Retour WSM424:CTRL risques');        
         PUT SKIP LIST('SPA.NOIDAFF=',SPA.NOIDAFF);        
         PUT SKIP LIST('SPA.LTOBJOP =',SPA.LTOBJOP);        
       END;        
     SAVERETOUR_CR = SUBSTR(SPA.LTOBJOP,2,6);        
   END;        
   OTHER;        
 END;        
         
     TRACE = 'GA20166 ===> ' !! 'END F2';        
         
     CALL PT;        
 $END F2;        
 /*-----------------------------------------------*/        
 F3: PROC REORDER ;        
     TRACE = 'GA20166 ===> ' !! 'F3';        
         
     CALL PT;        
 /********************************************        
 * INVOQUER UNE GUIDANCE                     *        
 ********************************************/        
 IF JWB001.CDTRACE >= 3 THEN        
   DO;        
     PUT SKIP LIST('GA20166 : Depart guidance,        
                    CDTYSEL=',SCENARI.CDTYSEL);        
     PUT SKIP LIST('SPA.NOIDAFF=',SPA.NOIDAFF);        
     PUT SKIP LIST('SPAVAR.NOIDDEV =',SPAVAR.NOIDDEV);        
   END;        
 SELECT(SCENARI.CDTYSEL);        
   WHEN('1') DO;        ###################################################        
     /* C'est la S1169 qui met e jour la statisqtique ...*/        
         
     SPAS1096 = '';        
     SPAS1096.CDDEST  = 'A2MSE';        
     SPAS1096.NODEVI  = SPAVAR.NOIDDEV;        
         
     /* Pour afficher par defaut ce que l'on a deje        
        sur le CONDUCTEUR :        
        - date de naissance , code postal , profession        
     */        
     SPAS1096.LTEMAIL = SPAVAR.IDENTI.EMAILAF;        
     SPAS1096.CDTYPRO = SCENARIO_5.CDTYPRO;        
     SPAS1096.CDGEPRO = SCENARIO_5.CDGEPRO;        
     INTER_C8  = SCENARIO_5.DANAIPR;        
     CALL F_CTRL_DA(INTER_C8,'2');        
     IF ERREUR THEN        
       DO;        
         JWB001.CDRTPGM = '';        
         SPA.DANAIAF = 0;        
         ERREUR = OFF;        
       END;        
     ELSE SPA.DANAIAF = KGI011J_RO.SAAMMJJ_P7;        
     SPA.CDCPOAF = SCENARIO_5.CDPOPRE;        
         
     SPA.TRANS3  = 'WA2016';        
     SPA.TRANSAC = 'WS1169';        
     SPA.CDOPTRN = 'S2IIL';        
     SPA.INFOS_USER.TBEGUSR(*) = '';        
     SPA.INFOS_USER.CDTYSOU = '01001';        
         
     /* Cki le 22.04.05 => NOIDUSR et NOSQUSR ont des crasses */        
     IF VERIFY(SPA.NOIDUSR,NUM) > 0        
      ! VERIFY(SPA.NOSQUSR,NUM) > 0        
       THEN DO;        
              SPA.NOIDUSR = 0;        
              SPA.NOSQUSR = 0;        
            END;        
         
     IF JWB001.CDTRACE >= 3 THEN DO;        
       PUT SKIP LIST('**** AVANT DEPART HELP POUR IDLIGHT WS1169');        
       PUT SKIP LIST('****======================================');        
       PUT SKIP LIST('SPA.CDOPTRN : ',SPA.CDOPTRN);        
       PUT SKIP LIST('SPA.NOIDUSR : ',SPA.NOIDUSR);        
       PUT SKIP LIST('SPA.NOSQUSR : ',SPA.NOSQUSR);        
       PUT SKIP LIST('SPAVAR.CDTYPOP : ',SPAVAR.CDTYPOP);        
       PUT SKIP LIST('SPAVAR.NOIDDEV : ',SPAVAR.NOIDDEV);        
       PUT SKIP LIST('SPAVAR.NEWDEVI : ',SPAVAR.NEWDEVI);        
       PUT SKIP LIST('SPA.INFOS_USER.CDMSETH : ',        
                      SPA.INFOS_USER.CDMSETH);        
       PUT SKIP LIST('SPA.INFOS_USER.CDSTAT  : ',        
                      SPA.INFOS_USER.CDSTAT );        
       PUT SKIP LIST('SPA.INFOS_USER.LTSITE  : ',        
                      SPA.INFOS_USER.LTSITE );        
       PUT SKIP LIST('SPAS1096.NODEVI : ',SPAS1096.NODEVI);        
       PUT SKIP LIST('SPAS1096.CDDEST : ',SPAS1096.CDDEST);        
       PUT SKIP LIST('SPAS1096.LTEMAIL: ',SPAS1096.LTEMAIL);        
       PUT SKIP LIST('SPAS1096.CDTYPRO: ',SPAS1096.CDTYPRO);        
       PUT SKIP LIST('SPAS1096.CDGEPRO: ',SPAS1096.CDGEPRO);        
         PUT SKIP LIST('SPA.NOIDAFF =',SPA.NOIDAFF);        
         PUT SKIP LIST('SPA.NOPPAFF =',SPA.NOPPAFF);        
         PUT SKIP LIST('SPA.LTNMAFF =',SPA.LTNMAFF);        
         PUT SKIP LIST('SPA.DANAIAF =',SPA.DANAIAF);        
         PUT SKIP LIST('SPA.CDSEXAF =',SPA.CDSEXAF);        
         PUT SKIP LIST('SPA.CDLGEAF =',SPA.CDLGEAF);        
         PUT SKIP LIST('SPA.LTRUEAF =',SPA.LTRUEAF);        
         PUT SKIP LIST('SPA.NOHA1AF =',SPA.NOHA1AF);        
         PUT SKIP LIST('SPA.NOHA2AF =',SPA.NOHA2AF);        
         PUT SKIP LIST('SPA.CDCPOAF =',SPA.CDCPOAF);        
         PUT SKIP LIST('SPA.LTLOCAF =',SPA.LTLOCAF);        
     END;        
   END;        
         
   WHEN('2') DO;        ##############################################        
     IF JWB001.CDTRACE >= 3 THEN        
       DO;        
       PUT SKIP LIST('GA20166 : Appel WSM424:CTRL risques');        
       PUT SKIP LIST(' WSM424 pour NOIDAFF=',SPA.NOIDAFF);        
       PUT SKIP LIST('SPAVAR.NOIDDEV : ',SPAVAR.NOIDDEV);        
       PUT SKIP LIST('SPA.NOIDAFF : ',SPA.NOIDAFF);        
       PUT SKIP LIST('SPA.LTNMAFF : ',SPA.LTNMAFF);        
       PUT SKIP LIST('SPA.DANAIAF : ',SPA.DANAIAF);        
       PUT SKIP LIST('SPAVAR.IDENTI.NOIDAFF : ',SPAVAR.IDENTI.NOIDAFF);        
       PUT SKIP LIST('SPAVAR.IDENTI.LTNMAFF : ',SPAVAR.IDENTI.LTNMAFF);        
       PUT SKIP LIST('SPAVAR.IDENTI.LTPRAFF : ',SPAVAR.IDENTI.LTPRAFF);        
       PUT SKIP LIST('SPAVAR.IDENTI.DANAIAF : ',SPAVAR.IDENTI.DANAIAF);        
       END;        
     SPA.TRANS3  = 'WA2016';        
     SPA.TRANSAC = 'WSM424';        
     SPA.CDAPPEL = 'X';        
   END;        
         
   WHEN('3') DO;        ######################################################        
     IF JWB001.CDTRACE >= 3 THEN        
       DO;        
       PUT SKIP LIST('GA20166:Appel WS1096 : ID complete');        
       PUT SKIP LIST('SPAVAR.NOIDDEV : ',SPAVAR.NOIDDEV);        
       PUT SKIP LIST('SPA.NOIDAFF : ',SPA.NOIDAFF);        
       PUT SKIP LIST('SPA.LTNMAFF : ',SPA.LTNMAFF);        
       PUT SKIP LIST('SPA.DANAIAF : ',SPA.DANAIAF);        
       PUT SKIP LIST('SPAVAR.IDENTI.NOIDAFF : ',SPAVAR.IDENTI.NOIDAFF);        
       PUT SKIP LIST('SPAVAR.IDENTI.DANAIAF : ',SPAVAR.IDENTI.DANAIAF);        
       PUT SKIP LIST('SPAVAR.IDENTI.LTNMAFF : ',SPAVAR.IDENTI.LTNMAFF);        
       PUT SKIP LIST('SPAVAR.IDENTI.LTPRAFF : ',SPAVAR.IDENTI.LTPRAFF);        
       PUT SKIP LIST('SPAVAR.IDENTI.DANAIAF : ',SPAVAR.IDENTI.DANAIAF);        
       END;        
         
     SPAS1096 = '';        
     SPAS1096.CDDEST  = 'A2SOU';        
     SPAS1096.NODEVI  = SPAVAR.NOIDDEV;        
         
     /* Pour afficher par defaut ce que l'on a deje        
        sur le CONDUCTEUR :        
        - date de naissance , code postal , profession        
     */        
     SPAS1096.LTEMAIL = SPAVAR.IDENTI.EMAILAF;        
     SPAS1096.CDTYPRO = SCENARIO_5.CDTYPRO;        
     SPAS1096.CDGEPRO = SCENARIO_5.CDGEPRO;        
     INTER_C8  = SCENARIO_5.DANAIPR;        
     CALL F_CTRL_DA(INTER_C8,'2');        
     IF ERREUR THEN        
       DO;        
         JWB001.CDRTPGM = '';        
         SPA.DANAIAF = 0;        
         ERREUR = OFF;        
       END;        
     ELSE SPA.DANAIAF = KGI011J_RO.SAAMMJJ_P7;        
     SPA.CDCPOAF = SCENARIO_5.CDPOPRE;        
         
     /* Maj STATISTIQUES DU SITE */        
     STAT_W = TRANSLATE(SPA.CDLGTRN,'FNF','123') !! 'A201001';        
     CALL STATSITE(STAT_W,2,1,'M'); #######################################        
         
     SPA.TRANS3  = 'WA2016';        
     SPA.TRANSAC = 'WS1096';        
     SPA.CDOPTRN = 'S2ISI';        
     SPA.INFOS_USER.TBEGUSR(*) = '';        
     SPA.INFOS_USER.CDTYSOU = '01001';        
         
     IF JWB001.CDTRACE >= 3 THEN        
       DO;        
         PUT SKIP LIST('SPA.NOIDUSR = ',SPA.NOIDUSR);        
         PUT SKIP LIST('SPA.NOSQUSR = ',SPA.NOSQUSR);        
       END;        
     /* Cki le 22.04.05 => NOIDUSR et NOSQUSR ont des crasses */        
     IF VERIFY(SPA.NOIDUSR,NUM) > 0        
      ! VERIFY(SPA.NOSQUSR,NUM) > 0        
       THEN DO;        
              SPA.NOIDUSR = 0;        
              SPA.NOSQUSR = 0;        
            END;        
         
     IF JWB001.CDTRACE >= 3 THEN DO;        
       PUT SKIP LIST('**** AVANT DEPART HELP POUR ID complete');        
       PUT SKIP LIST('**** ET GARNIR INFOS CONDUCTEUR ...    ');        
       PUT SKIP LIST('SPA.CDOPTRN : ',SPA.CDOPTRN);        
       PUT SKIP LIST('SPA.NOIDUSR : ',SPA.NOIDUSR);        
       PUT SKIP LIST('SPA.NOSQUSR : ',SPA.NOSQUSR);        
       PUT SKIP LIST('SPAVAR.CDTYPOP : ',SPAVAR.CDTYPOP);        
       PUT SKIP LIST('SPAVAR.NOIDDEV : ',SPAVAR.NOIDDEV);        
       PUT SKIP LIST('SPAVAR.NEWDEVI : ',SPAVAR.NEWDEVI);        
       PUT SKIP LIST('SPA.INFOS_USER.CDMSETH : ',        
                      SPA.INFOS_USER.CDMSETH);        
       PUT SKIP LIST('SPA.INFOS_USER.CDSTAT  : ',        
                      SPA.INFOS_USER.CDSTAT );        
       PUT SKIP LIST('SPA.INFOS_USER.LTSITE  : ',        
                      SPA.INFOS_USER.LTSITE );        
       PUT SKIP LIST('SPAS1096.NODEVI : ',SPAS1096.NODEVI);        
       PUT SKIP LIST('SPAS1096.CDDEST : ',SPAS1096.CDDEST);        
       PUT SKIP LIST('SPAS1096.LTEMAIL: ',SPAS1096.LTEMAIL);        
       PUT SKIP LIST('SPAS1096.CDTYPRO: ',SPAS1096.CDTYPRO);        
       PUT SKIP LIST('SPAS1096.CDGEPRO: ',SPAS1096.CDGEPRO);        
         PUT SKIP LIST('SPA.NOIDAFF =',SPA.NOIDAFF);        
         PUT SKIP LIST('SPA.NOPPAFF =',SPA.NOPPAFF);        
         PUT SKIP LIST('SPA.LTNMAFF =',SPA.LTNMAFF);        
         PUT SKIP LIST('SPA.DANAIAF =',SPA.DANAIAF);        
         PUT SKIP LIST('SPA.CDSEXAF =',SPA.CDSEXAF);        
         PUT SKIP LIST('SPA.CDLGEAF =',SPA.CDLGEAF);        
         PUT SKIP LIST('SPA.LTRUEAF =',SPA.LTRUEAF);        
         PUT SKIP LIST('SPA.NOHA1AF =',SPA.NOHA1AF);        
         PUT SKIP LIST('SPA.NOHA2AF =',SPA.NOHA2AF);        
         PUT SKIP LIST('SPA.CDCPOAF =',SPA.CDCPOAF);        
         PUT SKIP LIST('SPA.LTLOCAF =',SPA.LTLOCAF);        
     END;        
   END;        
   OTHER;        
 END;        
         
     TRACE = 'GA20166 ===> ' !! 'END F3';        
         
     CALL PT;        
 $END F3;        
 /*-----------------------------------------------*/        
 F4: PROC REORDER ;        
     TRACE = 'GA20166 ===> ' !! 'F4';        
         
     CALL PT;        
 /********************************************        
 * CONTROLE D'ACCES AUX RESSOURCES           *        
 ********************************************/        
 SCENARI.TBSCENA(2)    = OFF;        
         
 ERREUR     = OFF;        
 CDRTPGM_W  = '';        
 SPA.LTOPCOM = '';        
 /*        
 PUT SKIP LIST('SPAVAR.CDTYPOP=',SPAVAR.CDTYPOP);        
 */        
         
     TRACE = 'GA20166 ===> ' !! 'END F4';        
         
     CALL PT;        
 $END F4;        
 /*-----------------------------------------------*/        
 F5: PROC REORDER ;        
     TRACE = 'GA20166 ===> ' !! 'F5';        
         
     CALL PT;        
 /********************************************        
 * PAGE6 : VALEURS PAR DEFAUT                *        
 ********************************************/        
 IF JWB001.RETOUR !        
    (JWB001.CDEVCLI ^='3' &  SPA.MSG_SPA = '1')  THEN        
      DO;        
         
      IF JWB001.RETOUR THEN        
         DO ;        
         /*IF SCENARI.CDTYSEL = '1'        
            ! SCENARI.CDTYSEL = '3' THEN        
             DO;        
               SPA = SAVERETOUR_ID, BY NAME;        
               SPA.LTOPCOM = SAVERETOUR_ID.LTOPCOM;        
             END;*/        
           /* NBPAGE = le nombre de fois que la page a ete affichee        
             (en retour de guidance, la boite noire remets tjs        
              nbpage e 0)        
           */        
           SCENARI.NBPAGE1 = 1;        
         END;        
      CALL F6;        
      PAGE6 = MID6, BY NAME;        
      END;        
 ELSE DO;        
      SUBSTR(PAGE6TXT,09,STG(PAGE6) - 8) = ' ';        
      END;        
         
 PAGE6.LL        = STG(PAGE6);        
 PAGE6.LTSCTRN_A = LOW(2) !! SPA.CDATTRN !! LOW(4);        
         
     TRACE = 'GA20166 ===> ' !! 'END F5';        
         
     CALL PT;        
 $END F5;        
 /*-----------------------------------------------*/        
         
 F6: PROC REORDER ;        
     TRACE = 'GA20166 ===> ' !! 'F6';        
         
     CALL PT;        
 /********************************************        
 * PAGE6 : ACCES DB ET CHARGEMENT PAGE6      *        
 ********************************************/        
 /*        
 PUT SKIP LIST('SPA.INFOS_USER.CDAFGRP = ',SPA.INFOS_USER.CDAFGRP);        
 */        
         
 CDRTPGM_W = '';        
 ERREUR    = OFF;        
         
 IF SPAVAR.CDTYPOP = 'A'        
   THEN CALL F6_1;        
         
 IF ERREUR        
   THEN DO;        
          CALL ERRORMSG(CDRTPGM_W,SPA.CDLGTRN,PAGE6.LTMETRN);        
        END;        
         
     TRACE = 'GA20166 ===> ' !! 'END F6';        
         
     CALL PT;        
 $END F6;        
 /*-----------------------------------------------*/        
         
 F6_1: PROC REORDER ;        
     TRACE = 'GA20166 ===> ' !! 'F6_1';        
         
     CALL PT;        
 /********************************************        
 * PAGE6 : AFFICHER LA PAGE RESULTAT DU DEVIS*        
 ********************************************/        
         
 /* Responsabilit{ civile  */        
 /* ---------------------- */        
 INTER_F15 = SCENARIO_6.RESULTAT_AUTO.MTGARCI * 100;        
 INTER_C10 = F_MTFTC(INTER_F15,'$BBBZ07V02$',2,10);        
 PAGE6.MTGARCI = INTER_C10;        
         
 /* Protection juridique( ancien d{fense {tendue) */        
 /* ----------------------------------------------*/        
 INTER_F15 = SCENARIO_6.RESULTAT_AUTO.MTGACAS * 100;        
 INTER_C10 = F_MTFTC(INTER_F15,'$BBBZ07V02$',2,10);        
 PAGE6.MTGACAS = INTER_C10;        
         
 /* Protection juridique plus  */        
 /* ---------------------------*/        
 INTER_F15 = SCENARIO_6.RESULTAT_AUTO.MTGACA1 * 100;        
 INTER_C10 = F_MTFTC(INTER_F15,'$BBBZ07V02$',2,10);        
 PAGE6.MTGACA1 = INTER_C10;        
         
 /* Assurance conducteur */        
 /* -------------------- */        
 INTER_F15 = SCENARIO_6.RESULTAT_AUTO.MTGAASS * 100;        
 INTER_C10 = F_MTFTC(INTER_F15,'$BBBZ07V02$',2,10);        
 PAGE6.MTGAASS = INTER_C10;        
         
 /* Mobily maxi */        
 /* ----------- */        
 INTER_F15 = SCENARIO_6.RESULTAT_AUTO.MTGAMOB * 100;        
 INTER_C10 = F_MTFTC(INTER_F15,'$BBBZ07V02$',2,10);        
 PAGE6.MTGAMOB = INTER_C10;        
         
 /* Mobily maxi (privilege) */        
 /* ----------------------- */        
 INTER_F15 = SCENARIO_6.RESULTAT_AUTO.MTGAMO1 * 100;        
 INTER_C10 = F_MTFTC(INTER_F15,'$BBBZ07V02$',2,10);        
 PAGE6.MTGAMO1 = INTER_C10;        
         
 /* mini omnium */        
 /* ----------- */        
 INTER_F15 = SCENARIO_6.RESULTAT_AUTO.MTGAOM1 * 100;        
 INTER_C10 = F_MTFTC(INTER_F15,'$BBBZ07V02$',2,10);        
 PAGE6.MTGAOM1 = INTER_C10;        
         
 /* mini omnium plus */        
 /* ---------------- */        
 INTER_F15 = SCENARIO_6.RESULTAT_AUTO.MTGAOM2 * 100;        
 INTER_C10 = F_MTFTC(INTER_F15,'$BBBZ07V02$',2,10);        
 PAGE6.MTGAOM2 = INTER_C10;        
         
 /* 3 niveaux d'omnium completes (normales et Plus) */        
 /* ----------------------------------------------- */        
 IF SCENARIO_5.CDJEUNE = 1 THEN        
   DO; ###################################################        
     PAGE6.TB_OMNI(1).LTFRAGR = '  450';        
     PAGE6.TB_OMNI(1).LTFRNAG = '  900';        
     INTER_F15 = SCENARIO_6.RESULTAT_AUTO.TB_OMNI(2).MTGAOM3 * 100;        
     INTER_C10 = F_MTFTC(INTER_F15,'$BBBZ07V02$',2,10);        
     PAGE6.TB_OMNI(1).MTGAOM3 = INTER_C10;        
     INTER_F15 = SCENARIO_6.RESULTAT_AUTO.TB_OMNI(2).MTGAOM4 * 100;        
     INTER_C10 = F_MTFTC(INTER_F15,'$BBBZ07V02$',2,10);        
     PAGE6.TB_OMNI(1).MTGAOM4 = INTER_C10;        
         
     PAGE6.TB_OMNI(2).LTFRAGR = '  900';        
     PAGE6.TB_OMNI(2).LTFRNAG = ' 1350';        
     INTER_F15 = SCENARIO_6.RESULTAT_AUTO.TB_OMNI(3).MTGAOM3 * 100;        
     INTER_C10 = F_MTFTC(INTER_F15,'$BBBZ07V02$',2,10);        
     PAGE6.TB_OMNI(2).MTGAOM3 = INTER_C10;        
     INTER_F15 = SCENARIO_6.RESULTAT_AUTO.TB_OMNI(3).MTGAOM4 * 100;        
     INTER_C10 = F_MTFTC(INTER_F15,'$BBBZ07V02$',2,10);        
     PAGE6.TB_OMNI(2).MTGAOM4 = INTER_C10;        
         
     PAGE6.TB_OMNI(3).LTFRAGR = '     ';        
     PAGE6.TB_OMNI(3).LTFRNAG = '     ';        
     PAGE6.TB_OMNI(3).MTGAOM3 = '';        
     PAGE6.TB_OMNI(3).MTGAOM4 = '';        
         
     PAGE6.CDJEUNE = 'Y';        
   END;        
 ELSE        
   DO;        
     PAGE6.CDJEUNE = 'N';        
     PAGE6.TB_OMNI(1).LTFRAGR = '    0';        
     PAGE6.TB_OMNI(1).LTFRNAG = '  450';        
     INTER_F15 = SCENARIO_6.RESULTAT_AUTO.TB_OMNI(1).MTGAOM3 * 100;        
     INTER_C10 = F_MTFTC(INTER_F15,'$BBBZ07V02$',2,10);        
     PAGE6.TB_OMNI(1).MTGAOM3 = INTER_C10;        
     INTER_F15 = SCENARIO_6.RESULTAT_AUTO.TB_OMNI(1).MTGAOM4 * 100;        
     INTER_C10 = F_MTFTC(INTER_F15,'$BBBZ07V02$',2,10);        
     PAGE6.TB_OMNI(1).MTGAOM4 = INTER_C10;        
         
     PAGE6.TB_OMNI(2).LTFRAGR = '  450';        
     PAGE6.TB_OMNI(2).LTFRNAG = '  900';        
     INTER_F15 = SCENARIO_6.RESULTAT_AUTO.TB_OMNI(2).MTGAOM3 * 100;        
     INTER_C10 = F_MTFTC(INTER_F15,'$BBBZ07V02$',2,10);        
     PAGE6.TB_OMNI(2).MTGAOM3 = INTER_C10;        
     INTER_F15 = SCENARIO_6.RESULTAT_AUTO.TB_OMNI(2).MTGAOM4 * 100;        
     INTER_C10 = F_MTFTC(INTER_F15,'$BBBZ07V02$',2,10);        
     PAGE6.TB_OMNI(2).MTGAOM4 = INTER_C10;        
         
     PAGE6.TB_OMNI(3).LTFRAGR = '  900';        
     PAGE6.TB_OMNI(3).LTFRNAG = ' 1350';        
     INTER_F15 = SCENARIO_6.RESULTAT_AUTO.TB_OMNI(3).MTGAOM3 * 100;        
     INTER_C10 = F_MTFTC(INTER_F15,'$BBBZ07V02$',2,10);        
     PAGE6.TB_OMNI(3).MTGAOM3 = INTER_C10;        
     INTER_F15 = SCENARIO_6.RESULTAT_AUTO.TB_OMNI(3).MTGAOM4 * 100;        
     INTER_C10 = F_MTFTC(INTER_F15,'$BBBZ07V02$',2,10);        
     PAGE6.TB_OMNI(3).MTGAOM4 = INTER_C10;        
   END;        
         
 IF SCENARIO_5.CDPOSRM = 'Y' THEN        
   DO;                             ###################################################        
     PAGE6.CDPOSRM = 'Y';        
         
     /* Responsabilit{ civile  */        
     /* ---------------------- */        
     INTER_F15 = SCENARIO_6.RESULTAT_REM.MTRMRCI * 100;        
     INTER_C10 = F_MTFTC(INTER_F15,'$BBBZ07V02$',2,10);        
     PAGE6.MTRMRCI = INTER_C10;        
         
     /* Vol  */        
     /* ---- */        
     INTER_F15 = SCENARIO_6.RESULTAT_REM.MTRMVO1 * 100;        
     INTER_C10 = F_MTFTC(INTER_F15,'$BBBZ07V02$',2,10);        
     PAGE6.MTRMVO1 = INTER_C10;        
         
     /* Incendie  */        
     /* --------- */        
     INTER_F15 = SCENARIO_6.RESULTAT_REM.MTRMIN1 * 100;        
     INTER_C10 = F_MTFTC(INTER_F15,'$BBBZ07V02$',2,10);        
     PAGE6.MTRMIN1 = INTER_C10;        
         
     /* Bris de vitres */        
     /* -------------- */        
     INTER_F15 = SCENARIO_6.RESULTAT_REM.MTRMBRI * 100;        
     INTER_C10 = F_MTFTC(INTER_F15,'$BBBZ07V02$',2,10);        
     PAGE6.MTRMBRI = INTER_C10;        
         
     /* DM */        
     /* -- */        
     INTER_F15 = SCENARIO_6.RESULTAT_REM.MTRMDM3 * 100;        
     INTER_C10 = F_MTFTC(INTER_F15,'$BBBZ07V02$',2,10);        
     PAGE6.MTRMDM3 = INTER_C10;        
         
     /* Mini DM */        
     /* ------- */        
     INTER_F15 = SCENARIO_6.RESULTAT_REM.MTRMDM4 * 100;        
     INTER_C10 = F_MTFTC(INTER_F15,'$BBBZ07V02$',2,10);        
     PAGE6.MTRMDM4 = INTER_C10;        
   END;        
 ELSE                                 ############################################################        
   DO;        
     PAGE6.CDPOSRM = '';        
     PAGE6.MTRMRCI = '';        
     PAGE6.MTRMVO1 = '';        
     PAGE6.MTRMIN1 = '';        
     PAGE6.MTRMBRI = '';        
     PAGE6.MTRMDM3 = '';        
     PAGE6.MTRMDM4 = '';        
   END;        
         
 /* PAGE6.CDSERCI = SCENARIO_6.SELECT_GAR.CDSERCI;*/        
         
 PAGE6.CDSERCI = 'Y'; ###################################        
 PAGE6.CDSECAS = SCENARIO_6.SELECT_GAR.CDSECAS;        
 PAGE6.CDSECA1 = SCENARIO_6.SELECT_GAR.CDSECA1;        
 PAGE6.CDSEASS = SCENARIO_6.SELECT_GAR.CDSEASS;        
 PAGE6.CDTYPOM = SCENARIO_6.SELECT_GAR.CDTYPOM;        
 PAGE6.CDSEMOB = SCENARIO_6.SELECT_GAR.CDSEMOB;        
 PAGE6.CDSEMO1 = SCENARIO_6.SELECT_GAR.CDSEMO1;        
 PAGE6.CDNIVFR = SCENARIO_6.SELECT_GAR.CDNIVFR;        
         
 IF SCENARIO_5.CDJEUNE = 1 THEN        
   DO;/* Le CDNIVFR indique l'indice dans le tableau qui est        
         affich{ sur la page, mais ne correspond pas au niveau        
         de franchise car on ne peut pas souscrire au niveau 1!!!.        
         La 5eme ligne du tableau est vide a l'ecran !        
      */        
      SELECT(SCENARIO_6.SELECT_GAR.CDNIVFR);        
        WHEN('1') PAGE6.CDNIVFR = '';######################################        
        WHEN('2') PAGE6.CDNIVFR = '1';        
        WHEN('3') PAGE6.CDNIVFR = '2';        
        OTHER;        
      END;        
   END;        
         
 IF SCENARIO_5.CDPOSRM = 'Y'        
   THEN SCENARIO_6.SELECT_GAR.CDRMRCI = 'Y';        
 PAGE6.CDRMRCI = SCENARIO_6.SELECT_GAR.CDRMRCI;        
 PAGE6.CDRMVO1 = SCENARIO_6.SELECT_GAR.CDRMVO1;        
 PAGE6.CDRMINI = SCENARIO_6.SELECT_GAR.CDRMIN1;        
 PAGE6.CDRMBRI = SCENARIO_6.SELECT_GAR.CDRMBRI;        
 PAGE6.CDRMDM4 = SCENARIO_6.SELECT_GAR.CDRMDM4;        
 PAGE6.CDRMDM3 = SCENARIO_6.SELECT_GAR.CDRMDM3;        
         
 PAGE6.CDLIMIT = SPAVAR.CDLIMIT;        
 PAGE6.CDP6ANS = 'N';        
 IF SCENARIO_1.ANNCSTR < (#DATE_AAAA - 6)        
   THEN PAGE6.CDP6ANS = 'Y';        
         
 PAGE6.NOIDDEV = SPA.DEVISAF;        
         
 PAGE6.CDPROMO = '';        
 PAGE6.MTRCPRO = '';        
 PAGE6.MTOMPR1 = '';        
 PAGE6.MTOMPR2 = '';        
 PAGE6.TB_OMNI_PR(1).MTOMPR3 = '';        
 PAGE6.TB_OMNI_PR(1).MTOMPR4 = '';        
 PAGE6.TB_OMNI_PR(2).MTOMPR3 = '';        
 PAGE6.TB_OMNI_PR(2).MTOMPR4 = '';        
 PAGE6.TB_OMNI_PR(3).MTOMPR3 = '';        
 PAGE6.TB_OMNI_PR(3).MTOMPR4 = '';        
         
 /* Promo permanente : -10% sur RC et -15 sur Omnium        
    ------------------------------------------------        
 */        
 IF SCENARIO_6.CDPROMO ^= '' THEN        
   DO;        
     PAGE6.CDPROMO = SCENARIO_6.CDPROMO;        
     /* RC */        
     /* -- */        
     INTER_F15 = SCENARIO_6.RESULTAT_AUTO_PROMO.MTGARCI * 100;        
     INTER_C10 = F_MTFTC(INTER_F15,'$BBBZ07V02$',2,10);        
     PAGE6.MTRCPRO = INTER_C10;        
         
     /* mini omnium */        
     /* ----------- */        
     INTER_F15 = SCENARIO_6.RESULTAT_AUTO_PROMO.MTGAOM1 * 100;        
     INTER_C10 = F_MTFTC(INTER_F15,'$BBBZ07V02$',2,10);        
     PAGE6.MTOMPR1 = INTER_C10;        
         
     /* mini omnium plus */        
     /* ---------------- */        
     INTER_F15 = SCENARIO_6.RESULTAT_AUTO_PROMO.MTGAOM2 * 100;        
     INTER_C10 = F_MTFTC(INTER_F15,'$BBBZ07V02$',2,10);        
     PAGE6.MTOMPR2 = INTER_C10;        
         
     IF SCENARIO_5.CDJEUNE = 1 THEN        
       DO; ###################################################        
         INTER_F15 =        
           SCENARIO_6.RESULTAT_AUTO_PROMO.TB_OMNI(2).MTGAOM3 * 100;        
         INTER_C10 = F_MTFTC(INTER_F15,'$BBBZ07V02$',2,10);        
         PAGE6.TB_OMNI_PR(1).MTOMPR3 = INTER_C10;        
         INTER_F15 =        
           SCENARIO_6.RESULTAT_AUTO_PROMO.TB_OMNI(2).MTGAOM4 * 100;        
         INTER_C10 = F_MTFTC(INTER_F15,'$BBBZ07V02$',2,10);        
         PAGE6.TB_OMNI_PR(1).MTOMPR4 = INTER_C10;        
         
         INTER_F15 =        
           SCENARIO_6.RESULTAT_AUTO_PROMO.TB_OMNI(3).MTGAOM3 * 100;        
         INTER_C10 = F_MTFTC(INTER_F15,'$BBBZ07V02$',2,10);        
         PAGE6.TB_OMNI_PR(2).MTOMPR3 = INTER_C10;        
         INTER_F15 =        
           SCENARIO_6.RESULTAT_AUTO_PROMO.TB_OMNI(3).MTGAOM4 * 100;        
         INTER_C10 = F_MTFTC(INTER_F15,'$BBBZ07V02$',2,10);        
         PAGE6.TB_OMNI_PR(2).MTOMPR4 = INTER_C10;        
         
         PAGE6.TB_OMNI_PR(3).MTOMPR3 = '';        
         PAGE6.TB_OMNI_PR(3).MTOMPR4 = '';        
       END;        
     ELSE        
       DO;        
         INTER_F15 =        
           SCENARIO_6.RESULTAT_AUTO_PROMO.TB_OMNI(1).MTGAOM3 * 100;        
         INTER_C10 = F_MTFTC(INTER_F15,'$BBBZ07V02$',2,10);        
         PAGE6.TB_OMNI_PR(1).MTOMPR3 = INTER_C10;        
         INTER_F15 =        
           SCENARIO_6.RESULTAT_AUTO_PROMO.TB_OMNI(1).MTGAOM4 * 100;        
         INTER_C10 = F_MTFTC(INTER_F15,'$BBBZ07V02$',2,10);        
         PAGE6.TB_OMNI_PR(1).MTOMPR4 = INTER_C10;        
         
         INTER_F15 =        
           SCENARIO_6.RESULTAT_AUTO_PROMO.TB_OMNI(2).MTGAOM3 * 100;        
         INTER_C10 = F_MTFTC(INTER_F15,'$BBBZ07V02$',2,10);        
         PAGE6.TB_OMNI_PR(2).MTOMPR3 = INTER_C10;        
         INTER_F15 =        
           SCENARIO_6.RESULTAT_AUTO_PROMO.TB_OMNI(2).MTGAOM4 * 100;        
         INTER_C10 = F_MTFTC(INTER_F15,'$BBBZ07V02$',2,10);        
         PAGE6.TB_OMNI_PR(2).MTOMPR4 = INTER_C10;        
         
         INTER_F15 =        
           SCENARIO_6.RESULTAT_AUTO_PROMO.TB_OMNI(3).MTGAOM3 * 100;        
         INTER_C10 = F_MTFTC(INTER_F15,'$BBBZ07V02$',2,10);        
         PAGE6.TB_OMNI_PR(3).MTOMPR3 = INTER_C10;        
         INTER_F15 =        
           SCENARIO_6.RESULTAT_AUTO_PROMO.TB_OMNI(3).MTGAOM4 * 100;        
         INTER_C10 = F_MTFTC(INTER_F15,'$BBBZ07V02$',2,10);        
         PAGE6.TB_OMNI_PR(3).MTOMPR4 = INTER_C10;        
       END;        
   END;        
         
 PAGE6.LTMARQU   = SCENARIO_1.LTMARQU;        
 PAGE6.LTLIBTYP  = TRIM(SCENARIO_1.LTMODEL !! ' ' !!        
                   SCENARIO_1.LTTYPEV);        
 INTER_P1        = SCENARIO_1.NBRPORT;        
 PAGE6.LTNBRPORT = INTER_C1 !! TRIM(TXT001(SPA.CDLGTRN));        
 INTER_Z3 = SCENARIO_1.NBTYPKW;        
 PAGE6.LTNBTYPKW = INTER_Z3;        
 INTER_Z2 = SCENARIO_5.AGEPREN;        
 PAGE6.AGEPREN = INTER_Z2;        
         
 PAGE6.VABMACT = SCENARIO_6.CDBMDET;        
         
 INTER_F15 = SCENARIO_5.VACATVH * 100;        
 INTER_C10 = F_MTFTC(INTER_F15,'$BBBZ07V02$',2,10);        
 PAGE6.VACATVH = INTER_C10;        
         
 /* Cki le 08.01.08 : site moins20% !!!! */        
 IF SPA.CDOPTRN = 'A2M20'        
   THEN PAGE6.CDEXTOP = 'M20';        
         
 /* Cki le 10.01.08 : V{hicule vert ? */        
 IF SCENARIO_1.CDECOV2 = '1'        
   THEN PAGE6.CDVVERT = 'Y';        
   ELSE PAGE6.CDVVERT = 'N';        
         
         
 /* Cki le 14.01.2010 : Quand on revient pour afficher le resultat du        
    devis avec A2MSE, la S1096 a d'office abonne e mon site Ethias (on        
    a CDMSETH = 'Y', mais elle n'a pas pu ecrire le cookie ! Donc,        
    il faut le mettre ici dans la page pour que le cookie puisse tre        
    cree.        
    C'est necessaire uniquement dans ce cas precis        
 */        
         
 IF INFOS_USER.CDMSETH = 'Y'        
  & SPA.CDOPTRN = 'A2MSE' THEN        
   DO;        
     INTER_P7 = SPAVAR.IDENTI.NOIDAFF;        
     PAGE6.NOIDAFF = INTER_C7;        
   END;        
 ELSE PAGE6.NOIDAFF = '';        
         
     TRACE = 'GA20166 ===> ' !! 'END F6_1';        
         
     CALL PT;        
 $END F6_1;        
 /*-----------------------------------------------*/        
 F7: PROC REORDER ;        
     TRACE = 'GA20166 ===> ' !! 'F7';        
         
     CALL PT;        
 /********************************************        
 * PAGE6 : SCROLLING                         *        
 ********************************************/        
     TRACE = 'GA20166 ===> ' !! 'END F7';        
         
     CALL PT;        
 $END F7;        
 /*-----------------------------------------------*/        
         
 F8: PROC REORDER ;        
     TRACE = 'GA20166 ===> ' !! 'F8';        
         
     CALL PT;        
 /********************************************        
 * PAGE6 : PRESENTATION XML                  *        
 ********************************************/        
         
     TRACE = 'GA20166 ===> ' !! 'END F8';        
         
     CALL PT;        
 $END F8;        
 /*-----------------------------------------------*/        
         
 F9: PROC REORDER ;        
     TRACE = 'GA20166 ===> ' !! 'F9';        
         
     CALL PT;        
 /********************************************        
 * PAGE9 : PRESENTATION XML                  *        
 ********************************************/        
         
     TRACE = 'GA20166 ===> ' !! 'END F9';        
         
     CALL PT;        
 $END F9;        
 /*-----------------------------------------------*/        
         
 FA: PROC REORDER ;        
     TRACE = 'GA20166 ===> ' !! 'FA';        
         
     CALL PT;        
 /********************************************************************        
 * VALIDATION SYNTAXIQUE                                             *        
 * Ne pas afficher le resultat du devis tant que l'on n'est pas passe*        
 * en identification                                                 *        
 * Aller en identification light, puis en ctrl risques , puis        *        
 * en interventions commerciales                                     *        
 * AVANT de calculer et afficher le resultat (CDTYPOP='A')           *        
 ********************************************************************/        
 DCL  OPERAT_W                CHAR(01);        
         
 OPERAT_W = '';        
         
 IF JWB001.CDTRACE>=3 THEN        
  DO;        
   PUT SKIP LIST('GA20166- FA: SPA.CDOPTRN : ',SPA.CDOPTRN);        
   PUT SKIP LIST('SPA.INFOS_USER.CDMSETH:',        
                  SPA.INFOS_USER.CDMSETH);        
   PUT SKIP LIST('GA20166- JWB001.RETOUR   = ',JWB001.RETOUR);        
   PUT SKIP LIST('GA20166- MID6.CLE = ',MID6.CLE);        
   PUT SKIP LIST('GA20166- SPAVAR.CDTYPOP=',SPAVAR.CDTYPOP);        
   PUT SKIP LIST('GA20166- SPAVAR.NOIDDEV=', SPAVAR.NOIDDEV);        
   PUT SKIP LIST('GA20166- SPAVAR.NEWDEVI=', SPAVAR.NEWDEVI);        
   PUT SKIP LIST('GA20166- SPA.NOIDAFF   =', SPA.NOIDAFF);        
   PUT SKIP LIST('GA20166- SPA.NOPPAFF   =', SPA.NOPPAFF);        
   PUT SKIP LIST('GA20166- SPA.DANAIAF   =', SPA.DANAIAF);        
   PUT SKIP LIST('GA20166- SPA.CDCPOAF   =', SPA.CDCPOAF);        
   PUT SKIP LIST('GA20166- SPAVAR.IDENTI.NOIDAFF=',        
                           SPAVAR.IDENTI.NOIDAFF);        
   PUT SKIP LIST('GA20166- SPAVAR.IDENTI.DANAIAF=',        
                           SPAVAR.IDENTI.DANAIAF);        
   PUT SKIP LIST('GA20166- SPAVAR.IDENTI.CDCPOAF=',        
                           SPAVAR.IDENTI.CDCPOAF);        
   PUT SKIP LIST('GA20166- SCENARIO_5.DANAIPR=',        
                           SCENARIO_5.DANAIPR);        
   PUT SKIP LIST('GA20166- SCENARIO_5.CDPOPRE=',        
                           SCENARIO_5.CDPOPRE);        
   PUT SKIP LIST('MID6.CDSERCI = ',MID6.CDSERCI);        
   PUT SKIP LIST('MID6.CDSECAS = ',MID6.CDSECAS);        
   PUT SKIP LIST('MID6.CDSECA1 = ',MID6.CDSECA1);        
   PUT SKIP LIST('MID6.CDSEASS = ',MID6.CDSEASS);        
   PUT SKIP LIST('MID6.CDSEMOB = ',MID6.CDSEMOB);        
   PUT SKIP LIST('MID6.CDSEMO1 = ',MID6.CDSEMO1);        
   PUT SKIP LIST('MID6.CDTYPOM = ',MID6.CDTYPOM);        
   PUT SKIP LIST('MID6.CDNIVFR = ',MID6.CDNIVFR);        
   PUT SKIP LIST('MID6.CDRMRCI = ',MID6.CDRMRCI);        
   PUT SKIP LIST('MID6.CDRMVO1 = ',MID6.CDRMVO1);        
   PUT SKIP LIST('MID6.CDRMINI = ',MID6.CDRMINI);        
   PUT SKIP LIST('MID6.CDRMBRI = ',MID6.CDRMBRI);        
   PUT SKIP LIST('MID6.CDRMDM3 = ',MID6.CDRMDM3);        
   PUT SKIP LIST('MID6.CDRMDM4 = ',MID6.CDRMDM4);        
   PUT SKIP LIST('spa.noidusr:', SPA.NOIDUSR);        
 END;        
         
 CALL FE;        
 IF SCENARI.TBSCENA(9) THEN RETURN;        
         
         
 ERREUR = OFF;        
 CDRTPGM_W = '';        
         
 /* Si on a affiche la Page Resultat : On revient avec un choix */        
 /* ----------------------------------------------------------- */        
         
 IF SPAVAR.CDTYPOP = 'A' THEN        
   DO;        
     /* Controler si on a choisi des garanties */        
     CALL FA_1;        
     IF ERREUR THEN        
       DO;        
         JWB001.CDRTPGM = CDRTPGM_W;        
         RETURN;        
       END;        
         
     /* Si on est dans les garages conventionn{s sur l'extranet */        
     IF JWB001.CDEVCLI = 'E'        
      & SPA.TYPUSER = 'RA'   THEN        
       DO;        
         CALL LEC_TAB('EXRA',SUBSTR(SPA.NOIDUSR,4)!!SPA.NOSQUSR,        
                       ADDR(TBSM_EXRA));        
         SELECT(JWB001.CDRTPGM);        
           WHEN('')DO;        
             IF TBSM_EXRA.CDEGARG = '' THEN        
               DO;        
                 IF MID6.CLE = 'S'        
                  & TBSM_EXRA.CDVANCO = 'N' THEN        
                   DO;        
                     CDRTPGM_W = 'A20166' !! '021';        
                     JWB001.CDRTPGM = 'A20166' !! '021';        
                     ERREUR = ON;        
                     RETURN;        
                   END;        
               END;        
             ELSE        
               DO;        
                 CDRTPGM_W = 'A20166' !! '022';        
                 JWB001.CDRTPGM = 'A20166' !! '022';        
                 ERREUR = ON;        
                 RETURN;        
               END;        
           END;        
           OTHER DO;        
             ERREUR = ON;        
             RETURN;        
           END;        
         END;        
       END;        
     /* maj devis avec les choix de garanties */        
     CALL MAJ_DEVIS_CHOIX;        
         
     SELECT(MID6.CLE);        
       WHEN('M') SPAVAR.CDTYPOP = 'M'; #########################################        
       WHEN('I') SPAVAR.CDTYPOP = 'L'; #####################        
       WHEN('P') SPAVAR.CDTYPOP = 'P'; #######################        
       WHEN('S') DO;        
           SPAVAR.CDTYPOP = 'S';        
         
           IF SPA.CDOPTRN ^= 'A2DVE' THEN        
             DO;        
               /* Depart vers identification complete */        
               JWB001.CDRTPGM = 'HELP';        
               SCENARI.CDTYSEL = '3';        
               RETURN;        
             END;        
         END;        
       OTHER; #########################################################        
     END;        
   END;        
         
 IF JWB001.RETOUR THEN        
   /* Retour guidance ... */        
   /* ------------------- */        
   SELECT(SPAVAR.CDTYPOP);        
     WHEN('I') DO;        
       /* ==>  retour identification light */        
       CALL FA_2;        
       /* On va enchainer directement la guidance Ctrl Risque */        
       JWB001.RETOUR = OFF;        
     END;        
         
     WHEN('K','Q') DO;        
       /* ==>  retour controle de risques */        
       CALL FA_3;        
       CALL INTERV_COM;        
         
       IF ERREUR THEN        
         DO;        
           SPAVAR.CDTYPOP = 'E';        
           RETURN;        
         END;        
       IF SPAVAR.CDTYPOP = 'Q' THEN        
         DO;        
           SPAVAR.NEWDEVI = 'Y';        
         
           CALL ENREGISTRER_DEVIS; ########################        
           CALL MAJ_DEVIS_CHOIX;   ##########################        
         
           SPAVAR.CDTYPOP = 'S';        
         END;        
       JWB001.RETOUR = OFF;        
     END;        
         
     WHEN('S') DO;        
       /* ==>  retour identification complete pour souscription */        
       /*      on revient avec un affilie mais est-ce le mme ? */        
         
       CALL FA_4;        
       IF ERREUR THEN        
         DO;        
           IF CDRTPGM_W = 'D' THEN        
             DO;        
               /* discordance date de naissance/Code postal */        
               /* retourne au scenrio 5 pour infos conducteur.        
                  Un nouveau devis sera cree quand on reviendra au        
                  scenario 6        
               */        
               SPAVAR.CDTYPOP = 'R';        
               SPA.LTOPCOM = 'A20166' !! '011';        
               ERREUR = OFF;        
               RETURN;        
             END;        
           IF CDRTPGM_W = 'A' THEN        
             DO;        
               /* Affilie different : refaire le ctrl risques */        
               SPAVAR.CDTYPOP = 'Q'; ################################        
               ERREUR = OFF;        
               JWB001.RETOUR = OFF;        
             END;        
         END;        
       END;        
     OTHER;        
   END;        
 /*        
   Attention :        
   Ce n'est pas parce qu'on est alle en ID light qu'on revient avec        
   CDMSETH e Yes. On reste sur le site public tant qu'on n'entre pas        
   sur le site 'Mon site Ethias' !!!!        
   On repart donc chaque fois en ID light !!!!        
 */        
         
 SELECT;        
   WHEN(SPAVAR.CDTYPOP = 'S')                        OPERAT_W = '6';        
   WHEN(SPAVAR.CDTYPOP = 'P')                        OPERAT_W = '6';        
   WHEN(SPAVAR.CDTYPOP = 'L')                        OPERAT_W = '6';        
   WHEN(SPAVAR.CDTYPOP = 'M')                        OPERAT_W = '6';        
         
   WHEN(SPA.CDOPTRN = 'A2SOU')                       OPERAT_W = '4';        
   WHEN(SPA.CDOPTRN = 'A2CDV')                       OPERAT_W = '4';        
   WHEN(SPA.CDOPTRN = 'A2RDV')                       OPERAT_W = '4';        
   WHEN(SPA.CDOPTRN = 'A2EDV')                       OPERAT_W = '4';        
         
   WHEN(SPAVAR.CDTYPOP = 'Q')                        OPERAT_W = '5';        
         
   WHEN(SPAVAR.CDTYPOP = 'K')                        OPERAT_W = '3';        
         
         
   WHEN(SPAVAR.CDTYPOP = 'I')                        OPERAT_W = '2';        
   WHEN(INFOS_USER.CDMSETH = 'Y'        
      & SPAVAR.IDENTI.NOIDAFF > 0)                   OPERAT_W = '2';        
   WHEN(SPA.CDOPTRN = 'A2DVE')                       OPERAT_W = '2';        
   WHEN(SPA.CDOPTRN = 'A2MSE')                       OPERAT_W = '2';        
   WHEN(JWB001.CDEVCLI = 'E' & SPA.TYPUSER = 'RA')   OPERAT_W = '2';        
         
   OTHER                                             OPERAT_W = '1';        
 END;        
         
 IF OPERAT_W = '1' THEN        
   DO;        
     IF JWB001.CDTRACE>=3 THEN        
       DO;        
         PUT SKIP LIST('GA20166- Depart vers ID Light');        
         PUT SKIP LIST('SPA.CDOPTRN=',SPA.CDOPTRN);        
         PUT SKIP LIST('SPA.NOIDAFF=',SPA.NOIDAFF);        
         PUT SKIP LIST('SPA.NOPPAFF=',SPA.NOPPAFF);        
         PUT SKIP LIST('SPA.LTNMAFF=',SPA.LTNMAFF);        
         PUT SKIP LIST('INFOS_USER.LTSITE =',INFOS_USER.LTSITE);        
         PUT SKIP LIST('INFOS_USER.CDAFGRP=',INFOS_USER.CDAFGRP);        
         PUT SKIP LIST('INFOS_USER.CDMSTEH=',INFOS_USER.CDMSETH);        
         
       END;        
         
     /* On est inconnu => faire ID Light */        
     /* -------------------------------- */        
     /* ==> sauver en DSM88 : on n'a pas encore calcule le devis        
        mais on doit sauver qque part les infos du devis        
        au cas o on revient avec un mail.        
        Il faut un numero de devis pour sauver les datas dans DSM88        
     */        
     SPAVAR.IDENTI.NOIDAFF = 0;        
         
     CALL ENREGISTRER_DEVIS;        
         
     IF SPA.CDOPTRN = 'A2M20'        
       THEN CALL MAJ_STAT_M20;        
         
     SPAVAR.CDTYPOP = 'I';   #####################################        
     JWB001.CDRTPGM = 'HELP';        
     SCENARI.CDTYSEL = '1';        
     RETURN;        
   END;        
         
 IF OPERAT_W = '2' THEN        
   /* On a un NOIDAFF        
      et on doit faire le ctrl risque + les interv commerciales        
   */        
   DO;        
     IF SPAVAR.IDENTI.NOIDAFF = 0 THEN        
       DO;        
         IF JWB001.CDTRACE >= 3 THEN        
           DO;        
         PUT SKIP LIST('GA20166 Anomalie avec OPERAT_W=2 !!!');        
         PUT SKIP LIST('SPA.CDOPTRN=',SPA.CDOPTRN);        
         PUT SKIP LIST('SPA.NOIDAFF=',SPA.NOIDAFF);        
         PUT SKIP LIST('SPA.NOPPAFF=',SPA.NOPPAFF);        
         PUT SKIP LIST('SPAVAR.IDENTI.NOIDAFF=',SPAVAR.IDENTI.NOIDAFF);        
         PUT SKIP LIST('SPAVAR.CDTYPOP=',SPAVAR.CDTYPOP);        
         PUT SKIP LIST('SPAVAR.NEWDEVI=',SPAVAR.NEWDEVI);        
         PUT SKIP LIST('SPAVAR.NOIDDEV=',SPAVAR.NOIDDEV);        
         PUT SKIP LIST('SPAVAR.NBRELAN=',SPAVAR.NBRELAN);        
         PUT SKIP LIST('INFOS_USER.CDMSTEH=',INFOS_USER.CDMSETH);        
           END;        
       END;        
         
     /* Depart guidance Ctrl Risques */        
     SPAVAR.CDTYPOP = 'K';        
     JWB001.CDRTPGM = 'HELP';        
     SCENARI.CDTYSEL = '2';        
         
     /* !!!!! car apres on va aller en FB puis FD  et switcher sur        
        page 6 pour afficher le resultat du devis        
     */        
     SCENARI.TBSCENA(12) = OFF;        
         
     RETURN;        
   END;        
         
 IF OPERAT_W = '3' THEN        
   /* On a un NOIDAFF        
      et ctrl risque + les interv commerciales sont faite :        
      Calculer le devis        
      Aller en FD: switch sur scenario 6 pour affichage resultat        
   */        
   DO;        
     IF SPAVAR.IDENTI.NOIDAFF = 0 THEN        
       DO;        
         IF JWB001.CDTRACE >= 3 THEN        
           DO;        
         PUT SKIP LIST('GA20166 Anomalie avec OPERAT_W=3 !!!');        
         PUT SKIP LIST('SPA.CDOPTRN=',SPA.CDOPTRN);        
         PUT SKIP LIST('SPA.NOIDAFF=',SPA.NOIDAFF);        
         PUT SKIP LIST('SPA.NOPPAFF=',SPA.NOPPAFF);        
         PUT SKIP LIST('SPAVAR.IDENTI.NOIDAFF=',SPAVAR.IDENTI.NOIDAFF);        
         PUT SKIP LIST('SPAVAR.CDTYPOP=',SPAVAR.CDTYPOP);        
         PUT SKIP LIST('SPAVAR.NEWDEVI=',SPAVAR.NEWDEVI);        
         PUT SKIP LIST('SPAVAR.NOIDDEV=',SPAVAR.NOIDDEV);        
         PUT SKIP LIST('SPAVAR.NBRELAN=',SPAVAR.NBRELAN);        
         PUT SKIP LIST('INFOS_USER.CDMSTEH=',INFOS_USER.CDMSETH);        
           END;        
       END;        
         
     CALL ENREGISTRER_DEVIS; #################################################        
         
     /* car on a besoin du CDPADIV pour calculer le devis ...        
        Quand on est en MSE on ne va pas ID et donc on ne sauve pas        
        le devis avant de le calculer (on calculait et puis on sauvait        
        mais cela ne va pas !!!!        
         
        On n'a pas encore enregistre le devis, donc on n'a pas        
        encore le CDPADIV        
     */        
     CALL CALCULER_DEVIS;  #####################################        
         
     IF ERREUR THEN        
       DO;        
         JWB001.CDRTPGM = '';        
         SPAVAR.CDTYPOP = 'E';        
         RETURN;        
       END;        
         
  /* CALL ENREGISTRER_DEVIS;    ==> sauver en DSM88 devis identif  */        
         
     /* Afficher le resultat du devis */        
     SPAVAR.CDTYPOP = 'A';        
     /* Comme on a remis BOAUTOM = OFF en retour du Ctrl de risques,        
        il va en sortie du FA aller en FB puis FD et switcher sur        
        le scenario 6 e nouveau mais cette fois on a CDTYPOP = A        
        et il va afficher le devis en F6        
     */        
   END;        
         
 IF OPERAT_W = '4' THEN        
   DO;        
     /* 1) On vient du scenario 1 avec A2SOU :        
           faire le ctrl de risques + interv com        
           (on a rien dans le CDTYPOP) et ensuite ...        
           - si A2SOU => aller page 9 pour la souscription        
           On ne passe que 2 fois ici : CDTYPOP = vide et CDTYPOP=K        
         
     /* 2) On vient du scenario 1 avec A2CDV ou A2RDV ou A2EDV :        
           faire le ctrl de risques + interv com        
           (on a rien dans le CDTYPOP) et ensuite ...        
           aller sur page E pour afficher le devis        
           On ne passe que 2 fois ici : CDTYPOP = vide et CDTYPOP=K        
         
        PS: quand on revient de la page E, on CDTYPOP = 'A', et        
           on ne pourra que choisir S,L,M ou P        
           et on ne doit pas refaire le ctrl de risques car on est deje        
           passe par ici en venant du scenario 1        
     */        
     IF SPAVAR.CDTYPOP = '' THEN        
       DO;        
         /* Depart guidance Ctrl Risques */        
         SPAVAR.CDTYPOP = 'K';        
         JWB001.CDRTPGM = 'HELP';        
         SCENARI.CDTYSEL = '2';        
         /* Le BOAUTOM e OFF fait que apres on ira en FB puis FD        
            si on le laisse e ON il ne va pas en FD ????        
         */        
         SCENARI.TBSCENA(12) = OFF;        
         
         RETURN;        
         /* On reviendra avec cdtypop = K mais le CDOPTRN est teste        
            avant        
         */        
       END;        
         
     CALL CALCULER_DEVIS;  ########################################        
         
     IF ERREUR THEN        
       DO;        
         JWB001.CDRTPGM = '';        
         SPAVAR.CDTYPOP = 'E';        
         RETURN;        
       END;        
         
     /* SI A2SOU : on est revenu apres S1096 pour souscription et on        
        a inscrit un nouvel affilie !!!        
        Or le devis qui avait ete calcule et affiche a ete enregistre        
        sur la personne qui s'etait presentee en ID Light        
        Il faut verifier que c'est bien les mme renseignements que le        
        devis        
     */        
     IF SPA.CDOPTRN = 'A2SOU' THEN        
       DO;        
         CALL FA_5;        
         IF ERREUR THEN        
           DO;        
             SPAVAR.CDTYPOP = 'R';        
             SPA.LTOPCOM = 'A20166' !! '011';        
             ERREUR = OFF;        
             RETURN;        
           END;        
       END;        
         
     /* on va traiter l'operation en FC */        
     IF SPA.CDOPTRN = 'A2SOU'        
        THEN SPAVAR.CDTYPOP = 'S';        
         
     IF SPA.CDOPTRN = 'A2CDV'        
      ! SPA.CDOPTRN = 'A2RDV'        
      ! SPA.CDOPTRN = 'A2EDV'        
       THEN SPAVAR.CDTYPOP = 'V'; ###########################        
         
   END;        
         
 IF OPERAT_W = '5' THEN        
   DO;        
     /* Refaire le ctrl de risques + interventions commerciales        
        car on a change d'affilie en S1096 (id complete) lors de la        
        demande de souscription        
     */        
     /* Depart guidance Ctrl Risques */        
     /* On a CDTYPOP = Q */        
     JWB001.CDRTPGM = 'HELP';        
     SCENARI.CDTYSEL = '2';        
     RETURN;        
     /* On reviendra avec cdtypop = S => OPERAT_W=6        
     */        
   END;        
         
 IF OPERAT_W = '6' THEN        
   DO;        
     /* executer les operations choisies :        
        Souscrire / e-mail / imprimer / sauvegarder        
     */        
     /* on va traiter l'operation en FC */        
   END;        
         
     TRACE = 'GA20166 ===> ' !! 'END FA';        
         
     CALL PT;        
 $END FA;        
 /*-----------------------------------------------*/        
 FA_1: PROC REORDER ;        
     TRACE = 'GA20166 ===> ' !! 'FA_1';        
         
     CALL PT;        
 /********************************************        
 * CONTROLER GARANTIES CHOISIES              *        
 ********************************************/        
 DCL TEST_LIM           DEC FIXED(9,2);        
         
 IF MID6.CDSERCI = ''        
  & MID6.CDSECAS = ''        
  & MID6.CDSECA1 = ''        
  & MID6.CDSEASS = ''        
  & MID6.CDTYPOM = ''        
  & MID6.CDNIVFR = ''        
  & MID6.CDSEMOB = ''        
  & MID6.CDSEMO1 = ''        
  & MID6.CDRMRCI = ''        
  & MID6.CDRMVO1 = ''        
  & MID6.CDRMINI = ''        
  & MID6.CDRMBRI = ''        
  & MID6.CDRMDM3 = ''        
  & MID6.CDRMDM4 = ''        
   THEN DO;        
          CDRTPGM_W = 'A20166' !! '006';        
          ERREUR    = ON;        
          RETURN;        
        END;        
 IF MID6.CLE ^= 'S'        
  & MID6.CLE ^= 'M'        
  & MID6.CLE ^= 'I'        
  & MID6.CLE ^= 'P' THEN        
   DO;        
     /* Choix erronn{ !' */        
     CDRTPGM_W = 'A20166' !! '019';        
     ERREUR    = ON;        
     RETURN;        
   END;        
         
 IF MID6.CDSERCI ^= 'Y' THEN        
   DO;        
     CDRTPGM_W = 'A20166' !! '013';        
     ERREUR    = ON;        
     RETURN;        
   END;        
         
 /* 1 seule protection juridique */        
 IF MID6.CDSECAS = 'Y' & MID6.CDSECA1 = 'Y'        
   THEN DO;        
          CDRTPGM_W = 'A20166' !! '010';        
          ERREUR    = ON;        
          RETURN;        
        END;        
         
 /*1 seul mobilite plus possible */        
 IF MID6.CDSEMOB = 'Y' & MID6.CDSEMO1= 'Y'        
   THEN DO;        
          CDRTPGM_W = 'A20166' !! '024';        
          ERREUR    = ON;        
          RETURN;        
        END;        
         
 /*cki le 02.04.2009 : Pas de mobility si pas 21 ans */        
 IF (MID6.CDSEMOB = 'Y' ! MID6.CDSEMO1= 'Y')        
  & SCENARIO_5.AGEPREN < 21        
   THEN DO;        
          CDRTPGM_W = 'A20166' !! '025';        
          ERREUR    = ON;        
          RETURN;        
        END;        
         
 IF (MID6.CDTYPOM = '3' ! MID6.CDTYPOM = '4')        
  & (MID6.CDNIVFR ^= '1'        
  &  MID6.CDNIVFR ^= '2'        
  &  MID6.CDNIVFR ^= '3')        
   THEN DO;        
          CDRTPGM_W = 'A20166' !! '019';        
          ERREUR    = ON;        
          RETURN;        
        END;        
         
 TEST_LIM = SCENARIO_5.VACATVH + SCENARIO_4.TOTALAC;        
         
 IF MID6.CDTYPOM ^= ''        
  & TEST_LIM > 60000.00 THEN        
   DO;        
     CDRTPGM_W = 'A20166' !! '018';        
     ERREUR    = ON;        
     RETURN;        
   END;        
         
 IF SCENARIO_5.CDPOSRM = 'Y' THEN        
   DO;        
     IF MID6.CDRMRCI ^= 'Y' THEN        
       DO;        
         CDRTPGM_W = 'A20166' !! '015';        
         ERREUR    = ON;        
         RETURN;        
       END;        
     /* Pas de DM sur remorque si pas de OM sur auto !*/        
     IF (MID6.CDRMDM3 = 'Y' !        
         MID6.CDRMDM4 = 'Y') &        
         MID6.CDTYPOM = '' THEN        
       DO;        
         CDRTPGM_W = 'A20166' !! '016';        
         ERREUR    = ON;        
         RETURN;        
       END;        
   END;        
         
 /* M{moriser les garanties choisies auto */        
 SCENARIO_6.SELECT_GAR = '';        
 SCENARIO_6.SELECT_GAR.CDSERCI = MID6.CDSERCI;        
 SCENARIO_6.SELECT_GAR.CDSECAS = MID6.CDSECAS;        
 SCENARIO_6.SELECT_GAR.CDSECA1 = MID6.CDSECA1;        
 SCENARIO_6.SELECT_GAR.CDSEASS = MID6.CDSEASS;        
 SCENARIO_6.SELECT_GAR.CDTYPOM = MID6.CDTYPOM;        
 SCENARIO_6.SELECT_GAR.CDNIVFR = MID6.CDNIVFR;        
 SCENARIO_6.SELECT_GAR.CDSEMOB = MID6.CDSEMOB;        
 SCENARIO_6.SELECT_GAR.CDSEMO1 = MID6.CDSEMO1;        
         
 /* Attention , a l'{cran on a pass{ un tableau de 5 lignes        
    dont la cinqui}me est a zero si jeune conducteur qui ne peuvent        
    pas souscrire une omnium sans franchise        
 */        
 IF SCENARIO_5.CDJEUNE = 1 THEN        
   SELECT;        
     WHEN(MID6.CDNIVFR = '1') SCENARIO_6.SELECT_GAR.CDNIVFR = '2';        
     WHEN(MID6.CDNIVFR = '2') SCENARIO_6.SELECT_GAR.CDNIVFR = '3';        
     OTHER;        
   END;        
         
 /* Si pas souscrire Omnium => pas de TMC !! */        
 IF SCENARIO_6.SELECT_GAR.CDNIVFR = '' THEN        
   DO;        
     SCENARIO_5.CDASTMC = 'N';        
   END;        
         
 /* M{moriser les garanties choisies remorque */        
 IF SCENARIO_5.CDPOSRM = 'Y' THEN        
   DO;        
     SCENARIO_6.SELECT_GAR.CDRMRCI = MID6.CDRMRCI;        
     SCENARIO_6.SELECT_GAR.CDRMVO1 = MID6.CDRMVO1;        
     SCENARIO_6.SELECT_GAR.CDRMIN1 = MID6.CDRMINI;        
     SCENARIO_6.SELECT_GAR.CDRMBRI = MID6.CDRMBRI;        
     SCENARIO_6.SELECT_GAR.CDRMDM3 = MID6.CDRMDM3;        
     SCENARIO_6.SELECT_GAR.CDRMDM4 = MID6.CDRMDM4;        
   END;        
 IF JWB001.CDTRACE >= 3 THEN        
   DO;        
     PUT SKIP LIST('SCENARIO_6.SELECT_GAR.CDSERCI=',        
                    SCENARIO_6.SELECT_GAR.CDSERCI);        
     PUT SKIP LIST('SCENARIO_6.SELECT_GAR.CDSECAS=',        
                    SCENARIO_6.SELECT_GAR.CDSECAS);        
     PUT SKIP LIST('SCENARIO_6.SELECT_GAR.CDSECA1=',        
                    SCENARIO_6.SELECT_GAR.CDSECA1);        
     PUT SKIP LIST('SCENARIO_6.SELECT_GAR.CDSEASS=',        
                    SCENARIO_6.SELECT_GAR.CDSEASS);        
     PUT SKIP LIST('SCENARIO_6.SELECT_GAR.CDSEMOB=',        
                    SCENARIO_6.SELECT_GAR.CDSEMOB);        
     PUT SKIP LIST('SCENARIO_6.SELECT_GAR.CDSEMO1=',        
                    SCENARIO_6.SELECT_GAR.CDSEMO1);        
     PUT SKIP LIST('SCENARIO_6.SELECT_GAR.CDTYPOM=',        
                    SCENARIO_6.SELECT_GAR.CDTYPOM);        
     PUT SKIP LIST('SCENARIO_6.SELECT_GAR.CDNIVFR=',        
                    SCENARIO_6.SELECT_GAR.CDNIVFR);        
     PUT SKIP LIST('SCENARIO_6.SELECT_GAR.CDRMRCI=',        
                    SCENARIO_6.SELECT_GAR.CDRMRCI);        
     PUT SKIP LIST('SCENARIO_6.SELECT_GAR.CDRMVO1=',        
                    SCENARIO_6.SELECT_GAR.CDRMVO1);        
     PUT SKIP LIST('SCENARIO_6.SELECT_GAR.CDRMIN1=',        
                    SCENARIO_6.SELECT_GAR.CDRMIN1);        
     PUT SKIP LIST('SCENARIO_6.SELECT_GAR.CDRMBRI=',        
                    SCENARIO_6.SELECT_GAR.CDRMBRI);        
     PUT SKIP LIST('SCENARIO_6.SELECT_GAR.CDRMDM3=',        
                    SCENARIO_6.SELECT_GAR.CDRMDM3);        
     PUT SKIP LIST('SCENARIO_6.SELECT_GAR.CDRMDM4=',        
                    SCENARIO_6.SELECT_GAR.CDRMDM4);        
 END;        
         
     TRACE = 'GA20166 ===> ' !! 'END FA_1';        
         
     CALL PT;        
 $END FA_1;        
         
 /*-----------------------------------------------*/        
 FA_2: PROC REORDER ;        
     TRACE = 'GA20166 ===> ' !! 'FA_2';        
         
     CALL PT;        
 /************************************        
 * RETOUR DE l'IDENTIFICATION LIGHT  *        
 ************************************/        
         
 /* Sauver l' affilie dans SPAVAR.IDENTI  */        
         
 IF JWB001.CDTRACE >= 3 THEN        
   DO;        
    PUT SKIP LIST('GA20166- Retour identification light');        
    PUT SKIP LIST('GA20166- ---------------------------');        
    PUT SKIP DATA(SAVERETOUR_ID);        
 END;        
         
 /* car on aperdu ce que la guidance a mit dans la SPA en sortie du        
    F2 quand il recharge la SPA d'avant l'appel guidance !!!        
 */        
 SPA.NOIDUSR = SAVERETOUR_ID.NOIDUSR;        
 SPA.NOSQUSR = SAVERETOUR_ID.NOSQUSR;        
         
 SPA.NOIDAFF = SAVERETOUR_ID.NOIDAFF;        
 SPA.CDRSAFF = SAVERETOUR_ID.CDRSAFF;        
 SPA.NOIDAFF = SAVERETOUR_ID.NOIDAFF;        
 SPA.LTNMAFF = SAVERETOUR_ID.LTNMAFF;        
 SPA.DANAIAF = SAVERETOUR_ID.DANAIAF;        
 SPA.CDSEXAF = SAVERETOUR_ID.CDSEXAF;        
 SPA.CDLGEAF = SAVERETOUR_ID.CDLGEAF;        
 SPA.LTRUEAF = SAVERETOUR_ID.LTRUEAF;        
 SPA.NOHA1AF = SAVERETOUR_ID.NOHA1AF;        
 SPA.NOHA2AF = SAVERETOUR_ID.NOHA2AF;        
 SPA.LTLOCAF = SAVERETOUR_ID.LTLOCAF;        
 SPA.CDCPOAF = SAVERETOUR_ID.CDCPOAF;        
         
 SPAVAR.IDENTI = '';        
         
 SPAVAR.IDENTI.NOIDAFF = SAVERETOUR_ID.NOIDAFF;        
 SPAVAR.IDENTI.EMAILAF = SAVERETOUR_ID.LTEMAIL;        
         
 IF SAVERETOUR_ID.DANAIAF > 0 THEN        
   DO;        
     INTER_P10 = SAVERETOUR_ID.DANAIAF; ######################        
     INTER_C7  = SUBSTR(INTER_C10,4,7);        
     CALL F_CTRL_DA(INTER_C7,'1');        
     IF ERREUR THEN        
       DO;        
         CDRTPGM_W = 'A20166' !! '011';        
         RETURN;        
       END;        
   END;        
 ELSE        
   DO;        
     CDRTPGM_W = 'A20166' !! '011';        
     ERREUR    = ON;        
     RETURN;        
   END;        
         
 SPAVAR.IDENTI.CDRSAFF = SAVERETOUR_ID.CDRSAFF;        
 /* Celui qui souscrit ... */        
 SPAVAR.IDENTI.NOIDAFF = SAVERETOUR_ID.NOIDAFF;        
 I = INDEX(SAVERETOUR_ID.LTNMAFF,'  ');        
 SPAVAR.IDENTI.LTNMAFF = SUBSTR(SAVERETOUR_ID.LTNMAFF,1,I-1);        
 SPAVAR.IDENTI.LTPRAFF = TRIM(SUBSTR(SAVERETOUR_ID.LTNMAFF,I+1,30-I));        
 SPAVAR.IDENTI.DANAIAF = KGI011J_RO.JJMMAAAA_C8;        
 SPAVAR.IDENTI.CDSEXAF = SAVERETOUR_ID.CDSEXAF;        
 SPAVAR.IDENTI.CDLGEAF = SAVERETOUR_ID.CDLGEAF;        
 SPAVAR.IDENTI.LTRUEAF = SAVERETOUR_ID.LTRUEAF;        
 SPAVAR.IDENTI.NOHA1AF = SAVERETOUR_ID.NOHA1AF;        
 SPAVAR.IDENTI.NOHA2AF = SAVERETOUR_ID.NOHA2AF;        
 SPAVAR.IDENTI.LTLOCAF = SAVERETOUR_ID.LTLOCAF;        
 SPAVAR.IDENTI.CDCPOAF = SAVERETOUR_ID.CDCPOAF;        
 SPAVAR.IDENTI.EMAILAF = SAVERETOUR_ID.LTEMAIL;        
 SPAVAR.IDENTI.CDTYPRO = SAVERETOUR_ID.CDTYPRO;        
 SPAVAR.IDENTI.CDGEPRO = SAVERETOUR_ID.CDGEPRO;        
         
 IF JWB001.CDTRACE >= 3 THEN        
   DO;        
     PUT SKIP LIST('GA20166- Retour identification light');        
     PUT SKIP LIST('GA20166- ---------------------------');        
     PUT SKIP LIST('GA20166- SPA.CDOPTRN : ',SPA.CDOPTRN);        
     PUT SKIP LIST('GA20166- MID6.CLE = ',MID6.CLE);        
     PUT SKIP LIST('GA20166- SPAVAR.CDTYPOP=',SPAVAR.CDTYPOP);        
     PUT SKIP LIST('GA20166- SPAVAR.NOIDDEV=',SPAVAR.NOIDDEV);        
     PUT SKIP LIST('GA20166- SPA.INFOS_USER.CDMSETH=',        
                                  SPA.INFOS_USER.CDMSETH);        
     PUT SKIP LIST('GA20166- SPA.NOIDAFF=',SPA.NOIDAFF);        
     PUT SKIP LIST('GA20166- SPA.NOPPAFF=',SPA.NOPPAFF);        
     PUT SKIP LIST('GA20166 -SPA.DANAIAF=',SPA.DANAIAF);        
     PUT SKIP LIST('GA20166 -SPA.CDCPOAF=',SPA.CDCPOAF);        
     PUT SKIP LIST('SPAVAR.IDENTI.CDRSAFF=',SPAVAR.IDENTI.CDRSAFF);        
     PUT SKIP LIST('SPAVAR.IDENTI.NOIDAFF=',SPAVAR.IDENTI.NOIDAFF);        
     PUT SKIP LIST('SPAVAR.IDENTI.LTNMAFF=',SPAVAR.IDENTI.LTNMAFF);        
     PUT SKIP LIST('SPAVAR.IDENTI.LTPRAFF=',SPAVAR.IDENTI.LTPRAFF);        
     PUT SKIP LIST('SPAVAR.IDENTI.DANAIAF=',SPAVAR.IDENTI.DANAIAF);        
     PUT SKIP LIST('SPAVAR.IDENTI.CDSEXAF=',SPAVAR.IDENTI.CDSEXAF);        
     PUT SKIP LIST('SPAVAR.IDENTI.CDLGEAF=',SPAVAR.IDENTI.CDLGEAF);        
     PUT SKIP LIST('SPAVAR.IDENTI.LTRUEAF=',SPAVAR.IDENTI.LTRUEAF);        
     PUT SKIP LIST('SPAVAR.IDENTI.NOHA1AF=',SPAVAR.IDENTI.NOHA1AF);        
     PUT SKIP LIST('SPAVAR.IDENTI.NOHA2AF=',SPAVAR.IDENTI.NOHA2AF);        
     PUT SKIP LIST('SPAVAR.IDENTI.LTLOCAF=',SPAVAR.IDENTI.LTLOCAF);        
     PUT SKIP LIST('SPAVAR.IDENTI.CDCPOAF=',SPAVAR.IDENTI.CDCPOAF);        
     PUT SKIP LIST('SPAVAR.IDENTI.EMAILAF=',SPAVAR.IDENTI.EMAILAF);        
     PUT SKIP LIST('SPAVAR.IDENTI.CDTYPRO=',SPAVAR.IDENTI.CDTYPRO);        
     PUT SKIP LIST('SPAVAR.IDENTI.CDGEPRO=',SPAVAR.IDENTI.CDGEPRO);        
   END;        
         
     TRACE = 'GA20166 ===> ' !! 'END FA_2';        
         
     CALL PT;        
 $END FA_2;        
         
 /*-----------------------------------------------*/        
 FA_3: PROC REORDER ;        
     TRACE = 'GA20166 ===> ' !! 'FA_3';        
         
     CALL PT;        
 /******************************        
 * RETOUR CTRL RISQUES         *        
 ******************************/        
         
 IF SAVERETOUR_CR ^= ''        
   THEN SPAVAR.CDBLOCK = 'Y';        
   ELSE SPAVAR.CDBLOCK = '';        
         
 IF JWB001.CDTRACE >= 3 THEN        
   DO;        
    PUT SKIP LIST('GA20166- Retour ctrl risques ');        
    PUT SKIP LIST('GA20166- SAVERETOUR_CR=',SAVERETOUR_CR);        
    PUT SKIP LIST('GA20166- SPAVAR.CDBLOCK=',SPAVAR.CDBLOCK);        
   END;        
         
     TRACE = 'GA20166 ===> ' !! 'END FA_3';        
         
     CALL PT;        
 $END FA_3;        
         
 /*-----------------------------------------------*/        
 FA_4: PROC REORDER ;        
     TRACE = 'GA20166 ===> ' !! 'FA_4';        
         
     CALL PT;        
 /*******************************************************************        
 * RETOUR DE l'IDENTIFICATION COMPLETE APRES DEMANDE DE SOUSCRIPION *        
 *******************************************************************/        
 DCL  OLDAFFI    FIXED(7);        
         
 OLDAFFI = SPAVAR.IDENTI.NOIDAFF;#####################################        
         
 /*        
    Attention, la spa du programme a ete restauree apres sortie du F2        
    donc, il faut remettre le SPA.NOIDAFF rendu par la S1096 ...        
 */        
 SPA.NOIDUSR = SAVERETOUR_ID.NOIDUSR;        
 SPA.NOSQUSR = SAVERETOUR_ID.NOSQUSR;        
         
 SPA.CDRSAFF = SAVERETOUR_ID.CDRSAFF;        
 SPA.NOIDAFF = SAVERETOUR_ID.NOIDAFF;        
 SPA.LTNMAFF = SAVERETOUR_ID.LTNMAFF;        
 SPA.DANAIAF = SAVERETOUR_ID.DANAIAF;        
 SPA.CDSEXAF = SAVERETOUR_ID.CDSEXAF;        
 SPA.CDLGEAF = SAVERETOUR_ID.CDLGEAF;        
 SPA.LTRUEAF = SAVERETOUR_ID.LTRUEAF;        
 SPA.NOHA1AF = SAVERETOUR_ID.NOHA1AF;        
 SPA.NOHA2AF = SAVERETOUR_ID.NOHA2AF;        
 SPA.LTLOCAF = SAVERETOUR_ID.LTLOCAF;        
 SPA.CDCPOAF = SAVERETOUR_ID.CDCPOAF;        
 SPAS1096.CDTYPRO = SAVERETOUR_ID.CDTYPRO;        
 SPAS1096.CDGEPRO = SAVERETOUR_ID.CDGEPRO;        
         
 IF JWB001.CDTRACE >= 3 THEN        
  DO;        
   PUT SKIP LIST('GA20166- Retour identification complete ');        
   PUT SKIP LIST('GA20166- !!! la spa propre a ete rechargee apres F2');        
   PUT SKIP LIST('GA20166- SPA.CDOPTRN : ',SPA.CDOPTRN);        
   PUT SKIP LIST('GA20166- SPAS1096.LTEMAIL=',SPAS1096.LTEMAIL);        
   PUT SKIP LIST('GA20166- SPAS1096.NODEVI =',SPAS1096.NODEVI);        
   PUT SKIP LIST('GA20166- MID6.CLE = ',MID6.CLE);        
   PUT SKIP LIST('GA20166- SPA.INFOS_USER.CDMSETH=',        
                                SPA.INFOS_USER.CDMSETH);        
   PUT SKIP LIST('GA20166- SPA.NOIDAFF=',SPA.NOIDAFF);        
   PUT SKIP LIST('GA20166- SPA.NOPPAFF=',SPA.NOPPAFF);        
   PUT SKIP LIST('GA20166 -SPA.DANAIAF=',SPA.DANAIAF);        
   PUT SKIP LIST('GA20166 -SPA.CDCPOAF=',SPA.CDCPOAF);        
   PUT SKIP LIST('GA20166- SPAS1096.CDTYPRO=',SPAS1096.CDTYPRO);        
   PUT SKIP LIST('GA20166- SPAS1096.CDGEPRO=',SPAS1096.CDGEPRO);        
   PUT SKIP LIST('GA20166 -SCENARIO_5.DANAIPR=',SCENARIO_5.DANAIPR);        
   PUT SKIP LIST('GA20166 -SCENARIO_5.CDPOPRE=',SCENARIO_5.CDPOPRE);        
   PUT SKIP LIST('GA20166 -SCENARIO_5.CDTYPRO=',SCENARIO_5.CDTYPRO);        
   PUT SKIP LIST('GA20166 -SCENARIO_5.CDGEPRO=',SCENARIO_5.CDGEPRO);        
   PUT SKIP LIST('GA20166- SPAVAR.NOIDAFF=',SPAVAR.NOIDAFF);        
   PUT SKIP LIST('GA20166- SPAVAR.NOIDDEV=',SPAVAR.NOIDDEV);        
  END;        
         
 /* Attention, il se peut que l'affifie qui souscrit ne soit pas le        
    meme que celui qui a fait le devis ...        
    Dans ce cas, il faut refaire le controle de risque        
         
    Si la date de naissance        
    ou le code postal        
    ou la profession        
    renseignes pour le devis ne sont pas idem        
    ==> Retourner sur la page 5 et refaire un nouveau devis        
 */        
 IF SAVERETOUR_ID.DANAIAF > 0 THEN        
   DO;        
     INTER_P10 = SAVERETOUR_ID.DANAIAF; ######################        
     INTER_C7  = SUBSTR(INTER_C10,4,7);        
     CALL F_CTRL_DA(INTER_C7,'1');        
     IF ERREUR THEN        
       DO;        
         CDRTPGM_W = 'A20166' !! '011';        
         RETURN;        
       END;        
   END;        
 ELSE        
   DO;        
     CDRTPGM_W = 'A20166' !! '011';        
     ERREUR    = ON;        
     RETURN;        
   END;        
         
 SPAVAR.IDENTI.CDRSAFF = SAVERETOUR_ID.CDRSAFF;        
 /* Celui qui souscrit ... */        
 SPAVAR.IDENTI.NOIDAFF = SAVERETOUR_ID.NOIDAFF;        
 I = INDEX(SAVERETOUR_ID.LTNMAFF,'  ');        
 SPAVAR.IDENTI.LTNMAFF = SUBSTR(SAVERETOUR_ID.LTNMAFF,1,I-1);        
 SPAVAR.IDENTI.LTPRAFF = TRIM(SUBSTR(SAVERETOUR_ID.LTNMAFF,I+1,30-I));        
 SPAVAR.IDENTI.DANAIAF = KGI011J_RO.JJMMAAAA_C8;        
 SPAVAR.IDENTI.CDSEXAF = SAVERETOUR_ID.CDSEXAF;        
 SPAVAR.IDENTI.CDLGEAF = SAVERETOUR_ID.CDLGEAF;        
 SPAVAR.IDENTI.LTRUEAF = SAVERETOUR_ID.LTRUEAF;        
 SPAVAR.IDENTI.NOHA1AF = SAVERETOUR_ID.NOHA1AF;        
 SPAVAR.IDENTI.NOHA2AF = SAVERETOUR_ID.NOHA2AF;        
 SPAVAR.IDENTI.LTLOCAF = SAVERETOUR_ID.LTLOCAF;        
 SPAVAR.IDENTI.CDCPOAF = SAVERETOUR_ID.CDCPOAF;        
 SPAVAR.IDENTI.EMAILAF = SAVERETOUR_ID.LTEMAIL;        
 SPAVAR.IDENTI.CDTYPRO = SAVERETOUR_ID.CDTYPRO;        
 SPAVAR.IDENTI.CDGEPRO = SAVERETOUR_ID.CDGEPRO;        
         
 IF JWB001.CDTRACE >= 3 THEN        
   DO;        
     PUT SKIP LIST('SPAVAR.IDENTI.CDRSAFF=',SPAVAR.IDENTI.CDRSAFF);        
     PUT SKIP LIST('SPAVAR.IDENTI.NOIDAFF=',SPAVAR.IDENTI.NOIDAFF);        
     PUT SKIP LIST('SPAVAR.IDENTI.LTNMAFF=',SPAVAR.IDENTI.LTNMAFF);        
     PUT SKIP LIST('SPAVAR.IDENTI.LTPRAFF=',SPAVAR.IDENTI.LTPRAFF);        
     PUT SKIP LIST('SPAVAR.IDENTI.DANAIAF=',SPAVAR.IDENTI.DANAIAF);        
     PUT SKIP LIST('SPAVAR.IDENTI.CDSEXAF=',SPAVAR.IDENTI.CDSEXAF);        
     PUT SKIP LIST('SPAVAR.IDENTI.CDLGEAF=',SPAVAR.IDENTI.CDLGEAF);        
     PUT SKIP LIST('SPAVAR.IDENTI.LTRUEAF=',SPAVAR.IDENTI.LTRUEAF);        
     PUT SKIP LIST('SPAVAR.IDENTI.NOHA1AF=',SPAVAR.IDENTI.NOHA1AF);        
     PUT SKIP LIST('SPAVAR.IDENTI.NOHA2AF=',SPAVAR.IDENTI.NOHA2AF);        
     PUT SKIP LIST('SPAVAR.IDENTI.LTLOCAF=',SPAVAR.IDENTI.LTLOCAF);        
     PUT SKIP LIST('SPAVAR.IDENTI.CDCPOAF=',SPAVAR.IDENTI.CDCPOAF);        
     PUT SKIP LIST('SPAVAR.IDENTI.EMAILAF=',SPAVAR.IDENTI.EMAILAF);        
     PUT SKIP LIST('SPAVAR.IDENTI.CDTYPRO=',SPAVAR.IDENTI.CDTYPRO);        
     PUT SKIP LIST('SPAVAR.IDENTI.CDGEPRO=',SPAVAR.IDENTI.CDGEPRO);        
   END;        
         
 INTER_C4 = SUBSTR(SPAVAR.IDENTI.CDCPOAF,1,4);        
         
 IF SPAVAR.IDENTI.DANAIAF ^= SCENARIO_5.DANAIPR        
  ! INTER_P4              ^= SCENARIO_5.CDPOPRE        
  ! SPAVAR.IDENTI.CDTYPRO ^= SCENARIO_5.CDTYPRO        
  ! SPAVAR.IDENTI.CDGEPRO ^= SCENARIO_5.CDGEPRO THEN        
   DO;        
     IF JWB001.CDTRACE >= 3 THEN        
       DO;        
         PUT SKIP LIST('SCENARIO_5.DANAIPR=', SCENARIO_5.DANAIPR);        
         PUT SKIP LIST('SCENARIO_5.CDPOPRE=', SCENARIO_5.CDPOPRE);        
         PUT SKIP LIST('SCENARIO_5.CDTYPRO=', SCENARIO_5.CDTYPRO);        
         PUT SKIP LIST('SCENARIO_5.CDGEPRO=', SCENARIO_5.CDGEPRO);        
       END;        
     CDRTPGM_W = 'D'; ##########################        
     ERREUR    = ON;        
     RETURN;        
   END;        
         
 /* 1706240 renvoi 3606528 !!?? */        
 IF SPAVAR.IDENTI.NOIDAFF ^= OLDAFFI THEN        
   DO;        
     ERREUR = ON;        
     CDRTPGM_W = 'A';#####################        
   END;        
         
     TRACE = 'GA20166 ===> ' !! 'END FA_4';        
         
     CALL PT;        
 $END FA_4;        
 /*-----------------------------------------------*/        
 FA_5: PROC REORDER ;        
     TRACE = 'GA20166 ===> ' !! 'FA_5';        
         
     CALL PT;        
 /*******************************************************************        
 *   Voir s'il faut reenregistrer un nouveau devis avant de partir  *        
 *   en souscription                                                *        
 *   PS : on vient ici avec A2SOU apres etre passe par le scenario 1*        
 *******************************************************************/        
         
 IF JWB001.CDTRACE >= 3 THEN        
   DO;        
     PUT SKIP LIST('INFOS_USER.CDMSETH=',INFOS_USER.CDMSETH);        
     PUT SKIP LIST('SPA.CDOPTRN =',SPA.CDOPTRN);        
     PUT SKIP LIST('SPA.NOPPAFF =',SPA.NOPPAFF);        
     PUT SKIP LIST('SPAVAR.IDENTI.NOIDAFF=',SPAVAR.IDENTI.NOIDAFF);        
     PUT SKIP LIST('SPAVAR.IDENTI.DANAIAF=',SPAVAR.IDENTI.DANAIAF);        
     PUT SKIP LIST('SPAVAR.IDENTI.CDCPOAF=',SPAVAR.IDENTI.CDCPOAF);        
     PUT SKIP LIST('SCENARIO_5.DANAIPR=',SCENARIO_5.DANAIPR);        
     PUT SKIP LIST('SCENARIO_5.CDPOPRE=',SCENARIO_5.CDPOPRE);        
   END;        
         
 INTER_C4 = SUBSTR(SPAVAR.IDENTI.CDCPOAF,1,4);        
         
 IF ( SPAVAR.IDENTI.DANAIAF ^= SCENARIO_5.DANAIPR )        
  ! ( INTER_P4 ^= SCENARIO_5.CDPOPRE)        
  ! ( SPAVAR.IDENTI.CDTYPRO ^= SCENARIO_5.CDTYPRO)        
  ! ( SPAVAR.IDENTI.CDGEPRO ^= SCENARIO_5.CDGEPRO) THEN        
   DO;        
     ERREUR = ON;        
     RETURN;        
   END;        
         
 IF SPA.NOPPAFF ^= SPAVAR.IDENTI.NOIDAFF THEN        
   DO;        
     SPAVAR.NEWDEVI = 'Y';        
         
     CALL ENREGISTRER_DEVIS;        
     CALL MAJ_DEVIS_CHOIX;        
     IF JWB001.CDTRACE >= 3 THEN        
       DO;        
         PUT SKIP LIST('Refaire un nouveau devis car nouvel affilie');        
         PUT SKIP LIST('SPAVAR.NOIDDEV=',SPAVAR.NOIDDEV);        
         PUT SKIP LIST('SPAVAR.DEVISAF=',SPAVAR.DEVISAF);        
       END;        
   END;        
         
     TRACE = 'GA20166 ===> ' !! 'END FA_5';        
         
     CALL PT;        
 $END FA_5;        
 /*-----------------------------------------------*/        
 FB: PROC REORDER ;        
     TRACE = 'GA20166 ===> ' !! 'FB';        
         
     CALL PT;        
 /********************************************        
 * VALIDATION CONTEXTUELLE                   *        
 ********************************************/        
 ERREUR = OFF;        
 CDRTPGM_W = '';        
         
 IF JWB001.CDTRACE >= '3' THEN        
   PUT SKIP LIST('SPAVAR.CDTYPOP=',SPAVAR.CDTYPOP);        
         
 CALL FE;        
 IF SCENARI.TBSCENA(9) THEN RETURN;        
         
         
 SCENARI.TBSCENA(9) = ON;        
         
 SCENARI.TBSCENA(8) = ON;        
         
         
 IF SPAVAR.CDTYPOP ^= 'S'        
  & SPAVAR.CDTYPOP ^= 'M'        
  & SPAVAR.CDTYPOP ^= 'L'        
  & SPAVAR.CDTYPOP ^= 'P'        
   THEN DO;        
          /* on peut avoir CDTYPOP = 'V' pour juste aller page E */        
          /* quand on est revenu ici avec A2CDV ou A2RDV ou A2EDV        
             Le devis est        
             deje dans MY Ethias et la relance a ete faite        
             ou        
             CDTYPOP = 'A' pour switcher sur le scenario 6        
          */        
          SCENARI.TBSCENA(7) = OFF;        
         
        END;        
   ELSE DO;        
          SCENARI.TBSCENA(7) = ON;        
         
        END;        
         
     TRACE = 'GA20166 ===> ' !! 'END FB';        
         
     CALL PT;        
 $END FB;        
 /*-----------------------------------------------*/        
 FC: PROC REORDER ;        
     TRACE = 'GA20166 ===> ' !! 'FC';        
         
     CALL PT;        
 /********************************************        
 * UPDATE DES DB                             *        
 ********************************************/        
         
 IF JWB001.CDTRACE >= 3 THEN        
   PUT SKIP LIST('SPAVAR.CDTYPOP=',SPAVAR.CDTYPOP);        
         
 /* Mise e jour du devis avec l'affilie complet si on souscrit. Car on        
    est alle en ID full pour identifier le preneur        
    On ne relance pas si on souscrit        
 */        
         
 IF SPAVAR.CDTYPOP = 'S' THEN        
   DO;        
     CALL FC_1;        
     IF ERREUR THEN        
       DO;        
         SPAVAR.CDTYPOP = 'E';        
         RETURN;        
       END;        
   END;        
 ELSE        
   DO;        
     /* On relance et on sauve dans My Ethias tous les devis        
        identifie pour lesquels on ne choisi pas de scouscrire        
     */        
     IF SPAVAR.NBRELAN = 0        
      & SCENARIO_6.CDBMDET <= 6 THEN        
       DO;        
         CALL FC_RELANCE();        
         SPAVAR.NBRELAN = 1;        
       END;        
   END;        
         
 /* => maj DS137 (devis dans my ethias )  */        
 CALL FC_2;        
         
 IF ERREUR THEN        
   DO;        
     SPAVAR.CDTYPOP = 'E';        
     RETURN;        
   END;        
 /*        
 PUT SKIP LIST('SPA.CDOPTRN',SPA.CDOPTRN);        
 */        
         
 IF JWB001.CDTRACE >= 3 THEN        
   DO;        
      PUT SKIP EDIT('SPAVAR.CDTYPOP :',SPAVAR.CDTYPOP)(A);        
      PUT SKIP LIST('SPA.CDOPTRN',SPA.CDOPTRN);        
   END;        
         
 /* Traiter les choix : */        
 /* -----------------   */        
         
 /* Envoyer par e-mail ? */        
 IF SPAVAR.CDTYPOP = 'L' THEN        
   DO;        
     CALL FC_3; ##########################################        
     IF ERREUR THEN        
       DO;        
         SPAVAR.CDTYPOP = 'E';        
         RETURN;        
       END;        
   END;        
         
 /* Sauvegarder dans My Ethias ? */        
 IF SPAVAR.CDTYPOP = 'M' THEN        
   DO;        
     /* C'est fait en FC_2 d'office. Aller sur page D */        
   END;        
         
 /* Imprimer ? */        
 IF SPAVAR.CDTYPOP = 'P'        
  ! SPAVAR.CDTYPOP = 'V' THEN        
   DO;        
     /* On va aller sur page E Afficher (et imprimer)  */        
   END;        
         
     TRACE = 'GA20166 ===> ' !! 'END FC';        
         
     CALL PT;        
 $END FC;        
 /*-----------------------------------------------*/        
 FC_1: PROC REORDER ;        
     TRACE = 'GA20166 ===> ' !! 'FC_1';        
         
     CALL PT;        
 /*************************************************************        
 * MAJ DEVIS APRES IDENTIFICATION COMPLETE POUR SOUSCRIPTION  *        
 **************************************************************/        
 JA2F11.PTRPCB.ALTPCB    = GA2016J.ALTPCB;        
 JA2F11.PTRPCB.TABPCB    = GA2016J.DC105PCB;        
 JA2F11.PTRPCB.DSM88PCB  = GA2016J.DSM88PCB;        
 JA2F11.PTRPCB.DSM22PCB  = GA2016J.DSM22PCB;        
 JA2F11.PTRPCB.DS139PCB  = GA2016J.DS139PCB;        
 JA2F11.PTRPCB.DS133PCB  = GA2016J.DS133PCB;        
 JA2F11.PTRPCB.DSM55PCB  = GA2016J.DSM55PCB;        
 JA2F11.PTRPCB.DEU02PCB  = GA2016J.DEU02PCB;        
 JA2F11.INPUT         = '';        
 JA2F11.INPUT.CDTYPOP = 'A';        
 JA2F11.INPUT.CDDVTRN = SPA.CDDVTRN;        
 INTER_C11 = SUBSTR(SPAVAR.NOIDDEV,3,11);        
 JA2F11.INPUT.NOIDDEV = INTER_P11;        
         
 JA2F11.DATA          = '';        
 JA2F11.OUTPUT        = '';        
 /*        
 IF JWB001.CDTRACE >= 3 THEN        
   DO;        
    put skip edit(' avant XA2F11 : lecture devis ')(a);        
    put skip edit(' ============================ ')(a);        
    put skip DATA(JA2F11);        
         
    PUT SKIP LIST('GA20166,Lecture Devis, CDOPTRN=',SPA.CDOPTRN);        
   END;        
 */        
 JA2F11.CDEVTRN = SPA.CDEVTRN;        
         
 CALL XA2F11(JA2F11,IEU001);        
         
         
 IF JWB001.CDTRACE >= 3 THEN        
   DO;        
         
    PUT SKIP EDIT(' apres XA2F11 (relire_devis) ')(A);        
    PUT SKIP EDIT(' =========================== ')(A);        
    PUT SKIP DATA(JA2F11);        
         
   END;        
         
 JA2F11.CDTYPOP = '';        
 INTER_P8 = SPAVAR.IDENTI.NOIDAFF;        
 JA2F11.NOIDAFF = INTER_C8;        
 JA2F11.CDRSAFF = SPAVAR.IDENTI.CDRSAFF;        
 JA2F11.LTNMAFF = SUBSTR(SPAVAR.IDENTI.LTNMAFF,1,20);        
 JA2F11.LTPRAFF = SPAVAR.IDENTI.LTPRAFF;        
 JA2F11.CDLGPOL = SPAVAR.IDENTI.CDLGEAF;        
 INTER_P8 = SPAVAR.IDENTI.NOIDAFF;        
 JA2F11.LTADRAF = SPAVAR.IDENTI.LTRUEAF;        
 JA2F11.NOHA1AF = SPAVAR.IDENTI.NOHA1AF;        
 JA2F11.NOHA2AF = SPAVAR.IDENTI.NOHA2AF;        
 JA2F11.LTLOCAF = SUBSTR(SPAVAR.IDENTI.LTLOCAF,1,23);        
 JA2F11.CDCPOAF = SPAVAR.IDENTI.CDCPOAF;        
 STRING(JA2F11.INPUT.LTOBJOP) = SPAVAR.LTOBJOP_016;        
 JA2F11.DANAIJJ = SUBSTR(SPAVAR.IDENTI.DANAIAF,1,2);        
 JA2F11.DANAIMM = SUBSTR(SPAVAR.IDENTI.DANAIAF,3,2);        
 JA2F11.DANAIAA = SUBSTR(SPAVAR.IDENTI.DANAIAF,5,4);        
 JA2F11.CDRSCCO = JA2F11.CDRSAFF;        
 JA2F11.LTNOMCO = JA2F11.LTNMAFF;        
 JA2F11.LTPRECO = JA2F11.LTPRAFF;        
 JA2F11.LTADRCO = JA2F11.LTADRAF;        
 JA2F11.NOHA1CO = JA2F11.NOHA1AF;        
 JA2F11.NOHA2CO = JA2F11.NOHA2AF;        
 JA2F11.LTLOCCO = JA2F11.LTLOCAF;        
 JA2F11.CDCPOCO = JA2F11.CDCPOAF;        
 JA2F11.DANCOJJ = JA2F11.DANAIJJ;        
 JA2F11.DANCOMM = JA2F11.DANAIMM;        
 JA2F11.DANCOAA = JA2F11.DANAIAA;        
 JA2F11.VEHIC.LTMARVH = SUBSTR(SCENARIO_1.LTMARQU,1,15);        
 JA2F11.NOIDVER = SPAVAR.VERSDEV;        
         
 IF JWB001.CDTRACE >= 3 THEN        
   DO;        
    PUT SKIP EDIT(' avant XA2F11 en Fc ')(A);        
    PUT SKIP EDIT(' ===================')(A);        
    PUT SKIP LIST('SPA.CDOPTRN=',SPA.CDOPTRN);        
    PUT SKIP DATA(JA2F11);        
         
    PUT SKIP LIST('GA20166 FC_1,MAJ Devis, CDOPTRN=',SPA.CDOPTRN);        
    PUT SKIP LIST('GA20166-FC_1:SPA.CDLGTRN=',SPA.CDLGTRN);        
   END;        
 JA2F11.CDEVTRN = SPA.CDEVTRN;        
         
 CALL XA2F11(JA2F11,IEU001);        
         
 IF JWB001.CDTRACE >= 3 THEN        
   DO;        
    PUT SKIP EDIT(' apres XA2F11 FC_1')(A);        
    PUT SKIP EDIT(' ================= ')(A);        
    PUT SKIP DATA(JA2F11);        
   END;        
         
 IF JA2F11.CDRTPGM ^= '' THEN        
   DO;        
     IF JWB001.CDTRACE >= 3 THEN        
       DO;        
         PUT SKIP EDIT('Erreur maj devis identifi{!!!')(A);        
         PUT SKIP DATA(JA2F11);        
       END;        
     ERREUR    = ON;        
     RETURN;        
   END;        
 SPAVAR.VERSDEV = JA2F11.NOIDVER;        
         
 IF JWB001.CDTRACE >= 3 THEN        
    PUT SKIP LIST('SPAVAR.VERSDEV=',SPAVAR.VERSDEV);        
         
         
     TRACE = 'GA20166 ===> ' !! 'END FC_1';        
         
     CALL PT;        
 $END FC_1;        
         
 /*-------------------------------------------------------------------*/        
 FC_2: PROC REORDER ;        
     TRACE = 'GA20166 ===> ' !! 'FC_2';        
         
     CALL PT;        
 /********************************************        
 * MAJ DS137 (devis ethias )                 *        
 ********************************************/        
         
 /****************************************************************        
 * SAUVER DEVIS DANS MY ETHIAS                                   *        
 * Il faut mettre e jour le TBEGCOD qui permet de voir le devis  *        
 * dans My Ethias                                                *        
 * Il a deje ete sauve dans DS137 lors de l'identification !     *        
 ****************************************************************/        
 DCL CDIDINT_W             PIC '(09)9';        
 DCL 1 CDIDINT_R           DEF CDIDINT_W,        
      2 NOIDUSR            PIC '(07)9',        
      2 NOSQUSR            PIC '(02)9';        
         
 KS1010J.INPUT = '';        
         
 /* DONNEES DEVIS */        
 KS1010J.DEVIS.NODVINT = SPAVAR.NOIDDEV; ######################        
 KS1010J.INPUT.NOIDAFF = SPAVAR.IDENTI.NOIDAFF; ########################        
 /* correction cki le 28/09/09 */        
 KS1010J.INPUT.MYSMAP.LTEMAIL = SPAVAR.IDENTI.EMAILAF;        
         
         
 KS1010J.INPUT.TBEGCOD_I(01) = ON; #########################        
 KS1010J.INPUT.TBEGCOD_I(13) = ON; ###################        
 KS1010J.INPUT.TBEGCOD_I(4)  = ON; ##############################        
 /* La routine KS1010 appelle la KS1005 qui mettre le TBEGCOD(5)=ON*/        
         
 CDIDINT_R.NOIDUSR = SPA.NOIDUSR;        
 CDIDINT_R.NOSQUSR = SPA.NOSQUSR;        
 KS1010J.DEVIS.CDIDINT = CDIDINT_W; ######################        
         
 KS1010J.DEVIS.CDTYPDV = 'A2';        
 KS1010J.DEVIS.CDORIDV = '22';        
 KS1010J.DEVIS.CDTYPRO = '01001';        
         
 JWB001.LSTCALL = 'FC.1';        
 JWB001.LTNMMTH = 'CREATE_DEVIS_NET    ';        
         
 /* put skip list('---- create_devis_net');*/        
 CALL KS1010 (IEU001,JWB001,KS1010J);        
 IF JWB001.CDRTPGM ^= '' THEN        
   DO;        
     IF JWB001.CDTRACE >= 3 THEN        
       PUT SKIP LIST('---- erreur create_devis_net',JWB001.CDRTPGM);        
     ERREUR = ON;        
     RETURN;        
   END;        
 /* put skip list('---- create_devis_net ok'); */        
 /* maj stat nbre de sauvegarde My Ethias */        
 STAT_W = TRANSLATE(SPA.CDLGTRN,'FNF','123') !! 'A201001';        
 CALL STATSITE(STAT_W,12,1,'M');        
         
 /* Demande Olivier Roox : Attribuer Userid et password pour My Ethias*/        
 /*        
 JS1D40 = '';        
 JS1D40.ALTPCB = ALTPCB;        
 JS1D40.INPUT.NOIDAFF = SPAVAR.IDENTI.NOIDAFF;        
 JS1D40.INPUT.CDKERNL = 'A2';        
 CALL XS1D40(IEU001,JWB001,JS1D40);        
 IF JWB001.CDRTPGM ^= ''        
  THEN DO;        
        PUT SKIP EDIT('ERREUR XS1D40',JWB001.CDRTPGM)(A);        
        RETURN;        
       END;        
 */        
     TRACE = 'GA20166 ===> ' !! 'END FC_2';        
         
     CALL PT;        
 $END FC_2;        
 /*-------------------------------------------------------------------*/        
 FC_3: PROC REORDER ;        
     TRACE = 'GA20166 ===> ' !! 'FC_3';        
         
     CALL PT;        
 /********************************************        
 * Pr{parer la lettre a envoyer par e-mail   *        
 ********************************************/        
 CALL FLOAD_DSM88();        
         
 IF((SMDEVIS_012.CDCATVH = '110' !        
     SMDEVIS_012.CDCATVH = '120' !        
     SMDEVIS_012.CDCATVH = '130') /* &        
     SCENARIO_5.AGEPREN >= 30  &        
     SPA.NOIDAFF = 1706007*/) THEN        
   DO;        
      CALL ENVOYER_DEVIS_DOC1();        
   END;        
 ELSE        
   DO;        
      CALL ENVOYER_DEVIS_MAIL;        
   END;        
         
     TRACE = 'GA20166 ===> ' !! 'END FC_3';        
         
     CALL PT;        
 $END FC_3;        
 /*-------------------------------------------------------------------*/        
         
 FD: PROC REORDER ;        
     TRACE = 'GA20166 ===> ' !! 'FD';        
         
     CALL PT;        
 /********************************************        
 * SWITCHING VERS UN AUTRE SCENARIO          *        
 ********************************************/        
 IF JWB001.CDTRACE >= 3 THEN        
   DO;        
     PUT SKIP LIST('- MID6.CLE       : ',MID6.CLE     );        
     PUT SKIP LIST('- SPAVAR.CDTYPOP : ',SPAVAR.CDTYPOP);        
   END;        
 IF SCENARI.TBSCENA(3) THEN        
         
   DO;        
     SPA.CDOPTRN = 'IMENU';        
     IF JWB001.CDTRACE >= 3 THEN        
       DO;        
         PUT SKIP LIST('SPA.LTOPCOM =',SPA.LTOPCOM);        
         PUT SKIP LIST('SPA.CDOPTRN =',SPA.CDOPTRN);        
       END;        
     JWB001.CDRTPGM  = 'DUMMY';        
     RETURN;        
   END;        
 SPAVAR.R_ETAPE = '';        
         
 SELECT(MID6.CLE);        
   WHEN('A') DO;        
       SCENARI.NOPGACT = '1';        
       SPAVAR.R_ETAPE  = 'A20161'; ########################################        
     END;        
   WHEN('B') DO;        
       SCENARI.NOPGACT = '1';        
       SPAVAR.R_ETAPE  = 'A20162'; ########################################        
     END;        
   WHEN('C') DO;        
       SCENARI.NOPGACT = '1';        
       SPAVAR.R_ETAPE  = 'A20163'; ########################################        
     END;        
   WHEN('D') DO;        
       SCENARI.NOPGACT = '1';        
       SPAVAR.R_ETAPE  = 'A20164';  #######################################        
     END;        
   WHEN('E') DO;        
       SCENARI.NOPGACT = '1';        
       SPAVAR.R_ETAPE  = 'A20165';        
     END;        
   WHEN('F') DO;        
       SCENARI.NOPGACT = '5';        
       SPAVAR.R_ETAPE  = 'A20166';  ##########################################        
     END;        
   WHEN('G') DO;        
       IF INFOS_USER.CDAFGRP = ''        
        & SCENARIO_5.CDJEUNE = 1        
        & SCENARIO_5.NBSINIS < 2 THEN        
         DO;        
           SCENARI.NOPGACT = '8';        
           SPAVAR.R_ETAPE  = 'A20167';  ######################################        
         END;        
       ELSE; ###############################################################        
     END;        
   WHEN('H') DO;        
       IF SCENARIO_5.CDPOSRM = 'Y' THEN        
         DO;        
           SCENARI.NOPGACT = '7'; ######################################        
           SPAVAR.R_ETAPE  = 'A20168';  ######################################        
         END;        
       ELSE; ###############################################################        
     END;        
   OTHER DO; ###########################        
       SELECT(SPAVAR.CDTYPOP);        
         WHEN('S') DO;        
             IF SCENARIO_5.BOAUTCP ='Y'        
             THEN SCENARI.NOPGACT = '9';#############################        
             ELSE SCENARI.NOPGACT = 'A';##################################        
           END;        
         WHEN('R') DO; ###################################################        
              SCENARI.NOPGACT = '5'; ##########################################        
           END;        
         WHEN('M','L') DO;        
              SCENARI.NOPGACT = 'D'; ####################################        
           END;        
         WHEN('P','V') DO;        
              SCENARI.NOPGACT = 'E'; ###########################################        
           END;        
         WHEN('E') DO;        
              SPA.CDOPTRN = 'A2DVI'; ###########################################        
              IF JWB001.CDTRACE >= 3 THEN        
                DO;        
                 PUT SKIP LIST('GA20166 : Erreur => Abandon');        
                 PUT SKIP LIST('CDRTPGM_W =',CDRTPGM_W);        
                 PUT SKIP LIST('JWB001.CDRTPGM =',JWB001.CDRTPGM);        
                END;        
              SPA.LTOPCOM = 'A20166' !! '001';        
              RETURN;        
           END;        
         OTHER;###################################################        
       END;        
     END;        
 END;        
         
 IF JWB001.CDTRACE >= 3 THEN        
   DO;        
     PUT SKIP LIST('SWITCHING SCENARIO =>',SCENARI.NOPGACT);        
     PUT SKIP LIST('SPA.LTOPCOM =',SPA.LTOPCOM);        
   END;        
         
 JWB001.CDRTPGM  = 'DUMMY';        
         
     TRACE = 'GA20166 ===> ' !! 'END FD';        
         
     CALL PT;        
 $END FD;        
 /*-----------------------------------------------*/        
         
 FE: PROC REORDER ;        
     TRACE = 'GA20166 ===> ' !! 'FE';        
         
     CALL PT;        
 /********************************************        
 * TEST SI SCROLLING EST DEMANDE             *        
 ********************************************/        
 SCENARI.TBSCENA(9) = OFF;        
         
 SCENARI.TBSCENA(8) = OFF;        
         
         
 SELECT(MID6.CLE);        
   WHEN('A','B','C','D','E','F','G','H') DO;        
       SCENARI.TBSCENA(9) = ON;        
         
       SCENARI.TBSCENA(8) = ON;        
         
     END;        
   OTHER;        
 END;        
         
     TRACE = 'GA20166 ===> ' !! 'END FE';        
         
     CALL PT;        
 $END FE;        
 /*-----------------------------------------------*/        
         
 FF: PROC REORDER ;        
     TRACE = 'GA20166 ===> ' !! 'FF';        
         
     CALL PT;        
 /********************************************        
 * TEST SI SCROLLING EST DEMANDE             *        
 ********************************************/        
     TRACE = 'GA20166 ===> ' !! 'END FF';        
         
     CALL PT;        
 $END FF;        
 /*-----------------------------------------------*/        
         
 FG: PROC REORDER ;        
     TRACE = 'GA20166 ===> ' !! 'FG';        
         
     CALL PT;        
 /******************************************************        
 * TEST DES TOUCHES EQUIVALENTES A PF1 EN CONFIRMATION *        
 ******************************************************/        
     TRACE = 'GA20166 ===> ' !! 'END FG';        
         
     CALL PT;        
 $END FG;        
 /*-----------------------------------------------*/        
 FH: PROC REORDER ;        
     TRACE = 'GA20166 ===> ' !! 'FH';        
         
     CALL PT;        
 /******************************************************        
 * TEST DES TOUCHES EQUIVALENTES A PF1 EN CONFIRMATION *        
 ******************************************************/        
         
 TRACE = 'GA20166 ===> ' !! 'END FH';        
         
 CALL PT;        
         
 $END FH;        
 /*-----------------------------------------------*/        
 /* --------------- */        
 /*     INCLUDE     */        
 /* --------------- */        
 /*-----------------------------------------------*/        
 CALCULER_DEVIS: PROC REORDER ;        
     TRACE = 'GA20166 ===> ' !! 'CALC_DEVIS';        
         
     CALL PT;        
 /******************************************        
 * Faire un nouveau devis auto / remorque  *        
 ******************************************/        
 DCL TEST_60MIL          DEC  FIXED(9,2);        
         
 SCENARIO_6.RESULTAT_AUTO       = '';        
 SCENARIO_6.RESULTAT_AUTO_PROMO = '';        
 SCENARIO_6.RESULTAT_REM        = '';        
         
 /* Nouveaux tarifs au 01.07.2010 */        
 /* ============================= */        
         
 /* Determiner code Bonus-malus */        
 /* ----------------------------*/        
 CALL INIT_CDBMDET;        
         
         
 /* Determiner code cible profession */        
 /* -------------------------------- */        
 CALL INIT_CDCIBCL;        
         
 /* Determiner code promo permanente */        
 /* -------------------------------- */        
 /* CDPROMO = '1' : voiture electronique / hybride        
                    ==> 15% sur le RC et 10 % sur l'Omnium        
           Conditions = Pas pour les Affinity (sauf Belgacom)        
         
    CDPROMO = '2' : -10.000 kms        
                    ==>  15% sur le RC et 10 % sur l'Omnium        
           Conditions = Pas pour les Affinity (sauf Belgacom)        
                        Pas pour BM > 2        
                        Pas si usage professionnel        
         
    CDPROMO = '3' : voiture electronique / hybride ET -10000Kms        
                    ==>  15% sur le RC et 10 % sur l'Omnium        
           Conditions = Pas pour les Affinity (sauf Belgacom)        
 */        
         
 SCENARIO_6.CDPROMO = '';        
 SCENARIO_6.NBKMAVH = SCENARIO_5.NBKMPAN / 1000;        
         
 SELECT;        
   WHEN(SCENARIO_1.CDECOV2 = '1' & SCENARIO_5.NBKMPAN < 10000)        
        SCENARIO_6.CDPROMO = '3';        
   WHEN(SCENARIO_5.NBKMPAN < 10000)        
        SCENARIO_6.CDPROMO = '2';        
   WHEN(SCENARIO_1.CDECOV2 = '1')        
        SCENARIO_6.CDPROMO = '1';        
   OTHER;        
 END;        
         
 IF INFOS_USER.CDAFGRP ^= ''        
  & INFOS_USER.CDAFGRP ^= '&AFBELG' THEN        
   DO;        
     SCENARIO_6.CDPROMO = '';        
     SCENARIO_6.NBKMAVH = 0;        
   END;        
 ELSE        
   DO;        
     IF ( SCENARIO_6.CDBMDET > 2        
      !   SCENARIO_5.AGEPREN < 26        
      !   SCENARIO_5.CDUSAVH = 'Y' ) THEN        
       DO;        
         SELECT(SCENARIO_6.CDPROMO);        
            WHEN('1');                          #######################################################        
            WHEN('2') DO;                       ####################################################        
                  SCENARIO_6.CDPROMO = '';        
                  SCENARIO_6.NBKMAVH = 0;        
                END;        
            WHEN('3') SCENARIO_6.CDPROMO = '1'; ##############################        
            OTHER;        
         END;        
       END;        
   END;        
         
 /************************************        
 * CALCULER LE DEVIS TARIF NORMAL    *        
 ************************************/        
 /* 3 appels : 1 par niveau de franchise :        
 /*   et avec NBKMAVH = 0 et CDECOVH = N        
 /*   pour avoir les primes sans reduction        
 /* Ensuite, SI CDPROMO # '' => Alors :        
 /* 3 appels : 1 par niveau de franchise :        
 /*   et avec NBKMAVH = SCENARIO_6.NBKMAVH et SCENARIO_1.CDECOVH Y/N        
 /*   pour avoir les primes avec reduction        
 */        
         
 /* Appel 1 : Franchise '01' et Sans Reduction */        
 /* ------------------------------------------ */        
 CALL INIT_JA2088;        
 JA2088.INPUT.CDFRANS = '01';        
         
 IF JWB001.CDTRACE > 2 THEN DO;        
   PUT SKIP LIST('WA2016 : Avant XA2898 : FR1 et sans reductions');        
   PUT SKIP LIST('SCENARIO_6.CDPROMO=',SCENARIO_6.CDPROMO);        
   PUT SKIP LIST('SCENARIO_6.CDBMDET=',SCENARIO_6.CDBMDET);        
   PUT SKIP LIST('SCENARIO_6.CDCIBCL=',SCENARIO_6.CDCIBCL);        
   PUT SKIP LIST('SCENARIO_6.CDPROMO=',SCENARIO_6.CDPROMO);        
   PUT SKIP LIST('SCENARIO_6.NBKMAVH=',SCENARIO_6.NBKMAVH);        
   PUT SKIP LIST('SCENARIO_1.CDECOV2=',SCENARIO_1.CDECOV2);        
   PUT SKIP LIST('SCENARIO_5.NBKMPAN=',SCENARIO_5.NBKMPAN);        
   PUT SKIP LIST('SCENARIO_5.AGEPREN=',SCENARIO_5.AGEPREN);        
   PUT SKIP LIST('SCENARIO_5.CDUSAVH=',SCENARIO_5.CDUSAVH);        
   PUT SKIP LIST('INFOS_USER.CDAFGRP =',INFOS_USER.CDAFGRP);        
   PUT SKIP DATA(JA2088.INPUT);        
 END;        
         
 CALL XA2898(JA2088,IEU001);        
         
 IF JWB001.CDTRACE > 2 THEN DO;        
   PUT SKIP LIST('WA2016 : Apres XA2898 : FR1 et sans reductions');        
   PUT SKIP DATA(JA2088.OUTPUT);        
 END;        
         
 IF JA2088.CDRTPGM ^= ''        
   THEN DO;        
          ERREUR    = ON;        
          IF JWB001.CDTRACE >= 3 THEN        
            DO;        
              PUT SKIP LIST('WA2016:Erreur calcul devis');        
              PUT SKIP DATA(JA2088.CDRTPGM);        
            END;        
          CDRTPGM_W = 'A20166' !! '001';        
          RETURN;        
        END;        
         
 CALL SAUVER_DEVIS_AUTO; ###############################################        
         
 /* Appel 2 : Franchise '02' et Sans Reduction */        
 /* ------------------------------------------ */        
 CALL INIT_JA2088;        
 JA2088.INPUT.CDFRANS = '02';        
         
 IF JWB001.CDTRACE > 2 THEN DO;        
   PUT SKIP LIST('WA2016 : Avant XA2898 : FR2 et sans reductions');        
   PUT SKIP DATA(JA2088.INPUT);        
 END;        
         
 CALL XA2898(JA2088,IEU001);        
         
 IF JWB001.CDTRACE > 2 THEN DO;        
   PUT SKIP LIST('WA2016 : Apres XA2898 : FR2 et sans reductions');        
   PUT SKIP DATA(JA2088.OUTPUT);        
 END;        
         
 IF JA2088.CDRTPGM ^= ''        
   THEN DO;        
          ERREUR    = ON;        
          IF JWB001.CDTRACE >= 3 THEN        
            DO;        
              PUT SKIP LIST('WA2016:Erreur calcul devis');        
              PUT SKIP DATA(JA2088.CDRTPGM);        
            END;        
          CDRTPGM_W = 'A20166' !! '001';        
          RETURN;        
        END;        
         
 CALL SAUVER_DEVIS_AUTO; ###############################################        
         
 /* Appel 3 : Franchise '03' et Sans Reduction */        
 /* ------------------------------------------ */        
 CALL INIT_JA2088;        
 JA2088.INPUT.CDFRANS = '03';        
         
 IF JWB001.CDTRACE > 2 THEN DO;        
   PUT SKIP LIST('WA2016 : Avant XA2898 : FR3 et sans reductions');        
   PUT SKIP DATA(JA2088.INPUT);        
 END;        
         
 CALL XA2898(JA2088,IEU001);        
         
 IF JWB001.CDTRACE > 2 THEN DO;        
   PUT SKIP LIST('WA2016 : Apres XA2898 : FR3 et sans reductions');        
   PUT SKIP DATA(JA2088.OUTPUT);        
 END;        
         
 IF JA2088.CDRTPGM ^= ''        
   THEN DO;        
          ERREUR    = ON;        
          IF JWB001.CDTRACE >= 3 THEN        
            DO;        
              PUT SKIP LIST('WA2016:Erreur calcul devis');        
              PUT SKIP DATA(JA2088.CDRTPGM);        
            END;        
          CDRTPGM_W = 'A20166' !! '001';        
          RETURN;        
        END;        
         
 CALL SAUVER_DEVIS_AUTO; ###############################################        
         
 /* --------------------------------------------------------------*/        
         
 IF SCENARIO_6.CDPROMO ^= '' THEN        
   DO;        
     /************************************        
     * CALCULER LE DEVIS AVEC REDUCTIONS *        
     ************************************/        
     CALL CALCULER_DEVIS_PROMO;        
     IF ERREUR THEN RETURN;        
   END;        
         
 IF SCENARIO_5.CDPOSRM = 'Y' THEN        
   DO;        
     /**************************************        
     * CALCULER LE DEVIS POUR LA REMORQUE  *        
     **************************************/        
     CALL DEVIS_REM;        
     IF ERREUR THEN RETURN;        
   END;        
         
 /* Cki le 19.01.04 => ne pas afficher primes Omnium partielle,        
    omnium complete si vehicule de plus de 60.000 euros,        
    accessoires compris ...        
 */        
 TEST_60MIL = SCENARIO_5.VACATVH;        
 IF SCENARIO_5.CDASTMC = 'Y'        
   THEN TEST_60MIL = TEST_60MIL + SCENARIO_1.TAXETMC;        
         
 /*  Cki le 02.09.2008 , demande P.Reding (40000 -> 60000) */        
 IF TEST_60MIL > 60000.00        
   THEN SPAVAR.CDLIMIT = 'Y';        
   ELSE SPAVAR.CDLIMIT = 'N';        
         
 /* Cki le 31.10.07 => Calculer date validite du devis e afficher        
    page E (impression du devis)        
 */        
 SPAVAR.DAVALID = '';        
 INTER_P7 = #DATE_SAAMMJJ;        
 CALL PLUS_1_MOIS(INTER_C7);        
 IF JWB001.CDRTPGM = ''        
   THEN SPAVAR.DAVALID = KGI011J_RO.JJ_MM_AAAA_P10;        
   ELSE JWB001.CDRTPGM = '';        
         
 TRACE = 'GA20166 ===> ' !! 'END CALC_DEVIS';        
         
 CALL PT;        
 $END CALCULER_DEVIS;        
         
 /*-----------------------------------------------*/        
 CALCULER_DEVIS_PROMO: PROC REORDER ;        
     TRACE = 'GA20166 ===> ' !! 'CALC_DEVIS_PROMO';        
         
     CALL PT;        
 /******************************************        
 * Calculer devis Auto (avec reductions)   *        
 ******************************************/        
         
 /* Appel 1 : Franchise '01' et Avec Reduction */        
 /* ------------------------------------------ */        
 CALL INIT_JA2088;        
 JA2088.INPUT.CDFRANS = '01';        
 JA2088.NBKMAVH = SCENARIO_6.NBKMAVH;        
 IF SCENARIO_1.CDECOV2 = '1'        
   THEN JA2088.CDECOVH = 'Y';        
   ELSE JA2088.CDECOVH = 'N';        
         
 IF JWB001.CDTRACE > 2 THEN DO;        
   PUT SKIP LIST('WA2016 : Avant XA2898 : FR1 et avec reductions');        
   PUT SKIP DATA(JA2088.INPUT);        
 END;        
         
 CALL XA2898(JA2088,IEU001);        
         
 IF JWB001.CDTRACE > 2 THEN DO;        
   PUT SKIP LIST('WA2016 : Apres XA2898 : FR1 et avec reductions');        
   PUT SKIP DATA(JA2088.OUTPUT);        
 END;        
         
 IF JA2088.CDRTPGM ^= ''        
   THEN DO;        
          ERREUR    = ON;        
          IF JWB001.CDTRACE >= 3 THEN        
            DO;        
              PUT SKIP LIST('WA2016:Erreur calcul devis');        
              PUT SKIP DATA(JA2088.CDRTPGM);        
            END;        
          CDRTPGM_W = 'A20166' !! '001';        
          RETURN;        
        END;        
         
 CALL SAUVER_DEVIS_PROMO;##############################################        
         
 /* Appel 2 : Franchise '02' et avec Reduction */        
 /* ------------------------------------------ */        
 CALL INIT_JA2088;        
 JA2088.INPUT.CDFRANS = '02';        
 JA2088.NBKMAVH = SCENARIO_6.NBKMAVH;        
 IF SCENARIO_1.CDECOV2 = '1'        
   THEN JA2088.CDECOVH = 'Y';        
   ELSE JA2088.CDECOVH = 'N';        
         
 IF JWB001.CDTRACE > 2 THEN DO;        
   PUT SKIP LIST('WA2016 : Avant XA2898 : FR2 et avec reductions');        
   PUT SKIP DATA(JA2088.INPUT);        
 END;        
         
 CALL XA2898(JA2088,IEU001);        
         
 IF JWB001.CDTRACE > 2 THEN DO;        
   PUT SKIP LIST('WA2016 : Apres XA2898 : FR2 et avec reductions');        
   PUT SKIP DATA(JA2088.OUTPUT);        
 END;        
         
 IF JA2088.CDRTPGM ^= ''        
   THEN DO;        
          ERREUR    = ON;        
          IF JWB001.CDTRACE >= 3 THEN        
            DO;        
              PUT SKIP LIST('WA2016:Erreur calcul devis');        
              PUT SKIP DATA(JA2088.CDRTPGM);        
            END;        
          CDRTPGM_W = 'A20166' !! '001';        
          RETURN;        
        END;        
         
 CALL SAUVER_DEVIS_PROMO;##############################################        
         
 /* Appel 3 : Franchise '03' et Sans Reduction */        
 /* ------------------------------------------ */        
 CALL INIT_JA2088;        
 JA2088.INPUT.CDFRANS = '03';        
 JA2088.NBKMAVH = SCENARIO_6.NBKMAVH;        
 IF SCENARIO_1.CDECOV2 = '1'        
   THEN JA2088.CDECOVH = 'Y';        
   ELSE JA2088.CDECOVH = 'N';        
         
 IF JWB001.CDTRACE > 2 THEN DO;        
   PUT SKIP LIST('WA2016 : Avant XA2898 : FR3 et avec reductions');        
   PUT SKIP DATA(JA2088.INPUT);        
 END;        
         
 CALL XA2898(JA2088,IEU001);        
         
 IF JWB001.CDTRACE > 2 THEN DO;        
   PUT SKIP LIST('WA2016 : Apres XA2898 : FR3 et avec reductions');        
   PUT SKIP DATA(JA2088.OUTPUT);        
 END;        
         
 IF JA2088.CDRTPGM ^= ''        
   THEN DO;        
          ERREUR    = ON;        
          IF JWB001.CDTRACE >= 3 THEN        
            DO;        
              PUT SKIP LIST('WA2016:Erreur calcul devis');        
              PUT SKIP DATA(JA2088.CDRTPGM);        
            END;        
          CDRTPGM_W = 'A20166' !! '001';        
          RETURN;        
        END;        
         
 CALL SAUVER_DEVIS_PROMO;##############################################        
         
 /* --------------------------------------------------------------*/        
         
 TRACE = 'GA20166 ===> ' !! 'END CALC_DEVIS_PROMO';        
         
 CALL PT;        
 $END CALCULER_DEVIS_PROMO;        
         
 /*-----------------------------------------------*/        
         
 INIT_JA2088: PROC REORDER ;        
     TRACE = 'GA20166 ===> ' !! 'INIT_A2088';        
         
     CALL PT;        
         
 /*********************************        
 * INIT INTERFACE JA2088          *        
 *********************************/        
         
 JA2088.INPUT = '';        
 JA2088.OUTPUT = '';        
 JA2088.LASTCALL = '';        
 JA2088.TABSPCB = GA2016J.DC105PCB; ################################        
 JA2088.TABMPCB = GA2016J.DC105PCB; ##############################        
 JA2088.DEU02PCB = GA2016J.DEU02PCB;        
         
 JA2088.CDSOCIE = 'S';        
 JA2088.CDSOPRE = '0';        
 JA2088.CDTYFRA = 'A';        
 JA2088.CDTAXES = '1';        
 JA2088.CDCOTIS = '1';        
 JA2088.CDEVISE = 'EUR';        
 JA2088.CDCATVH = '110';        
 JA2088.CDFRACT = '2';        
         
 JA2088.INPUT.VABMACT = SCENARIO_6.CDBMDET;        
 JA2088.INPUT.VABMSOU = SCENARIO_6.CDBMDET;        
 JA2088.INPUT.CDTYDMA = SCENARIO_1.CDTYDM3;        
 JA2088.INPUT.CDTYVO2 = SCENARIO_1.CDTYOP3;        
         
 /* Cki le 18.12.2007 : Non discrimination ... */        
 JA2088.INPUT.CDSXPRE = 'H';        
         
 /* Cki le 10.03.2009 : Nouveaux tarifs    ...        
 JA2088.INPUT.CDIDTRF = '1';*/        
 /* Cki le 25.06.2010 : Nouveaux tarifs 2010 ! */        
 JA2088.INPUT.CDIDTRF = '0';        
         
 JA2088.INPUT.CDIDSEG = '1';        
 /* JA2088.INPUT.CDTAGAN = '2'; */        
         
 /* New tarifs 2010 ... */        
 JA2088.CDTABBM = '8';        
 JA2088.CDIDPRO = '001';        
 JA2088.NUVSPRO = '00';        
 JA2088.CDCIBCL = SCENARIO_6.CDCIBCL;        
 JA2088.CDOLDVH = SCENARIO_5.BOVHOCC;        
 JA2088.CDTYFRS = 'T';        
 JA2088.NBKMAVH = 0; ##############################        
 JA2088.CDECOVH = 'N';#############################        
 JA2088.INPUT.CDTARJE = '0';        
         
 IF SCENARIO_6.CDPADIV = ''        
   THEN JA2088.CDOLDTJ = '1'; #########################        
         
 /* Codes garanties dans l'interface JA2088G */        
 JA2088.INPUT.TBGARAN(*).CDTYGAR = TBIDGA3(*);        
         
 /* Le devis est calcule avec la date de naissance et le code        
    postal du PRENEUR...        
    Si apres demande de souscription on revient avec un affilie        
    autre que celui qui est dans Mon Site Ethias,        
    Le devis realise n'est plus correct !!!        
 */        
 JA2088.INPUT.CDGRPAF = INFOS_USER.CDAFGRP;        
         
 /* Le P R E N E U R  ..... */        
 JA2088.INPUT.DANAPRE = SCENARIO_5.DANAIPR;        
 JA2088.INPUT.CDPOPRE = SCENARIO_5.CDPOPRE;        
 JA2088.INPUT.ANCSTVH = SCENARIO_1.ANNCSTR;        
 INTER_P4 = SCENARIO_1.NBRTRAN;        
 JA2088.INPUT.NBPRTAV = INTER_C4;        
 INTER_P3 = SCENARIO_1.NBTYPKW;        
 JA2088.INPUT.NUPUIVH = INTER_C3;        
 INTER_P5 = SCENARIO_1.TYPCYLI;        
 JA2088.INPUT.NUCYLVH = INTER_C5;        
 W_POIDS  = SCENARIO_1.POIDVID;        
 W_POIDS  = (W_POIDS / 1000) + 0.05;        
 W_NUPDSVH = W_POIDS;        
 JA2088.INPUT.NUPDSVH = W_NUPDSVH;        
 INTER_F7 = SCENARIO_5.VACATVH;        
 INTER_P7 = INTER_F7;        
 JA2088.INPUT.VACATVH = INTER_C7;        
 IF SCENARIO_5.CDASTMC = 'Y' THEN        
   DO;        
     INTER_P7 = SCENARIO_1.TAXETMC;        
     JA2088.INPUT.VAACCVH = INTER_C7;        
   END;        
 JA2088.INPUT.DADEPER = SCENARIO_5.DAPERMI;        
 IF SCENARIO_5.CDJEUNE = 1 THEN        
   DO;        
     JA2088.INPUT.CDTARJE = '1';        
     IF SCENARIO_5.NBSINIS > 0        
       THEN JA2088.INPUT.CDSINIS = '1';        
 /*        
     IF SCENARIO_5.AGEPREN < 26        
       THEN JA2088.INPUT.CDJEUCO = '1';        
 */        
     IF SCENARIO_8.CDSTART = 'Y'        
       THEN JA2088.INPUT.CDSTART = '1';        
     JA2088.INPUT.NBSINDM = SCENARIO_8.NBSINDM;        
     JA2088.INPUT.CDJEUFA = SCENARIO_8.CDJEUFA;        
     JA2088.INPUT.CDTY2PO = SCENARIO_8.CDTY2PO;        
     JA2088.INPUT.CDSTACO = SCENARIO_8.CDSTACO;        
     JA2088.INPUT.CDENFCH = SCENARIO_8.CDENFCH;        
   END;        
         
 JA2088.INPUT.NBSINRC = SCENARIO_5.NBSINIS;        
         
 IF SCENARIO_6.CDPADIV ^= ''        
   THEN JA2088.CDPADIV = SCENARIO_6.CDPADIV;        
         
 IF SCENARIO_5.BOHOREC = 'Y'        
   THEN JA2088.CDHOREC = '1';        
   ELSE JA2088.CDHOREC = '0';        
         
 IF SCENARIO_5.CDCDC26 = 'Y'        
   THEN JA2088.CDJEUCO = '1';        
   ELSE JA2088.CDJEUCO = '0';        
         
 IF SCENARIO_5.CDUSAVH = 'Y'        
   THEN JA2088.CDUSPRO = '1';        
   ELSE JA2088.CDUSPRO = '0';        
         
 TRACE = 'GA20166 ===> ' !! 'END INIT_A2088';        
         
 CALL PT;        
 $END INIT_JA2088;        
         
 /*-----------------------------------------------*/        
         
 SAUVER_DEVIS_AUTO: PROC REORDER ;        
     TRACE = 'GA20166 ===> ' !! 'SAV_D_AUTO';        
         
     CALL PT;        
         
 /*********************************        
 * SAUVER DEVIS AUTO DANS SPA     *        
 *********************************/        
 DCL MTPRIME               FIXED(15,2);        
 DCL ERPRIME               CHAR(06);        
 DCL SWGAR                 BIT(1) INIT('0'B);        
 DCL I_FR                  FIXED BIN (31);        
 INTER_P2 = JA2088.INPUT.CDFRANS;        
 I_FR = INTER_P2;        
 /*        
  A T T E N T I O N !!!!        
  On passe 3 fois ici ...        
  1 fois pour chaque niveau de franchises 01,02,03        
 */        
         
 ERREUR = OFF;        
         
 IND = 0;        
 DO I = 1 TO 40  WHILE (JA2088.OUTPUT.CDTYGAR(I) ^= '' & ^ERREUR);        
         
   MTPRIME = JA2088.OUTPUT.MTPRIFA(I);        
   ERPRIME = JA2088.OUTPUT.CDERRGA(I);        
   SWGAR   = OFF; ##############################################        
     /*        
     PUT SKIP LIST('I=',I);        
     PUT SKIP LIST('JA2088.OUTPUT.CDTYGAR(I)=',        
                    JA2088.OUTPUT.CDTYGAR(I));        
     PUT SKIP LIST('MTPRIME=',MTPRIME);        
     PUT SKIP LIST('ERPRIME=',ERPRIME);        
     */        
   SELECT(JA2088.OUTPUT.CDTYGAR(I));        
     WHEN('RCI') DO;        
       IF ERPRIME = ''        
         THEN DO;        
                SCENARIO_6.RESULTAT_AUTO.MTGARCI= MTPRIME;        
                SWGAR = ON;        
              END;        
         ELSE ERREUR = ON;        
     END;        
     WHEN('CAS') DO;        
       IF ERPRIME = ''        
         THEN DO;        
                SCENARIO_6.RESULTAT_AUTO.MTGACAS= MTPRIME;        
                SWGAR = ON;        
              END;        
         ELSE ERREUR = ON;        
     END;        
     WHEN('CA1') DO;        
       IF ERPRIME = ''        
         THEN DO;        
                SCENARIO_6.RESULTAT_AUTO.MTGACA1= MTPRIME;        
                SWGAR = ON;        
              END;        
         ELSE ERREUR = ON;        
     END;        
     WHEN('ASS') DO;        
       IF ERPRIME = ''        
         THEN DO;        
                SCENARIO_6.RESULTAT_AUTO.MTGAASS= MTPRIME;        
                SWGAR = ON;        
              END;        
         ELSE ERREUR = ON;        
     END;        
     WHEN('MOB') DO; ############################        
       IF ERPRIME = ''        
         THEN DO;        
                SCENARIO_6.RESULTAT_AUTO.MTGAMOB= MTPRIME;        
                SWGAR = ON;        
              END;        
         ELSE DO;        
                SCENARIO_6.RESULTAT_AUTO.MTGAMOB = 0;        
                ERREUR = ON;        
              END;        
     END;        
     WHEN('MO1') DO; ##################################        
       IF ERPRIME = ''        
         THEN DO;        
                SCENARIO_6.RESULTAT_AUTO.MTGAMO1= MTPRIME;        
                SWGAR = ON;        
              END;        
         ELSE DO;        
                SCENARIO_6.RESULTAT_AUTO.MTGAMO1 = 0;        
                ERREUR = ON;        
              END;        
     END;        
     WHEN('MO2') DO; ####################################        
       IF ERPRIME = ''        
         THEN DO;        
                SCENARIO_6.RESULTAT_AUTO.MTGAMO2= MTPRIME;        
                SWGAR = ON;        
              END;        
         ELSE DO;        
                SCENARIO_6.RESULTAT_AUTO.MTGAMO2 = 0;        
                ERREUR = ON;        
              END;        
     END;        
     WHEN('DM3') DO;        
       /* Attention, on passe 3 fois ici pour les omnium !!!*/        
       /* ne pas cumuler 3 fois les mini omniums            */        
       IF I_FR = 1 THEN        
         DO;        
           IF ERPRIME = '' THEN        
             DO;        
               SCENARIO_6.RESULTAT_AUTO.MTGAOM1 =        
               SCENARIO_6.RESULTAT_AUTO.MTGAOM1 + MTPRIME;        
               SWGAR = ON;        
             END;        
           ELSE        
             DO;        
               SCENARIO_6.RESULTAT_AUTO.MTGAOM1 = 0;        
               ERREUR = ON;        
             END;        
         END;        
     END;        
     WHEN('DM4') DO;        
       IF I_FR = 1 THEN        
         DO;        
           IF ERPRIME = '' THEN        
             DO;        
               SCENARIO_6.RESULTAT_AUTO.MTGAOM2 =        
               SCENARIO_6.RESULTAT_AUTO.MTGAOM2 + MTPRIME;        
               SWGAR = ON;        
             END;        
           ELSE        
             DO;        
               SCENARIO_6.RESULTAT_AUTO.MTGAOM2 = 0;        
               ERREUR = ON;        
             END;        
         END;        
     END;        
     /*  PACKAGES */        
     /*  -------- */        
     WHEN('BR1','IN1','VO1') DO;        
       IF ERPRIME ^= '' THEN        
         DO;        
           SCENARIO_6.RESULTAT_AUTO.TB_OMNI(I_FR).MTGAOM3=0;        
           IF I_FR = 1 THEN        
             DO;        
               SCENARIO_6.RESULTAT_AUTO.MTGAOM1=0;        
               SCENARIO_6.RESULTAT_AUTO.MTGAOM2=0;        
             END;        
           ERREUR = ON;        
         END;        
       ELSE        
         DO;        
           SWGAR = ON;        
           IF I_FR = 1 THEN        
             DO;        
               SCENARIO_6.RESULTAT_AUTO.MTGAOM1 =        
               SCENARIO_6.RESULTAT_AUTO.MTGAOM1 + MTPRIME;        
               SCENARIO_6.RESULTAT_AUTO.MTGAOM2 =        
               SCENARIO_6.RESULTAT_AUTO.MTGAOM2 + MTPRIME;        
             END;        
           SCENARIO_6.RESULTAT_AUTO.TB_OMNI(I_FR).MTGAOM3 =        
           SCENARIO_6.RESULTAT_AUTO.TB_OMNI(I_FR).MTGAOM3 + MTPRIME;        
         END;        
     END;        
     WHEN('BR2','IN2','VO2') DO;        
       IF ERPRIME ^= '' THEN        
         DO;        
           SCENARIO_6.RESULTAT_AUTO.TB_OMNI(I_FR).MTGAOM4=0;        
           /*        
           IF I_FR = 1        
             THEN SCENARIO_6.RESULTAT_AUTO.MTGAOM2=0;        
           */        
           ERREUR = ON;        
         END;        
       ELSE        
         DO;        
           SWGAR = ON;        
           /*        
           IF I_FR = 1        
             THEN SCENARIO_6.RESULTAT_AUTO.MTGAOM2 =        
                  SCENARIO_6.RESULTAT_AUTO.MTGAOM2 + MTPRIME;        
           */        
           SCENARIO_6.RESULTAT_AUTO.TB_OMNI(I_FR).MTGAOM4 =        
           SCENARIO_6.RESULTAT_AUTO.TB_OMNI(I_FR).MTGAOM4 + MTPRIME;        
         END;        
     END;        
     WHEN('DM1') DO;        
       IF ERPRIME ^= '' THEN        
         DO;        
           SCENARIO_6.RESULTAT_AUTO.TB_OMNI(I_FR).MTGAOM3=0;        
           ERREUR = ON;        
         END;        
       ELSE        
         DO;        
           SWGAR = ON;        
         
           SCENARIO_6.RESULTAT_AUTO.TB_OMNI(I_FR).MTGAOM3 =        
           SCENARIO_6.RESULTAT_AUTO.TB_OMNI(I_FR).MTGAOM3 + MTPRIME;        
         END;        
     END;        
     WHEN('DM2') DO;        
       IF ERPRIME ^= '' THEN        
         DO;        
           SCENARIO_6.RESULTAT_AUTO.TB_OMNI(I_FR).MTGAOM4=0;        
           ERREUR = ON;        
         END;        
       ELSE        
         DO;        
           SWGAR = ON;        
           SCENARIO_6.RESULTAT_AUTO.TB_OMNI(I_FR).MTGAOM4 =        
           SCENARIO_6.RESULTAT_AUTO.TB_OMNI(I_FR).MTGAOM4 + MTPRIME;        
         END;        
     END;        
     OTHER;        
   END;        
   IF SWGAR        
    & I_FR = 1        
    & ^ERREUR THEN        
     DO;        
         
       IND = IND + 1;        
       SCENARIO_6.RESULTAT_AUTO.TBPRIME(IND).CDTYGAR =        
                  JA2088.OUTPUT.TBPRIME(I).CDTYGAR;        
       SCENARIO_6.RESULTAT_AUTO.TBPRIME(IND).CDTFGAR =        
                  JA2088.OUTPUT.TBPRIME(I).CDTFGAR;        
       SCENARIO_6.RESULTAT_AUTO.TBPRIME(IND).NUVSTRF =        
                  JA2088.OUTPUT.TBPRIME(I).NUVSTRF;        
       MTPRIME =  JA2088.OUTPUT.TBPRIME(I).MTPBMRD;        
       SCENARIO_6.RESULTAT_AUTO.TBPRIME(IND).MTPBMRD = MTPRIME;        
     END;        
 END;        
 IF ERREUR THEN        
   DO;        
     ERREUR = ON;        
     IF JWB001.CDTRACE >= 3 THEN        
       DO;        
     PUT SKIP LIST('Erreur calcul devis , indice = ',I -1,' code = ',        
                   ERPRIME);        
     PUT SKIP LIST('JA2088.OUTPUT.TBPRIME(I -1).CDTYGAR=',        
                    JA2088.OUTPUT.TBPRIME(I -1).CDTYGAR);        
       END;        
     CDRTPGM_W = 'A20166' !! '001';        
     RETURN;        
   END;        
         
 /* Ajouter la MO2 dans le package Omnium Plus */        
         
 SCENARIO_6.RESULTAT_AUTO.TB_OMNI(I_FR).MTGAOM4 =        
 SCENARIO_6.RESULTAT_AUTO.TB_OMNI(I_FR).MTGAOM4 +        
 SCENARIO_6.RESULTAT_AUTO.MTGAMO2; ###########################################        
         
 IF JWB001.CDTRACE >= 3 THEN        
   DO;        
     PUT SKIP LIST('SCENARIO_6.RESULTAT_AUTO.MTGARCI=',        
                    SCENARIO_6.RESULTAT_AUTO.MTGARCI);        
     PUT SKIP LIST('SCENARIO_6.RESULTAT_AUTO.MTGACAS=',        
                    SCENARIO_6.RESULTAT_AUTO.MTGACAS);        
     PUT SKIP LIST('SCENARIO_6.RESULTAT_AUTO.MTGACA1=',        
                    SCENARIO_6.RESULTAT_AUTO.MTGACA1);        
     PUT SKIP LIST('SCENARIO_6.RESULTAT_AUTO.MTGAASS=',        
                    SCENARIO_6.RESULTAT_AUTO.MTGAASS);        
     PUT SKIP LIST('SCENARIO_6.RESULTAT_AUTO.MTGAMOB=',        
                    SCENARIO_6.RESULTAT_AUTO.MTGAMOB);        
     PUT SKIP LIST('SCENARIO_6.RESULTAT_AUTO.MTGAMO1=',        
                    SCENARIO_6.RESULTAT_AUTO.MTGAMO1);        
     PUT SKIP LIST('SCENARIO_6.RESULTAT_AUTO.MTGAMO2=',        
                    SCENARIO_6.RESULTAT_AUTO.MTGAMO2);        
     PUT SKIP LIST('SCENARIO_6.RESULTAT_AUTO.MTGAOM1=',        
                    SCENARIO_6.RESULTAT_AUTO.MTGAOM1);        
     PUT SKIP LIST('SCENARIO_6.RESULTAT_AUTO.MTGAOM2=',        
                    SCENARIO_6.RESULTAT_AUTO.MTGAOM2);        
     DO I = 1 TO 3;        
       PUT SKIP LIST('RESULTAT_AUTO.TB_OMNI(I).MTGAOM3=',        
                      SCENARIO_6.RESULTAT_AUTO.TB_OMNI(I).MTGAOM3);        
       PUT SKIP LIST('RESULTAT_AUTO.TB_OMNI(I).MTGAOM4=',        
                      SCENARIO_6.RESULTAT_AUTO.TB_OMNI(I).MTGAOM4);        
     END;        
   END;        
         
     TRACE = 'GA20166 ===> ' !! 'END SAV_D_AUTO';        
         
     CALL PT;        
 $END SAUVER_DEVIS_AUTO;        
         
 /*-----------------------------------------------*/        
         
 SAUVER_DEVIS_PROMO: PROC REORDER ;        
     TRACE = 'GA20166 ===> ' !! 'SAV_D_PROMO';        
         
     CALL PT;        
         
 /***************************************        
 * SAUVER DEVIS AUTO PROMO DANS SPA     *        
 ***************************************/        
         
 DCL MTPRIME               FIXED(15,2);        
 DCL ERPRIME               CHAR(06);        
 DCL SWGAR                 BIT(1) INIT('0'B);        
 DCL I_FR                  FIXED BIN (31);        
 INTER_P2 = JA2088.INPUT.CDFRANS;        
 I_FR = INTER_P2;        
         
 /*        
  A T T E N T I O N !!!!        
  On passe 3 fois ici ...        
  1 fois pour chaque niveau de franchises 01,02,03        
 */        
         
 ERREUR = OFF;        
         
 IND = 0;        
 DO I = 1 TO 40  WHILE (JA2088.OUTPUT.CDTYGAR(I) ^= '' & ^ERREUR);        
         
   MTPRIME = JA2088.OUTPUT.MTPRIFA(I);        
   ERPRIME = JA2088.OUTPUT.CDERRGA(I);        
   SWGAR   = OFF; ##############################################        
     /*        
     PUT SKIP LIST('I=',I);        
     PUT SKIP LIST('JA2088.OUTPUT.CDTYGAR(I)=',        
                    JA2088.OUTPUT.CDTYGAR(I));        
     PUT SKIP LIST('MTPRIME=',MTPRIME);        
     PUT SKIP LIST('ERPRIME=',ERPRIME);        
     */        
   SELECT(JA2088.OUTPUT.CDTYGAR(I));        
     WHEN('RCI') DO;        
       IF ERPRIME = ''        
         THEN DO;        
                SCENARIO_6.RESULTAT_AUTO_PROMO.MTGARCI= MTPRIME;        
                SWGAR = ON;        
              END;        
         ELSE ERREUR = ON;        
     END;        
     WHEN('CAS') DO;        
       IF ERPRIME = ''        
         THEN DO;        
                SCENARIO_6.RESULTAT_AUTO_PROMO.MTGACAS= MTPRIME;        
                SWGAR = ON;        
              END;        
         ELSE ERREUR = ON;        
     END;        
     WHEN('CA1') DO;        
       IF ERPRIME = ''        
         THEN DO;        
                SCENARIO_6.RESULTAT_AUTO_PROMO.MTGACA1= MTPRIME;        
                SWGAR = ON;        
              END;        
         ELSE ERREUR = ON;        
     END;        
     WHEN('ASS') DO;        
       IF ERPRIME = ''        
         THEN DO;        
                SCENARIO_6.RESULTAT_AUTO_PROMO.MTGAASS= MTPRIME;        
                SWGAR = ON;        
              END;        
         ELSE ERREUR = ON;        
     END;        
     WHEN('MOB') DO; ############################        
       IF ERPRIME = ''        
         THEN DO;        
                SCENARIO_6.RESULTAT_AUTO_PROMO.MTGAMOB= MTPRIME;        
                SWGAR = ON;        
              END;        
         ELSE DO;        
                SCENARIO_6.RESULTAT_AUTO_PROMO.MTGAMOB = 0;        
                ERREUR = ON;        
              END;        
     END;        
     WHEN('MO1') DO; ##################################        
       IF ERPRIME = ''        
         THEN DO;        
                SCENARIO_6.RESULTAT_AUTO_PROMO.MTGAMO1= MTPRIME;        
                SWGAR = ON;        
              END;        
         ELSE DO;        
                SCENARIO_6.RESULTAT_AUTO_PROMO.MTGAMO1 = 0;        
                ERREUR = ON;        
              END;        
     END;        
     WHEN('MO2') DO; ####################################        
       IF ERPRIME = ''        
         THEN DO;        
                SCENARIO_6.RESULTAT_AUTO_PROMO.MTGAMO2= MTPRIME;        
                SWGAR = ON;        
              END;        
         ELSE DO;        
                SCENARIO_6.RESULTAT_AUTO_PROMO.MTGAMO2 = 0;        
                ERREUR = ON;        
              END;        
     END;        
     WHEN('DM3') DO;        
       /* Attention, on passe 3 fois ici pour les omnium !!!*/        
       /* ne pas cumuler 3 fois les mini omniums            */        
       IF I_FR = 1 THEN        
         DO;        
           IF ERPRIME = '' THEN        
             DO;        
               SCENARIO_6.RESULTAT_AUTO_PROMO.MTGAOM1 =        
               SCENARIO_6.RESULTAT_AUTO_PROMO.MTGAOM1 + MTPRIME;        
               SWGAR = ON;        
             END;        
           ELSE        
             DO;        
               SCENARIO_6.RESULTAT_AUTO_PROMO.MTGAOM1 = 0;        
               ERREUR = ON;        
             END;        
         END;        
     END;        
     WHEN('DM4') DO;        
       /* Attention, on passe 3 fois ici pour les omnium !!!*/        
       /* ne pas cumuler 3 fois les mini omniums            */        
       IF I_FR = 1 THEN        
         DO;        
           IF ERPRIME = '' THEN        
             DO;        
               SCENARIO_6.RESULTAT_AUTO_PROMO.MTGAOM2 =        
               SCENARIO_6.RESULTAT_AUTO_PROMO.MTGAOM2 + MTPRIME;        
               SWGAR = ON;        
             END;        
           ELSE        
             DO;        
               SCENARIO_6.RESULTAT_AUTO_PROMO.MTGAOM2 = 0;        
               ERREUR = ON;        
             END;        
         END;        
     END;        
     /*  PACKAGES */        
     /*  -------- */        
     WHEN('BR1','IN1','VO1') DO;        
       IF ERPRIME ^= '' THEN        
         DO;        
           SCENARIO_6.RESULTAT_AUTO_PROMO.TB_OMNI(I_FR).MTGAOM3=0;        
           IF I_FR = 1 THEN        
             DO;        
               SCENARIO_6.RESULTAT_AUTO_PROMO.MTGAOM1=0;        
               SCENARIO_6.RESULTAT_AUTO_PROMO.MTGAOM2=0;        
             END;        
           ERREUR = ON;        
         END;        
       ELSE        
         DO;        
           SWGAR = ON;        
           IF I_FR = 1 THEN        
             DO;        
               SCENARIO_6.RESULTAT_AUTO_PROMO.MTGAOM1 =        
               SCENARIO_6.RESULTAT_AUTO_PROMO.MTGAOM1 + MTPRIME;        
               SCENARIO_6.RESULTAT_AUTO_PROMO.MTGAOM2 =        
               SCENARIO_6.RESULTAT_AUTO_PROMO.MTGAOM2 + MTPRIME;        
             END;        
           SCENARIO_6.RESULTAT_AUTO_PROMO.TB_OMNI(I_FR).MTGAOM3 =        
           SCENARIO_6.RESULTAT_AUTO_PROMO.TB_OMNI(I_FR).MTGAOM3 +        
           MTPRIME;        
         END;        
     END;        
     WHEN('BR2','IN2','VO2') DO;        
       IF ERPRIME ^= '' THEN        
         DO;        
           SCENARIO_6.RESULTAT_AUTO_PROMO.TB_OMNI(I_FR).MTGAOM4=0;        
           ERREUR = ON;        
         END;        
       ELSE        
         DO;        
           SWGAR = ON;        
           SCENARIO_6.RESULTAT_AUTO_PROMO.TB_OMNI(I_FR).MTGAOM4 =        
           SCENARIO_6.RESULTAT_AUTO_PROMO.TB_OMNI(I_FR).MTGAOM4 +        
           MTPRIME;        
         END;        
     END;        
     WHEN('DM1') DO;        
       IF ERPRIME ^= '' THEN        
         DO;        
           SCENARIO_6.RESULTAT_AUTO_PROMO.TB_OMNI(I_FR).MTGAOM3=0;        
           ERREUR = ON;        
         END;        
       ELSE        
         DO;        
           SWGAR = ON;        
         
           SCENARIO_6.RESULTAT_AUTO_PROMO.TB_OMNI(I_FR).MTGAOM3 =        
           SCENARIO_6.RESULTAT_AUTO_PROMO.TB_OMNI(I_FR).MTGAOM3 +        
           MTPRIME;        
         END;        
     END;        
     WHEN('DM2') DO;        
       IF ERPRIME ^= '' THEN        
         DO;        
           SCENARIO_6.RESULTAT_AUTO_PROMO.TB_OMNI(I_FR).MTGAOM4=0;        
           ERREUR = ON;        
         END;        
       ELSE        
         DO;        
           SWGAR = ON;        
           SCENARIO_6.RESULTAT_AUTO_PROMO.TB_OMNI(I_FR).MTGAOM4 =        
           SCENARIO_6.RESULTAT_AUTO_PROMO.TB_OMNI(I_FR).MTGAOM4 +        
           MTPRIME;        
         END;        
     END;        
     OTHER;        
   END;        
   IF SWGAR        
    & I_FR = 1        
    & ^ERREUR THEN        
     DO;        
         
       IND = IND + 1;        
       SCENARIO_6.RESULTAT_AUTO_PROMO.TBPRIME(IND).CDTYGAR =        
                  JA2088.OUTPUT.TBPRIME(I).CDTYGAR;        
       SCENARIO_6.RESULTAT_AUTO_PROMO.TBPRIME(IND).CDTFGAR =        
                  JA2088.OUTPUT.TBPRIME(I).CDTFGAR;        
       SCENARIO_6.RESULTAT_AUTO_PROMO.TBPRIME(IND).NUVSTRF =        
                  JA2088.OUTPUT.TBPRIME(I).NUVSTRF;        
       MTPRIME =  JA2088.OUTPUT.TBPRIME(I).MTPBMRD;        
       SCENARIO_6.RESULTAT_AUTO_PROMO.TBPRIME(IND).MTPBMRD = MTPRIME;        
     END;        
 END;        
 IF ERREUR THEN        
   DO;        
     ERREUR = ON;        
     IF JWB001.CDTRACE >= 3 THEN        
       DO;        
     PUT SKIP LIST('Erreur calcul devis , indice = ',I -1,' code = ',        
                   ERPRIME);        
     PUT SKIP LIST('JA2088.OUTPUT.TBPRIME(I -1).CDTYGAR=',        
                    JA2088.OUTPUT.TBPRIME(I -1).CDTYGAR);        
       END;        
     CDRTPGM_W = 'A20166' !! '001';        
     RETURN;        
   END;        
         
 /* Ajouter la MO2 dans le package Omnium Plus */        
         
 SCENARIO_6.RESULTAT_AUTO_PROMO.TB_OMNI(I_FR).MTGAOM4 =        
 SCENARIO_6.RESULTAT_AUTO_PROMO.TB_OMNI(I_FR).MTGAOM4 +        
 SCENARIO_6.RESULTAT_AUTO_PROMO.MTGAMO2;        
         
 IF JWB001.CDTRACE >= 3 THEN        
   DO;        
   PUT SKIP LIST('SCENARIO_6.RESULTAT_AUTO_PROMO.MTGARCI=',        
                  SCENARIO_6.RESULTAT_AUTO_PROMO.MTGARCI);        
   PUT SKIP LIST('SCENARIO_6.RESULTAT_AUTO_PROMO.MTGACAS=',        
                  SCENARIO_6.RESULTAT_AUTO_PROMO.MTGACAS);        
   PUT SKIP LIST('SCENARIO_6.RESULTAT_AUTO_PROMO.MTGACA1=',        
                  SCENARIO_6.RESULTAT_AUTO_PROMO.MTGACA1);        
   PUT SKIP LIST('SCENARIO_6.RESULTAT_AUTO_PROMO.MTGAASS=',        
                  SCENARIO_6.RESULTAT_AUTO_PROMO.MTGAASS);        
   PUT SKIP LIST('SCENARIO_6.RESULTAT_AUTO_PROMO.MTGAMOB=',        
                  SCENARIO_6.RESULTAT_AUTO_PROMO.MTGAMOB);        
   PUT SKIP LIST('SCENARIO_6.RESULTAT_AUTO_PROMO.MTGAMO1=',        
                  SCENARIO_6.RESULTAT_AUTO_PROMO.MTGAMO1);        
   PUT SKIP LIST('SCENARIO_6.RESULTAT_AUTO_PROMO.MTGAMO2=',        
                  SCENARIO_6.RESULTAT_AUTO_PROMO.MTGAMO2);        
   PUT SKIP LIST('SCENARIO_6.RESULTAT_AUTO_PROMO.MTGAOM1=',        
                  SCENARIO_6.RESULTAT_AUTO_PROMO.MTGAOM1);        
   PUT SKIP LIST('SCENARIO_6.RESULTAT_AUTO_PROMO.MTGAOM2=',        
                  SCENARIO_6.RESULTAT_AUTO_PROMO.MTGAOM2);        
   DO I = 1 TO 3;        
   PUT SKIP LIST('AUTO_PROMO.TB_OMNI(I).MTGAOM3=',        
                  SCENARIO_6.RESULTAT_AUTO_PROMO.TB_OMNI(I).MTGAOM3);        
   PUT SKIP LIST('AUTO_PROMO.TB_OMNI(I).MTGAOM4=',        
                  SCENARIO_6.RESULTAT_AUTO_PROMO.TB_OMNI(I).MTGAOM4);        
   END;        
   END;        
     TRACE = 'GA20166 ===> ' !! 'END SAV_D_PROMO';        
         
     CALL PT;        
 $END SAUVER_DEVIS_PROMO;        
         
 /*-----------------------------------------------*/        
         
 DEVIS_REM: PROC REORDER ;        
     TRACE = 'GA20166 ===> ' !! 'DEVIS_REM';        
         
     CALL PT;        
         
 /**************************************        
 * PAGE6 : CALCULER DEVIS REMORQUE     *        
 **************************************/        
         
 JA2088.INPUT = '';        
 JA2088.OUTPUT = '';        
 JA2088.LASTCALL = '';        
 JA2088.TABSPCB = GA2016J.DC105PCB; ################################        
 JA2088.TABMPCB = GA2016J.DC105PCB; ##############################        
 JA2088.DEU02PCB = GA2016J.DEU02PCB;        
         
 JA2088.CDSOCIE = 'S';        
 JA2088.CDSOPRE = '0';        
 JA2088.CDTYFRA = 'A';        
 JA2088.CDTAXES = '1';        
 JA2088.CDCOTIS = '1';        
 JA2088.CDEVISE = 'EUR';        
 JA2088.CDCATVH = '100';        
         
 JA2088.INPUT.VABMACT = SCENARIO_6.CDBMDET;        
 JA2088.INPUT.VABMSOU = SCENARIO_6.CDBMDET;        
 JA2088.INPUT.CDGRPAF = INFOS_USER.CDAFGRP;        
 JA2088.INPUT.DANAPRE = SCENARIO_5.DANAIPR;        
 JA2088.INPUT.ANCSTVH = SCENARIO_7.ANCSTRM;        
         
 INTER_F7 = SCENARIO_7.MTCATRM;        
 INTER_P7 = INTER_F7;        
 JA2088.INPUT.VACATVH = INTER_C7;        
 INTER_F7 = SCENARIO_7.MTACTRM;        
 INTER_P7 = INTER_F7;        
 JA2088.INPUT.VAACTVH = INTER_C7;        
         
 W_POIDS   = ( SCENARIO_7.NUPDSRM / 1000 ) + 0.05;#############################        
 W_NUPDSVH = W_POIDS;        
 JA2088.INPUT.NUPDSVH = W_NUPDSVH;        
         
 JA2088.INPUT.DADEPER = SCENARIO_5.DAPERMI;        
 /* si jeune => ajouter les codes du scenario 8 */        
 IF SCENARIO_5.CDJEUNE = 1        
  & INFOS_USER.CDAFGRP = '' THEN        
   DO;        
     JA2088.INPUT.NBSINRC = SCENARIO_5.NBSINIS;        
     JA2088.INPUT.NBSINDM = SCENARIO_8.NBSINDM;        
     JA2088.INPUT.CDJEUFA = SCENARIO_8.CDJEUFA;        
     JA2088.INPUT.CDTY2PO = SCENARIO_8.CDTY2PO;        
     JA2088.INPUT.CDSTACO = SCENARIO_8.CDSTACO;        
     JA2088.INPUT.CDENFCH = SCENARIO_8.CDENFCH;        
   END;        
 IF SCENARIO_6.CDPADIV ^= ''        
   THEN JA2088.CDPADIV = SCENARIO_6.CDPADIV;        
 IF SCENARIO_8.CDSTART = 'Y'        
   THEN JA2088.CDSTART = '1';        
 IF SCENARIO_5.CDCDC26 = 'Y'        
    THEN JA2088.CDJEUCO = '1';        
 IF SCENARIO_5.CDUSAVH = 'Y'        
    THEN JA2088.CDUSPRO = '1';        
         
 IF JWB001.CDTRACE >= 3 THEN        
   DO;        
     PUT SKIP LIST('WA2016 : devis_remorque => INPUT   ');        
     PUT SKIP DATA(JA2088.INPUT);        
   END;        
         
 CALL XA2898(JA2088,IEU001);        
         
 IF JWB001.CDTRACE >= 3 THEN        
   DO;        
     PUT SKIP LIST('WA2016 : devis_remorque => resultat');        
     PUT SKIP DATA(JA2088.OUTPUT);        
   END;        
         
 IF JA2088.CDRTPGM ^= ''        
   THEN DO;        
          CDRTPGM_W = 'A20166' !! '003';        
          ERREUR    = ON;        
          RETURN;        
        END;        
         
 CALL SAUVER_DEVIS_REM; ##############################################        
         
     TRACE = 'GA20166 ===> ' !! 'END DEVIS_REM';        
         
     CALL PT;        
 $END DEVIS_REM;        
 /*-----------------------------------------------*/        
 SAUVER_DEVIS_REM: PROC REORDER ;        
     TRACE = 'GA20166 ===> ' !! 'SAV_D_REM';        
         
     CALL PT;        
         
 /**************************************        
 * PAGE6 : MEMORISER   DEVIS REMORQUE  *        
 **************************************/        
 DCL MTPRIME     FIXED(15,2);        
 DCL ERPRIME     CHAR(06);        
 IND = 0;        
         
 ERREUR = OFF;        
         
 DO I = 1 TO 40  WHILE (JA2088.OUTPUT.CDTYGAR(I) ^= '' & ^ERREUR);        
         
   MTPRIME = JA2088.OUTPUT.MTPRIFA(I);        
   ERPRIME = JA2088.OUTPUT.CDERRGA(I);        
         
   SELECT(JA2088.OUTPUT.CDTYGAR(I));        
     WHEN('RCI') DO;        
       IF ERPRIME = ''        
         THEN SCENARIO_6.RESULTAT_REM.MTRMRCI= MTPRIME;        
         ELSE ERREUR = ON;        
     END;        
     WHEN('VO1') DO;        
       IF ERPRIME = ''        
         THEN SCENARIO_6.RESULTAT_REM.MTRMVO1= MTPRIME;        
         ELSE ERREUR = ON;        
     END;        
     WHEN('IN1') DO;        
       IF ERPRIME = ''        
         THEN SCENARIO_6.RESULTAT_REM.MTRMIN1= MTPRIME;        
         ELSE ERREUR = ON;        
     END;        
     WHEN('BRI') DO;        
       IF ERPRIME = ''        
         THEN SCENARIO_6.RESULTAT_REM.MTRMBRI= MTPRIME;        
         ELSE ERREUR = ON;        
     END;        
     WHEN('DM3') DO;##################        
       IF ERPRIME = ''        
         THEN SCENARIO_6.RESULTAT_REM.MTRMDM3= MTPRIME;        
         ELSE ERREUR = ON;        
     END;        
     WHEN('DM4') DO;#####################        
       IF ERPRIME = ''        
         THEN SCENARIO_6.RESULTAT_REM.MTRMDM4= MTPRIME;        
         ELSE ERREUR = ON;        
     END;        
     OTHER;        
   END;        
   SELECT(JA2088.OUTPUT.CDTYGAR(I));        
     WHEN('RCI','VO1','IN1','BRI','DM3','DM4') DO;        
         IF ^ERREUR THEN        
           DO;        
             IND = IND + 1;        
             SCENARIO_6.RESULTAT_REM.TBPRIME(IND).CDTYGAR =        
                          JA2088.OUTPUT.TBPRIME(I).CDTYGAR;        
             SCENARIO_6.RESULTAT_REM.TBPRIME(IND).CDTFGAR =        
                          JA2088.OUTPUT.TBPRIME(I).CDTFGAR;        
             SCENARIO_6.RESULTAT_REM.TBPRIME(IND).NUVSTRF =        
                          JA2088.OUTPUT.TBPRIME(I).NUVSTRF;        
             MTPRIME =  JA2088.OUTPUT.TBPRIME(I).MTPBMRD;        
             SCENARIO_6.RESULTAT_REM.TBPRIME(IND).MTPBMRD = MTPRIME;        
           END;        
       END;        
     OTHER;        
   END;        
 END;        
 IF ERREUR THEN        
   DO;        
     IF JWB001.CDTRACE >= 3 THEN        
       DO;        
         PUT SKIP LIST('Erreur calcul devis remorque ,        
                        indice = ',I,' code = ', ERPRIME);        
       END;        
     CDRTPGM_W = 'A20166' !! '003';        
     RETURN;        
   END;        
         
 IF JWB001.CDTRACE >= 3 THEN        
   DO;        
     PUT SKIP LIST('SCENARIO_6.RESULTAT_REM.MTRMRCI=',        
                    SCENARIO_6.RESULTAT_REM.MTRMRCI);        
     PUT SKIP LIST('SCENARIO_6.RESULTAT_REM.MTRMVO1=',        
                    SCENARIO_6.RESULTAT_REM.MTRMVO1);        
     PUT SKIP LIST('SCENARIO_6.RESULTAT_REM.MTRMIN1=',        
                    SCENARIO_6.RESULTAT_REM.MTRMIN1);        
     PUT SKIP LIST('SCENARIO_6.RESULTAT_REM.MTRMBRI=',        
                    SCENARIO_6.RESULTAT_REM.MTRMBRI);        
     PUT SKIP LIST('SCENARIO_6.RESULTAT_REM.MTRMDM3=',        
                    SCENARIO_6.RESULTAT_REM.MTRMDM3);        
     PUT SKIP LIST('SCENARIO_6.RESULTAT_REM.MTRMDM4=',        
                    SCENARIO_6.RESULTAT_REM.MTRMDM4);        
   END;        
         
     TRACE = 'GA20166 ===> ' !! 'END SAV_D_REM';        
         
     CALL PT;        
 $END SAUVER_DEVIS_REM;        
         
         
 /*-----------------------------------------------*/        
 FC_RELANCE: PROC REORDER ;        
     TRACE = 'GA20166 ===> ' !! 'FC_RELANCE';        
         
     CALL PT;        
 /*************************************************************        
 * TDMTHO                                                     *        
 *************************************************************/        
         
 /* init de JS1B53 */        
 /*-------------------------- DATABASE -------------------------------*/        
 JS1B53.IOPCB    =  GA2016J.IOPCB ;        
 JS1B53.ALTPCB   =  GA2016J.ALTPCB ;        
 JS1B53.PRTPCB   =  GA2016J.PRTPCB ;        
 JS1B53.SPA_PTR  =  GA2016J.SPA_PTR ;        
 JS1B53.DEU02PCB =  GA2016J.DEU02PCB;        
 JS1B53.DS101PCB =  GA2016J.DS101PCB;        
 JS1B53.DSM55PCB =  GA2016J.DSM55PCB;        
 JS1B53.DS133PCB =  GA2016J.DS133PCB;        
 JS1B53.DS139PCB =  GA2016J.DS139PCB;        
 JS1B53.TABPCB   =  GA2016J.DC105PCB;        
 JS1B53.DSM18PCB =  GA2016J.DSM18PCB;        
 JS1B53.DS102PCB =  GA2016J.DS102PCB;        
 JS1B53.DS137PCB =  GA2016J.DS137PCB;        
 JS1B53.DSM40PCB =  GA2016J.DSM40PCB;        
 JS1B53.DSM22PCB =  GA2016J.DSM22PCB;        
 /*-------------------------- I N P U T ------------------------------*/        
 JS1B53.NOIDAFF = SPAVAR.IDENTI.NOIDAFF;        
 JS1B53.CDCHOIX = '3'; #############################        
 JS1B53.DAECHJJ = '';        
 JS1B53.DAECHMM = '';        
 JS1B53.CDLGEAF = SPA.CDLGEAF;        
 JS1B53.CDLGTRN = SPA.CDLGTRN;        
 IF SPA.CDLGTRN = '1' ####################################        
   THEN JS1B53.CDCMGES ='11709201';        
   ELSE JS1B53.CDCMGES ='21709202';        
 JS1B53.CDSCTRN = SPA.CDSCTRN;        
 JS1B53.CDEVTRN = SPA.CDEVTRN;        
 JS1B53.TBCDCLI = SPA.TBCDCLI;        
 JS1B53.CDALCLI = SPA.CDALCLI;        
 STRING(JS1B53.LTOBJOP) = SPAVAR.LTOBJOP_016;        
         
 IF SPA.CDEVTRN ^= 'P'        
  & SPA.CDEVTRN ^= 'A'  THEN        
   DO;        
    PUT SKIP LIST('TDMTHO avant init XS1B53 - spaVAR.LTOBJOP_016');        
    PUT SKIP LIST('SPAVAR.LTOBJOP_016=',SPAVAR.LTOBJOP_016);        
    PUT SKIP LIST('tdmtho init du JS1B53.LTOBJOP.NOSEQRB=',        
                                  JS1B53.LTOBJOP.NOSEQRB);        
   END;        
         
 IF SPA.CDEVTRN ^= 'P'        
  & SPA.CDEVTRN ^= 'A'  THEN        
   DO;        
     PUT SKIP LIST('tdmtho init du JS1B53.LTOBJOP.NOSEQRB=',        
               JS1B53.LTOBJOP.NOSEQRB);        
   END;        
         
         
 IF SPA.CDEVTRN ^= 'P'        
  & SPA.CDEVTRN ^= 'A'  THEN        
   DO;        
    PUT SKIP LIST(' TDMTHO avant XS1B53 ---------------------');        
    PUT SKIP DATA(JWB001.CDRTPGM);        
    PUT SKIP LIST('JS1B53 avant:');        
    PUT SKIP DATA(JS1B53);        
   END;        
         
 /*****************************************************************/        
 /* TDMTHO 13/12/2006 ne plus mettre cette routine en commentaire */        
 /* sans avertir Vanderthommen Fabrice 7601 ou email et Georges   */        
 /* Dragozis 7248 et email                                        */        
 /*****************************************************************/        
 CALL XS1B53(IEU001,JWB001,JS1B53);        
         
 IF SPA.CDEVTRN ^= 'P'        
  & SPA.CDEVTRN ^= 'A'  THEN        
   DO;        
    PUT SKIP LIST(' TDMTHO apres XS1B53 ---------------------');        
    PUT SKIP DATA(JWB001.CDRTPGM);        
    PUT SKIP LIST('JS1B53 apr}s:');        
    PUT SKIP DATA(JS1B53);        
   END;        
         
     TRACE = 'GA20166 ===> ' !! 'END FC_RELANCE';        
         
     CALL PT;        
 $END FC_RELANCE;        
 /*-------------------------------------------------------------------*/        
         
 ENREGISTRER_DEVIS: PROC REORDER ;        
     TRACE = 'GA20166 ===> ' !! 'ENREGISTRER_DEVIS';        
         
     CALL PT;        
 /******************************************************************        
 *   ENREGISTRER LE DEVIS LA DB DSM88                              *        
 *                                                                 *        
 *               avec ou sans NOIDAFF                              *        
 ******************************************************************/        
 IF SPAVAR.NEWDEVI = 'Y' THEN        
   DO;        
     CALL COMPO_DEVA2;        
     IF ERREUR THEN        
       DO;        
         CDRTPGM_W = 'A20166' !! '005';        
         RETURN;        
       END;        
     SPAVAR.NBRELAN = 0;        
         
     /* Determiner code Bonus-malus */        
     /* ----------------------------*/        
     CALL INIT_CDBMDET;        
         
     /* Determiner code cible profession */        
     /* -------------------------------- */        
     CALL INIT_CDCIBCL;        
   END;        
         
         
 IF JWB001.CDTRACE >= 3 THEN        
   DO;        
     PUT SKIP LIST('SPA.CDOPTRN    = ', SPA.CDOPTRN);        
     PUT SKIP LIST('SPA.CDEVTRN    = ', SPA.CDEVTRN);        
     PUT SKIP LIST('SPA.NOIDAFF    = ', SPA.NOIDAFF);        
     PUT SKIP LIST('SPA.NOPPAFF    = ', SPA.NOPPAFF);        
     PUT SKIP LIST('SPAVAR.NEWDEVI = ', SPAVAR.NEWDEVI);        
     PUT SKIP LIST('SPAVAR.NOIDDEV = ', SPAVAR.NOIDDEV);        
     PUT SKIP LIST('SPAVAR.IDENTI.NOIDAFF=',        
                    SPAVAR.IDENTI.NOIDAFF);        
     PUT SKIP LIST('SPAVAR.IDENTI.DANAIAF=',        
                    SPAVAR.IDENTI.DANAIAF);        
     PUT SKIP LIST('SPA.INFOS_USER.CDMSETH=',        
                    SPA.INFOS_USER.CDMSETH);        
   END;        
 JA2F11.PTRPCB.ALTPCB    = GA2016J.ALTPCB;        
 JA2F11.PTRPCB.TABPCB    = GA2016J.DC105PCB;        
 JA2F11.PTRPCB.DSM88PCB  = GA2016J.DSM88PCB;        
 JA2F11.PTRPCB.DSM22PCB  = GA2016J.DSM22PCB;        
 JA2F11.PTRPCB.DS139PCB  = GA2016J.DS139PCB;        
 JA2F11.PTRPCB.DS133PCB  = GA2016J.DS133PCB;        
 JA2F11.PTRPCB.DSM55PCB  = GA2016J.DSM55PCB;        
 JA2F11.PTRPCB.DEU02PCB  = GA2016J.DEU02PCB;        
 JA2F11.INPUT         = '';        
         
 JA2F11.DATA          = '';        
 JA2F11.OUTPUT        = '';        
 JA2F11.INPUT.CDDVTRN = SPA.CDDVTRN;        
         
 INTER_C11 = SUBSTR(SPAVAR.NOIDDEV,3,11);        
 JA2F11.INPUT.NOIDDEV = INTER_P11;        
 JA2F11.CDRSAFF = '1'; #################################        
 JA2F11.CDTYFRA = 'A';        
 JA2F11.CDTAXES = '1';        
 JA2F11.CDCOTIS = '1';        
         
 /* JA2F11.CDTAGAN = '2'; */        
 JA2F11.CDFRACT = '2';########################################################        
 JA2F11.CDTABBM = '8';        
 /* Cki le 25.06.2010 !!!!        
 JA2F11.DATA.CDIDTRF = '1';*/        
 JA2F11.DATA.CDIDTRF = '0';        
         
 IF SPA.CDLGTRN = '1'        
   THEN JA2F11.CDCMGES ='11709201';        
   ELSE JA2F11.CDCMGES ='21709202';        
         
 /* Nouvelle loi sur la 'non discrimination' */        
 JA2F11.DATA.CDIDSEG = '1';        
         
 /* Les nouveaux parametres du devis  */        
 JA2F11.NBKMAVH = SCENARIO_5.NBKMPAN / 1000;        
 JA2F11.JJDEPER = SUBSTR(SCENARIO_5.DAPERMI,1,2);        
 JA2F11.MMDEPER = SUBSTR(SCENARIO_5.DAPERMI,3,2);        
 JA2F11.AADEPER = SUBSTR(SCENARIO_5.DAPERMI,5,4);        
 IF SCENARIO_5.CDUSAVH = 'Y'        
   THEN JA2F11.CDUSPRO = 1;        
   ELSE JA2F11.CDUSPRO = 0;        
 IF SCENARIO_5.BOHOREC = 'Y'        
   THEN JA2F11.CDHOREC = '1';        
   ELSE JA2F11.CDHOREC = '0';        
 JA2F11.CDCIBCL = SCENARIO_6.CDCIBCL;        
 JA2F11.CDIDPRO = '001';        
 JA2F11.NUVSPRO = 0;        
 JA2F11.CDTYPRO = SCENARIO_5.CDTYPRO;        
 JA2F11.CDGEPRO = SCENARIO_5.CDGEPRO;        
 IF SCENARIO_5.BOVHOCC = 'Y'        
   THEN JA2F11.CDOLDVH = 'Y';        
   ELSE JA2F11.CDOLDVH = 'N';        
 IF SCENARIO_1.CDECOV2 = '1'        
   THEN JA2F11.CDECOVH = 'Y';        
   ELSE JA2F11.CDECOVH = 'N';        
 JA2F11.CDPRASS = SCENARIO_5.BOAUTCP; ##################        
 IF SCENARIO_5.CDJEUNE = 1        
   THEN JA2F11.CDTARJE = '1';        
   ELSE JA2F11.CDTARJE = '0';        
         
 /* Nouveaux tarifs le 10/03/2009 */        
 /* Le    P R E N E U R = L'affilie si on le connait  */        
 IF SPAVAR.IDENTI.NOIDAFF ^= 0 THEN        
   DO;        
     INTER_P8 = SPAVAR.IDENTI.NOIDAFF;        
     JA2F11.NOIDAFF = INTER_C8;        
     STRING(JA2F11.INPUT.LTOBJOP) = SPAVAR.LTOBJOP_016;        
     JA2F11.CDLGPOL = SPAVAR.IDENTI.CDLGEAF;        
     /* On a besoin de ces infos pour les envoi de mails */        
     JA2F11.CDRSAFF = SPAVAR.IDENTI.CDRSAFF;        
     JA2F11.LTNMAFF = SUBSTR(SPAVAR.IDENTI.LTNMAFF,1,20);        
     JA2F11.LTPRAFF = SPAVAR.IDENTI.LTPRAFF;        
     JA2F11.DANAIJJ = SUBSTR(SPAVAR.IDENTI.DANAIAF,1,2);        
     JA2F11.DANAIMM = SUBSTR(SPAVAR.IDENTI.DANAIAF,3,2);        
     JA2F11.DANAIAA = SUBSTR(SPAVAR.IDENTI.DANAIAF,5,4);        
     JA2F11.LTADRAF = SPAVAR.IDENTI.LTRUEAF;        
     JA2F11.NOHA1AF = SPAVAR.IDENTI.NOHA1AF;        
     JA2F11.NOHA2AF = SPAVAR.IDENTI.NOHA2AF;        
     JA2F11.LTLOCAF = SUBSTR(SPAVAR.IDENTI.LTLOCAF,1,23);        
     JA2F11.CDCPOAF = SPAVAR.IDENTI.CDCPOAF;        
   END;        
 ELSE        
   DO;        
     JA2F11.CDLGPOL = TRANSLATE(SPA.CDLGTRN,'FNF','123');        
     INTER_C6 = SCENARIO_5.CDPOPRE;        
     JA2F11.CDCPOAF = INTER_C6;        
         
     JA2F11.DANAIJJ = SUBSTR(SCENARIO_5.DANAIPR,1,2);        
     JA2F11.DANAIMM = SUBSTR(SCENARIO_5.DANAIPR,3,2);        
     JA2F11.DANAIAA = SUBSTR(SCENARIO_5.DANAIPR,5,4);        
   END;        
         
 /* Le    C O N D U C T E U R = parametres de calcul du devis  */        
         
 JA2F11.CDRSCCO = '';        
 JA2F11.LTNOMCO = '';        
 JA2F11.LTPRECO = '';        
 JA2F11.LTADRCO = '';        
 JA2F11.NOHA1CO = '';        
 JA2F11.NOHA2CO = '';        
 JA2F11.LTLOCCO = '';        
 JA2F11.CDCPOCO = SCENARIO_5.CDPOPRE;        
 JA2F11.DANCOJJ = SUBSTR(SCENARIO_5.DANAIPR,1,2);        
 JA2F11.DANCOMM = SUBSTR(SCENARIO_5.DANAIPR,3,2);        
 JA2F11.DANCOAA = SUBSTR(SCENARIO_5.DANAIPR,5,4);        
         
         
 INTER_P7       = SCENARIO_1.NOIDTYP;        
 JA2F11.CDEURTX = INTER_C7;        
 INTER_P4       = SCENARIO_1.ANNCSTR;        
 JA2F11.ANCSTVH = INTER_P4;        
 JA2F11.CDCATVH = '110';        
 INTER_F3       = SCENARIO_1.NBTYPKW;        
 INTER_P3       = INTER_F3;        
 JA2F11.NUPUIVH = INTER_P3;##########################        
         
 INTER_P5       = SCENARIO_1.TYPCYLI; ##################        
 JA2F11.NUCYLVH = INTER_C5;        
 INTER_P3       = SCENARIO_1.NBRTRAN;        
 INTER_Z3       = INTER_P3;        
 JA2F11.NBPRTAV =  ' ' !! INTER_Z3;        
         
 JA2F11.VABMACT = SCENARIO_6.CDBMDET;        
 JA2F11.VABMSOU = SCENARIO_6.CDBMDET;        
         
 INTER_F9       = SCENARIO_5.VACATVH; ############################        
 INTER_P9       = INTER_F9;        
 JA2F11.VACATVH = INTER_C9;        
         
 IF SCENARIO_5.CDASTMC = 'Y' THEN        
   DO;        
     INTER_F9  = SCENARIO_1.TAXETMC; ############################        
     INTER_P9  = INTER_F9;        
     JA2F11.VAACCVH = INTER_C9;        
     JA2F11.ACCES(1).LTACCSP = TXTTMC(SPA.CDLGTRN);        
     JA2F11.ACCES(1).VAACCSP = SCENARIO_1.TAXETMC * 100;        
     JA2F11.CDASTMC = '1';        
   END;        
 ELSE JA2F11.CDASTMC = '0';        
         
 IF SCENARIO_5.CDCDC26 = 'Y'        
   THEN JA2F11.CDJEUCO = '1';        
   ELSE JA2F11.CDJEUCO = '0';        
         
 W_POIDS   = SCENARIO_1.POIDVID / 1000;        
 W_NUPDSVH = W_POIDS;        
 JA2F11.NUPDSVH = W_NUPDSVH;        
 JA2F11.VEHIC.LTMARVH = SUBSTR(SCENARIO_1.LTMARQU,1,15);        
         
 IF SCENARIO_5.CDJEUNE = 1 THEN        
   DO;        
     JA2F11.CDJEFAM = SCENARIO_8.CDJEUFA;        
     JA2F11.CDTY2PO = SCENARIO_8.CDTY2PO;        
     JA2F11.CDJEENF = SCENARIO_8.CDENFCH;        
     JA2F11.CDDRIVE = SCENARIO_8.CDSTACO;        
     IF SCENARIO_8.CDSTART = 'Y'        
       THEN JA2F11.CDSTART = '1';        
       ELSE JA2F11.CDSTART = '0';        
     IF SCENARIO_5.NBSINIS > 0        
       THEN JA2F11.CDSINIS = '1';        
       ELSE JA2F11.CDSINIS = '0';        
     JA2F11.NBSINDM = SCENARIO_8.NBSINDM;        
   END;        
 INTER_C2 = SCENARIO_5.NBSINIS;        
 INTER_C1 = SUBSTR(INTER_C2,2,1);        
 JA2F11.NBSINRC = INTER_P1;        
         
 IF SCENARIO_5.CDPOSRM = 'Y' THEN        
   DO;        
     JA2F11.CDCATRE = '100';        
     JA2F11.LTMARRE = SCENARIO_7.LTMARRM;        
     JA2F11.ANCSTRE = SCENARIO_7.ANCSTRM;        
     INTER_F9  = SCENARIO_7.MTCATRM;        
     INTER_P9  = INTER_F9;        
     JA2F11.VACATRE = INTER_C9;        
     INTER_F9  = SCENARIO_7.MTACTRM;        
     INTER_P9  = INTER_F9;        
     JA2F11.VAACTRE = INTER_C9;        
     W_POIDS   = ( SCENARIO_7.NUPDSRM / 1000 ) + 0.05;        
     W_NUPDSVH = W_POIDS;        
     JA2F11.NUPDSRE = W_NUPDSVH;        
   END;        
         
 JA2F11.CDPADIV = SCENARIO_6.CDPADIV;        
         
 JA2F11.NBKMPRO = SCENARIO_5.NBKMPAN / 1000;        
         
 JA2F11.CDGRPAF = SPA.INFOS_USER.CDAFGRP;        
         
 JA2F11.CDEVTRN = SPA.CDEVTRN;        
 IF JWB001.CDTRACE >= 3 THEN        
   DO;        
     PUT SKIP LIST('GA20166,F6_3 ,MAJ Devis, CDOPTRN=',SPA.CDOPTRN);        
     PUT SKIP LIST('Avant XA2F11 dans F6_3 devis anonyme');        
     PUT SKIP DATA(JA2F11);        
   END;        
         
 JA2F11.INPUT.CDTYPOP = ' '; ###############################################        
         
 CALL XA2F11(JA2F11,IEU001);        
         
 IF JWB001.CDTRACE >= 3 THEN        
   DO;        
     PUT SKIP EDIT(' apres XA2F11 : enregistrer_devis')(A);        
     PUT SKIP EDIT(' ================================')(A);        
     PUT SKIP DATA(JA2F11);        
   END;        
         
 IF JA2F11.CDRTPGM ^= '' THEN        
   DO;        
     IF JWB001.CDTRACE >= 3 THEN        
       DO;        
         PUT SKIP EDIT('Erreur maj devis !!!')(A);        
       END;        
     CDRTPGM_W = 'A20166' !! '005';        
     ERREUR    = ON;        
     RETURN;        
   END;        
 IF SCENARIO_6.CDPADIV = ''        
   THEN SCENARIO_6.CDPADIV = JA2F11.CDPADIV;        
         
 SPAVAR.VERSDEV = JA2F11.NOIDVER;        
         
 IF SPAVAR.IDENTI.NOIDAFF ^= 0 THEN        
   DO;        
     /* La premiere fois que l'on enregistre un devis affifile ,        
        la routine XA2F11 rend le LTOBJOP.NOSEQRB        
     */        
     IF JA2F11.LTOBJOP.NOSEQRB = '' THEN        
       DO;        
         IF JWB001.CDTRACE >= 3 THEN        
         DO;        
         PUT SKIP LIST('GA20166 : ANOMALIE apres ENREGISTRER_DEVIS !!');        
         PUT SKIP LIST('JA2F11.NOIDAFF=',JA2F11.NOIDAFF);        
         PUT SKIP LIST('JA2F11.NOIDVER=',JA2F11.NOIDVER);        
         PUT SKIP LIST('SPA.CDOPTRN=',SPA.CDOPTRN);        
         PUT SKIP LIST('SPA.NOIDAFF=',SPA.NOIDAFF);        
         PUT SKIP LIST('SPA.NOPPAFF=',SPA.NOPPAFF);        
         PUT SKIP LIST('SPAVAR.IDENTI.NOIDAFF=',SPAVAR.IDENTI.NOIDAFF);        
         PUT SKIP LIST('SPAVAR.CDTYPOP=',SPAVAR.CDTYPOP);        
         PUT SKIP LIST('SPAVAR.NEWDEVI=',SPAVAR.NEWDEVI);        
         PUT SKIP LIST('SPAVAR.NOIDDEV=',SPAVAR.NOIDDEV);        
         PUT SKIP LIST('SPAVAR.NBRELAN=',SPAVAR.NBRELAN);        
         PUT SKIP LIST('INFOS_USER.CDMSTEH=',INFOS_USER.CDMSETH);        
         PUT SKIP LIST('SPAVAR.LTOBJOP_016=',SPAVAR.LTOBJOP_016);        
         END;        
       END;        
     ELSE        
       DO;        
         LTOBJOP_R = SPAVAR.LTOBJOP_016;        
         LTOBJOP_Z.NOSEQRB = JA2F11.LTOBJOP.NOSEQRB;        
         SPAVAR.LTOBJOP_016 = LTOBJOP_R;        
       END;        
   END;        
         
         
 IF SPAVAR.NEWDEVI = 'Y' THEN        
   DO;        
     STAT_W = TRANSLATE(SPA.CDLGTRN,'FNF','123') !! 'A201001';        
     IF SPAVAR.IDENTI.NOIDAFF ^= 0        
       THEN CALL STATSITE(STAT_W,5,1,'M'); #####################################        
       ELSE CALL STATSITE(STAT_W,1,1,'M'); #####################################        
   END;        
         
 SPAVAR.NEWDEVI = 'N';        
         
     TRACE = 'GA20166 ===> ' !! 'END ENREGISTRER_DEVIS';        
         
     CALL PT;        
 $END ENREGISTRER_DEVIS;        
         
 /*-------------------------------------------------------------------*/        
         
 COMPO_DEVA2: PROC REORDER ;        
     TRACE = 'GA20166 ===> ' !! 'COMPO_DEVA2';        
         
     CALL PT;        
         
 /******************************        
 * ACCES COMPOSTEUR DEVIS AUTO *        
 ******************************/        
 DCL FONC       CHAR (04) INIT ('');        
 DCL XX         FIXED(3);        
 XX = 0;        
         
 JWB001.LSTCALL = 'COMPO_DEVA2.1';        
 IEU001.CDDFSEG = 'CXICOMA2';        
 SSA_XICOMA2.VALUE = 'ISMINTDEVA2';        
 CALL XEU100(IEU001,FOUR,GHU,DXI05,XICOMA2,SSA_XICOMA2);        
 SELECT (DXI05.STATUS);        
    WHEN ('  ') DO;        
        FONC = 'REPL';        
        IF XICOMA2.DADVCOU ^= #DATE_JJMMAA THEN        
          DO;        
            XICOMA2.DADVCOU = #DATE_JJMMAA;        
          /*XICOMA2.NODVCOU = 5000; cki le 29.01.08 */        
            XICOMA2.NODVCOU = 4000;        
          END;        
        ELSE        
          DO;        
            XICOMA2.NODVCOU = XICOMA2.NODVCOU + 1;        
            IF XICOMA2.NODVCOU < 4000 THEN        
              DO;        
                IF JWB001.CDTRACE >= 3 THEN        
                DO;        
   PUT SKIP LIST('WA2016 CLAIREKIPS => Plus de 5999 devis internet!');        
                PUT SKIP LIST('Forcer abend pour le voir ...');        
                END;        
                XX = XX / 0;        
                ERREUR = ON;        
                RETURN;        
              END;        
          END;        
        XICOMA2.NODVSUP = 9999;        
      END;        
    WHEN ('GE') DO;        
        FONC = 'ISRT';        
        XICOMA2 = '';        
        XICOMA2.CDTYPCO = 'I';        
        XICOMA2.CDTYPOL = 'SM';        
        XICOMA2.CDCOMPO = 'INTDEVA2';        
        XICOMA2.DADVCOU = #DATE_JJMMAA;        
    /*  XICOMA2.NODVCOU = 5000; */        
        XICOMA2.NODVCOU = 4000;        
        XICOMA2.NODVSUP = 9999;        
      END;        
    OTHERWISE DO;        
        CALL ERR_DL1;        
        RETURN;        
      END;        
 END;        
 JWB001.LSTCALL = 'COMPO_DEVA2.2';        
 SSA_XICOMA2.PAR = ' ';        
 IEU001.CDDFSEG = 'CXICOMA2';        
 CALL XEU100(IEU001,FOUR,FONC,DXI05,XICOMA2,SSA_XICOMA2);        
 IF DXI05.STATUS ^= '' THEN        
   DO;        
     CALL ERR_DL1;        
     RETURN;        
   END;        
 SSA_XICOMA2.PAR = '(';        
         
 SPAVAR.NOIDDEV = '00' !! $DATE_SAAMMJJ !! XICOMA2.NODVCOU;        
         
 SPAVAR.DEVISAF = '  ' !! SUBSTR(SPAVAR.NOIDDEV,8,2) !!        
               SUBSTR(SPAVAR.NOIDDEV,6,2) !!        
               SUBSTR(SPAVAR.NOIDDEV,4,2) !! '/' !!        
               SUBSTR(SPAVAR.NOIDDEV,10,4);        
         
     TRACE = 'GA20166 ===> ' !! 'END COMPO_DEVA2';        
         
     CALL PT;        
 $END COMPO_DEVA2;        
 /*-----------------------------------------------*/        
 MAJ_DEVIS_CHOIX: PROC REORDER ;        
     TRACE = 'GA20166 ===> ' !! 'MAJ_DEVIS_CHOIX';        
         
     CALL PT;        
 /**********************************************************************        
 * MAJ DEVIS AVEC LES CHOIX AVANT DEPART identification complete       *        
 **********************************************************************/        
 IF JWB001.CDTRACE >= 3 THEN        
   PUT SKIP LIST('GA20166,MAJ_DEVIS_CHOIX ...D{but....');        
         
 JA2F11.PTRPCB.ALTPCB    = GA2016J.ALTPCB;        
 JA2F11.PTRPCB.TABPCB    = GA2016J.DC105PCB;        
 JA2F11.PTRPCB.DSM88PCB  = GA2016J.DSM88PCB;        
 JA2F11.PTRPCB.DSM22PCB  = GA2016J.DSM22PCB;        
 JA2F11.PTRPCB.DS139PCB  = GA2016J.DS139PCB;        
 JA2F11.PTRPCB.DS133PCB  = GA2016J.DS133PCB;        
 JA2F11.PTRPCB.DSM55PCB  = GA2016J.DSM55PCB;        
 JA2F11.PTRPCB.DEU02PCB  = GA2016J.DEU02PCB;        
 JA2F11.INPUT         = '';        
 JA2F11.INPUT.CDTYPOP = 'A';        
 JA2F11.INPUT.CDDVTRN = SPA.CDDVTRN;        
 INTER_C11 = SUBSTR(SPAVAR.NOIDDEV,3,11);        
 JA2F11.INPUT.NOIDDEV = INTER_P11;        
         
 JA2F11.DATA          = '';        
 JA2F11.OUTPUT        = '';        
 /*        
 IF JWB001.CDTRACE >= 3 THEN        
   DO;        
    put skip edit(' avant XA2F11 : lecture devis ')(a);        
    put skip edit(' ============================ ')(a);        
    put skip DATA(JA2F11);        
         
    PUT SKIP LIST('GA20161,Lecture Devis, CDOPTRN=',SPA.CDOPTRN);        
   END;        
 */        
 JA2F11.CDEVTRN = SPA.CDEVTRN;        
 CALL XA2F11(JA2F11,IEU001);        
         
         
 IF JWB001.CDTRACE >= 3 THEN        
   DO;        
         
    PUT SKIP EDIT(' apres XA2F11 (relire_devis pour MAJ choix) ')(A);        
    PUT SKIP EDIT(' =========================================  ')(A);        
    PUT SKIP DATA(JA2F11);        
         
   END;        
         
 JA2F11.CDTYPOP = '';        
 IF JWB001.CDTRACE >= 3 THEN        
   DO;        
     PUT SKIP LIST('GA20166,SAVE_PRIMES_CHOISIES...D{but');        
     IF SCENARIO_5.CDPOSRM = 'Y' THEN        
       DO;        
         PUT SKIP LIST('Scenario_6.RESULTAT_REM.MTRMRCI=',        
                        SCENARIO_6.RESULTAT_REM.MTRMRCI);        
         PUT SKIP LIST('Scenario_6.RESULTAT_REM.MTRMVO1=',        
                        SCENARIO_6.RESULTAT_REM.MTRMVO1);        
         PUT SKIP LIST('SCENARIO_6.RESULTAT_REM.MTRMIN1=',        
                        SCENARIO_6.RESULTAT_REM.MTRMIN1);        
         PUT SKIP LIST('SCENARIO_6.RESULTAT_REM.MTRMBRI=',        
                        SCENARIO_6.RESULTAT_REM.MTRMBRI);        
         PUT SKIP LIST('SCENARIO_6.RESULTAT_REM.MTRMDM3=',        
                        SCENARIO_6.RESULTAT_REM.MTRMDM3);        
         PUT SKIP LIST('SCENARIO_6.RESULTAT_REM.MTRMDM4=',        
                        SCENARIO_6.RESULTAT_REM.MTRMDM4);        
         DO I = 1 TO 10;        
         PUT SKIP LIST('Scenario_6.RESULTAT_REM.TBPRIME(I).CDTYGAR=',        
                        SCENARIO_6.RESULTAT_REM.TBPRIME(I).CDTYGAR);        
         PUT SKIP LIST('Scenario_6.RESULTAT_REM.TBPRIME(I).CDTFGAR=',        
                        SCENARIO_6.RESULTAT_REM.TBPRIME(I).CDTFGAR);        
         PUT SKIP LIST('Scenario_6.RESULTAT_REM.TBPRIME(I).NUVSTRF=',        
                        SCENARIO_6.RESULTAT_REM.TBPRIME(I).NUVSTRF);        
         PUT SKIP LIST('Scenario_6.RESULTAT_REM.TBPRIME(I).MTPBMRD=',        
                        SCENARIO_6.RESULTAT_REM.TBPRIME(I).MTPBMRD);        
         END;        
         PUT SKIP LIST('SCENARIO_6.SELECT_GAR.CDRMRCI=',        
                        SCENARIO_6.SELECT_GAR.CDRMRCI);        
         PUT SKIP LIST('SCENARIO_6.SELECT_GAR.CDRMVO1=',        
                        SCENARIO_6.SELECT_GAR.CDRMVO1);        
         PUT SKIP LIST('SCENARIO_6.SELECT_GAR.CDRMIN1=',        
                        SCENARIO_6.SELECT_GAR.CDRMIN1);        
         PUT SKIP LIST('SCENARIO_6.SELECT_GAR.CDRMBRI=',        
                        SCENARIO_6.SELECT_GAR.CDRMBRI);        
         PUT SKIP LIST('SCENARIO_6.SELECT_GAR.CDRMDM3=',        
                        SCENARIO_6.SELECT_GAR.CDRMDM3);        
         PUT SKIP LIST('SCENARIO_6.SELECT_GAR.CDRMDM4=',        
                        SCENARIO_6.SELECT_GAR.CDRMDM4);        
     END;        
         
   PUT SKIP LIST('SCENARIO_6.RESULTAT_AUTO.MTGARCI=',        
                  SCENARIO_6.RESULTAT_AUTO.MTGARCI);        
   PUT SKIP LIST('SCENARIO_6.RESULTAT_AUTO.MTGACAS=',        
                  SCENARIO_6.RESULTAT_AUTO.MTGACAS);        
   PUT SKIP LIST('SCENARIO_6.RESULTAT_AUTO.MTGACA1=',        
                  SCENARIO_6.RESULTAT_AUTO.MTGACA1);        
   PUT SKIP LIST('SCENARIO_6.RESULTAT_AUTO.MTGAASS=',        
                  SCENARIO_6.RESULTAT_AUTO.MTGAASS);        
   PUT SKIP LIST('SCENARIO_6.RESULTAT_AUTO.MTGAMOB=',        
                  SCENARIO_6.RESULTAT_AUTO.MTGAMOB);        
   PUT SKIP LIST('SCENARIO_6.RESULTAT_AUTO.MTGAMO1=',        
                  SCENARIO_6.RESULTAT_AUTO.MTGAMO1);        
   PUT SKIP LIST('SCENARIO_6.RESULTAT_AUTO.MTGAMO2=',        
                  SCENARIO_6.RESULTAT_AUTO.MTGAMO2);        
   PUT SKIP LIST('SCENARIO_6.RESULTAT_AUTO.MTGAOM1=',        
                  SCENARIO_6.RESULTAT_AUTO.MTGAOM1);        
   PUT SKIP LIST('SCENARIO_6.RESULTAT_AUTO.MTGAOM2=',        
                  SCENARIO_6.RESULTAT_AUTO.MTGAOM2);        
   DO I = 1 TO 3;        
     PUT SKIP LIST('SCENARIO_6.RESULTAT_AUTO.TB_OMNI(I).MTGAOM3=',        
                    SCENARIO_6.RESULTAT_AUTO.TB_OMNI(I).MTGAOM3);        
     PUT SKIP LIST('SCENARIO_6.RESULTAT_AUTO.TB_OMNI(I).MTGAOM4=',        
                    SCENARIO_6.RESULTAT_AUTO.TB_OMNI(I).MTGAOM4);        
   END;        
   DO I = 1 TO 20;        
   PUT SKIP LIST('Scenario_6.RESULTAT_AUTO.TBPRIME(I).CDTYGAR=',        
                  SCENARIO_6.RESULTAT_AUTO.TBPRIME(I).CDTYGAR);        
   PUT SKIP LIST('Scenario_6.RESULTAT_AUTO.TBPRIME(I).CDTFGAR=',        
                  SCENARIO_6.RESULTAT_AUTO.TBPRIME(I).CDTFGAR);        
   PUT SKIP LIST('Scenario_6.RESULTAT_AUTO.TBPRIME(I).NUVSTRF=',        
                  SCENARIO_6.RESULTAT_AUTO.TBPRIME(I).NUVSTRF);        
   PUT SKIP LIST('Scenario_6.RESULTAT_AUTO.TBPRIME(I).MTPBMRD=',        
                  SCENARIO_6.RESULTAT_AUTO.TBPRIME(I).MTPBMRD);        
   END;        
   PUT SKIP LIST('SCENARIO_6.RESULTAT_AUTO_PROMO.MTGARCI=',        
                  SCENARIO_6.RESULTAT_AUTO_PROMO.MTGARCI);        
   PUT SKIP LIST('SCENARIO_6.RESULTAT_AUTO_PROMO.MTGACAS=',        
                  SCENARIO_6.RESULTAT_AUTO_PROMO.MTGACAS);        
   PUT SKIP LIST('SCENARIO_6.RESULTAT_AUTO_PROMO.MTGACA1=',        
                  SCENARIO_6.RESULTAT_AUTO_PROMO.MTGACA1);        
   PUT SKIP LIST('SCENARIO_6.RESULTAT_AUTO_PROMO.MTGAASS=',        
                  SCENARIO_6.RESULTAT_AUTO_PROMO.MTGAASS);        
   PUT SKIP LIST('SCENARIO_6.RESULTAT_AUTO_PROMO.MTGAMOB=',        
                  SCENARIO_6.RESULTAT_AUTO_PROMO.MTGAMOB);        
   PUT SKIP LIST('SCENARIO_6.RESULTAT_AUTO_PROMO.MTGAMO1=',        
                  SCENARIO_6.RESULTAT_AUTO_PROMO.MTGAMO1);        
   PUT SKIP LIST('SCENARIO_6.RESULTAT_AUTO_PROMO.MTGAMO2=',        
                  SCENARIO_6.RESULTAT_AUTO_PROMO.MTGAMO2);        
   PUT SKIP LIST('SCENARIO_6.RESULTAT_AUTO_PROMO.MTGAOM1=',        
                  SCENARIO_6.RESULTAT_AUTO_PROMO.MTGAOM1);        
   PUT SKIP LIST('SCENARIO_6.RESULTAT_AUTO_PROMO.MTGAOM2=',        
                  SCENARIO_6.RESULTAT_AUTO_PROMO.MTGAOM2);        
   DO I = 1 TO 3;        
   PUT SKIP LIST('AUTO_PROMO.TB_OMNI(I).MTGAOM3=',        
                  SCENARIO_6.RESULTAT_AUTO_PROMO.TB_OMNI(I).MTGAOM3);        
   PUT SKIP LIST('AUTO_PROMO.TB_OMNI(I).MTGAOM4=',        
                  SCENARIO_6.RESULTAT_AUTO_PROMO.TB_OMNI(I).MTGAOM4);        
   END;        
   DO I = 1 TO 20;        
   PUT SKIP LIST('PROMO.TBPRIME(I).CDTYGAR=',        
                  SCENARIO_6.RESULTAT_AUTO_PROMO.TBPRIME(I).CDTYGAR);        
   PUT SKIP LIST('PROMO.TBPRIME(I).CDTFGAR=',        
                  SCENARIO_6.RESULTAT_AUTO_PROMO.TBPRIME(I).CDTFGAR);        
   PUT SKIP LIST('PROMO.TBPRIME(I).NUVSTRF=',        
                  SCENARIO_6.RESULTAT_AUTO_PROMO.TBPRIME(I).NUVSTRF);        
   PUT SKIP LIST('PROMO.TBPRIME(I).MTPBMRD=',        
                  SCENARIO_6.RESULTAT_AUTO_PROMO.TBPRIME(I).MTPBMRD);        
   END;        
     PUT SKIP LIST('SCENARIO_6.SELECT_GAR.CDSERCI=',        
                    SCENARIO_6.SELECT_GAR.CDSERCI);        
     PUT SKIP LIST('SCENARIO_6.SELECT_GAR.CDSECAS=',        
                    SCENARIO_6.SELECT_GAR.CDSECAS);        
     PUT SKIP LIST('SCENARIO_6.SELECT_GAR.CDSECA1=',        
                    SCENARIO_6.SELECT_GAR.CDSECA1);        
     PUT SKIP LIST('SCENARIO_6.SELECT_GAR.CDSEASS=',        
                    SCENARIO_6.SELECT_GAR.CDSEASS);        
     PUT SKIP LIST('SCENARIO_6.SELECT_GAR.CDSEMOB=',        
                    SCENARIO_6.SELECT_GAR.CDSEMOB);        
     PUT SKIP LIST('SCENARIO_6.SELECT_GAR.CDSEMO1=',        
                    SCENARIO_6.SELECT_GAR.CDSEMO1);        
     PUT SKIP LIST('SCENARIO_6.SELECT_GAR.CDTYPOM=',        
                    SCENARIO_6.SELECT_GAR.CDTYPOM);        
     PUT SKIP LIST('SCENARIO_6.SELECT_GAR.CDNIVFR=',        
                    SCENARIO_6.SELECT_GAR.CDNIVFR);        
   END;        
         
 IF SCENARIO_5.CDJEUNE = 1        
   THEN JA2F11.VEHIC.CDTARJE = '1';        
   ELSE JA2F11.VEHIC.CDTARJE = '0';        
 IF JWB001.CDTRACE >= 3 THEN        
   DO;        
     PUT SKIP LIST('JA2F11.VEHIC.CDTARJE pour SMDV047=',        
                    JA2F11.VEHIC.CDTARJE);        
   END;        
         
 IND = 0;        
 DO I = 1 TO 20 WHILE(IND < 10);        
         
   W_NURDDIV = 0;        
   W_NUMJDIV = 0;        
   IF SCENARIO_6.CDPROMO = '' THEN        
     DO;        
       W_TYGA = SCENARIO_6.RESULTAT_AUTO.TBPRIME(I).CDTYGAR;        
       W_TFGA = SCENARIO_6.RESULTAT_AUTO.TBPRIME(I).CDTFGAR;        
       W_NUVS = SCENARIO_6.RESULTAT_AUTO.TBPRIME(I).NUVSTRF;        
       W_MTPB = SCENARIO_6.RESULTAT_AUTO.TBPRIME(I).MTPBMRD * 100;        
     END;        
   ELSE        
     DO;        
       W_TYGA = SCENARIO_6.RESULTAT_AUTO_PROMO.TBPRIME(I).CDTYGAR;        
       W_TFGA = SCENARIO_6.RESULTAT_AUTO_PROMO.TBPRIME(I).CDTFGAR;        
       W_NUVS = SCENARIO_6.RESULTAT_AUTO_PROMO.TBPRIME(I).NUVSTRF;        
       W_MTPB = SCENARIO_6.RESULTAT_AUTO_PROMO.TBPRIME(I).MTPBMRD * 100;        
     END;        
   IF JWB001.CDTRACE >= 3 THEN        
     DO;        
       PUT SKIP LIST('I=',I);        
       PUT SKIP LIST('W_TYGA =',W_TYGA);        
       PUT SKIP LIST('W_TFGA =',W_TFGA);        
       PUT SKIP LIST('W_NUVS =',W_NUVS);        
       PUT SKIP LIST('W_MTPB =',W_MTPB);        
     END;        
   SWGAR  = OFF;        
   SELECT;        
     WHEN(W_TYGA = 'RCI' & SCENARIO_6.SELECT_GAR.CDSERCI = 'Y')        
       SWGAR = ON;        
         
     WHEN(W_TYGA = 'CAS' & SCENARIO_6.SELECT_GAR.CDSECAS = 'Y')        
       SWGAR = ON;        
         
     WHEN(W_TYGA = 'CA1' & SCENARIO_6.SELECT_GAR.CDSECA1 = 'Y')        
       SWGAR = ON;        
         
     WHEN(W_TYGA = 'ASS' & SCENARIO_6.SELECT_GAR.CDSEASS = 'Y')        
       SWGAR = ON;        
         
     WHEN(W_TYGA = 'MOB' & SCENARIO_6.SELECT_GAR.CDSEMOB = 'Y')        
       SWGAR = ON;        
         
     WHEN(W_TYGA = 'MO1' & SCENARIO_6.SELECT_GAR.CDSEMO1 = 'Y')        
       SWGAR = ON;        
         
     WHEN((W_TYGA = 'BR1' ! W_TYGA = 'IN1' ! W_TYGA = 'VO1')        
        & (SCENARIO_6.SELECT_GAR.CDTYPOM = '1'        
        !  SCENARIO_6.SELECT_GAR.CDTYPOM = '2'        
        !  SCENARIO_6.SELECT_GAR.CDTYPOM = '3'))        
         SWGAR = ON;        
         
     WHEN((W_TYGA = 'BR2' ! W_TYGA = 'IN2' ! W_TYGA = 'VO2')        
        & (SCENARIO_6.SELECT_GAR.CDTYPOM = '4'))        
         SWGAR = ON;        
         
     WHEN(W_TYGA = 'DM3' & SCENARIO_6.SELECT_GAR.CDTYPOM = '1')        
       SWGAR = ON;        
         
     WHEN(W_TYGA = 'DM4' & SCENARIO_6.SELECT_GAR.CDTYPOM = '2')        
       SWGAR = ON;        
         
     WHEN(W_TYGA = 'DM1' & SCENARIO_6.SELECT_GAR.CDTYPOM = '3')        
       SWGAR = ON;        
         
     WHEN(W_TYGA = 'DM2' & SCENARIO_6.SELECT_GAR.CDTYPOM = '4')        
       SWGAR = ON;        
     WHEN(W_TYGA = 'MO2' & SCENARIO_6.SELECT_GAR.CDTYPOM = '4')        
       SWGAR = ON;        
         
     OTHER;        
   END;        
         
   IF SWGAR THEN        
     DO;        
       IND = IND + 1;        
       JA2F11.VEHIC.TBDEVGA(IND).CDTYGAR = W_TYGA;        
       JA2F11.VEHIC.TBDEVGA(IND).CDTFGAR = W_TFGA;        
       JA2F11.VEHIC.TBDEVGA(IND).NUVSTRF = W_NUVS;        
       JA2F11.VEHIC.TBDEVGA(IND).PRBASGA = W_MTPB;        
       JA2F11.VEHIC.TBDEVGA(IND).NURDDIV = W_NURDDIV;        
       JA2F11.VEHIC.TBDEVGA(IND).NUMJDIV = W_NUMJDIV;        
       IF SUBSTR(W_TYGA,1,2) = 'DM' THEN        
         DO;        
           JA2F11.VEHIC.CDFRANS = '0' !!        
             SCENARIO_6.SELECT_GAR.CDNIVFR;        
           IF JWB001.CDTRACE >= 3 THEN        
             DO;        
               PUT SKIP LIST('Choix omnium =>',JA2F11.VEHIC.CDFRANS);        
             END;        
         END;        
       IF JWB001.CDTRACE >= 3 THEN        
         DO;        
           PUT SKIP LIST('Primes choisies .... IND=',IND);        
           PUT SKIP LIST('W_TYGA =',W_TYGA);        
           PUT SKIP LIST('W_TFGA =',W_TFGA);        
           PUT SKIP LIST('W_NUVS =',W_NUVS);        
           PUT SKIP LIST('W_MTPB =',W_MTPB);        
           PUT SKIP LIST('W_NURDDIV =',W_NURDDIV);        
           PUT SKIP LIST('W_NUMJDIV =',W_NUMJDIV);        
         END;        
     END;        
 END;        
 IF SCENARIO_5.CDPOSRM = 'Y' THEN        
   DO;        
     IF JWB001.CDTRACE >= 3 THEN        
       DO;        
         PUT SKIP LIST('Primes choisies pour remorque ...');        
       END;        
     /* Init des primes remorque choisies */        
     IND = 0;        
     DO I = 1 TO 10 WHILE(IND < 9);        
       W_TYGA = SCENARIO_6.RESULTAT_REM.TBPRIME(I).CDTYGAR;        
       W_TFGA = SCENARIO_6.RESULTAT_REM.TBPRIME(I).CDTFGAR;        
       W_NUVS = SCENARIO_6.RESULTAT_REM.TBPRIME(I).NUVSTRF;        
       W_MTPB = SCENARIO_6.RESULTAT_REM.TBPRIME(I).MTPBMRD * 100;        
       SWGAR  = OFF;        
       SELECT;        
         WHEN(W_TYGA = 'RCI' & SCENARIO_6.SELECT_GAR.CDRMRCI = 'Y')        
           SWGAR = ON;        
         WHEN(W_TYGA = 'VO1' & SCENARIO_6.SELECT_GAR.CDRMVO1 = 'Y')        
           SWGAR = ON;        
         WHEN(W_TYGA = 'IN1' & SCENARIO_6.SELECT_GAR.CDRMIN1 = 'Y')        
           SWGAR = ON;        
         WHEN(W_TYGA = 'BRI' & SCENARIO_6.SELECT_GAR.CDRMBRI = 'Y')        
           SWGAR = ON;        
         WHEN(W_TYGA = 'DM3' & SCENARIO_6.SELECT_GAR.CDRMDM3 = 'Y')        
           SWGAR = ON;        
         WHEN(W_TYGA = 'DM4' & SCENARIO_6.SELECT_GAR.CDRMDM4 = 'Y')        
           SWGAR = ON;        
         OTHER;        
       END;        
       IF SWGAR THEN        
         DO;        
           IND = IND + 1;        
           JA2F11.REMORQUE.TBGARRE(IND).CDTYGAR = W_TYGA;        
           JA2F11.REMORQUE.TBGARRE(IND).CDTFGAR = W_TFGA;        
           JA2F11.REMORQUE.TBGARRE(IND).NUVSTRF = W_NUVS;        
           JA2F11.REMORQUE.TBGARRE(IND).PRBASGA = W_MTPB;        
           IF JWB001.CDTRACE >= 3 THEN        
             DO;        
               PUT SKIP LIST('ENVOI remorque  .... IND=',IND);        
               PUT SKIP LIST('W_TYGA =',W_TYGA);        
               PUT SKIP LIST('W_TFGA =',W_TFGA);        
               PUT SKIP LIST('W_NUVS =',W_NUVS);        
               PUT SKIP LIST('W_MTPB =',W_MTPB);        
             END;        
         END;        
     END;        
   END;        
         
 JA2F11.NOIDVER = SPAVAR.VERSDEV;        
 STRING(JA2F11.INPUT.LTOBJOP) = SPAVAR.LTOBJOP_016;        
 JA2F11.CDTAGAN = ''; ######################################        
 JA2F11.CDEVTRN = SPA.CDEVTRN;        
         
 IF JWB001.CDTRACE >= 3 THEN        
   DO;        
    PUT SKIP EDIT(' avant XA2F11 dans MAJ_DEVIS_CHOIX ')(A);        
    PUT SKIP EDIT(' ==================================')(A);        
    PUT SKIP LIST('SPA.CDOPTRN=',SPA.CDOPTRN);        
    PUT SKIP DATA(JA2F11);        
         
    PUT SKIP LIST('GA20166,MAJ_Devis_CHOIX pour CDOPTRN=',SPA.CDOPTRN);        
   END;        
         
 CALL XA2F11(JA2F11,IEU001);        
         
 IF JWB001.CDTRACE >= 3 THEN        
   DO;        
    PUT SKIP EDIT(' apres XA2F11 dans MAJ_DEVIS_CHOIX')(A);        
    PUT SKIP EDIT(' =================================')(A);        
    PUT SKIP DATA(JA2F11);        
   END;        
         
 IF JA2F11.CDRTPGM ^= '' THEN        
   DO;        
     IF JWB001.CDTRACE >= 3 THEN        
       DO;        
         PUT SKIP EDIT('Erreur maj_devis_choix')(A);        
         PUT SKIP DATA(JA2F11);        
       END;        
     CDRTPGM_W = 'A20166' !! '005';        
     ERREUR    = ON;        
     RETURN;        
   END;        
 SPAVAR.VERSDEV = JA2F11.NOIDVER;        
         
 IF JWB001.CDTRACE >= 3 THEN        
   DO;        
    PUT SKIP LIST('SPAVAR.VERSDEV=',SPAVAR.VERSDEV);        
    PUT SKIP EDIT(' ===== JA2F11.INPUT.LTOBJOP.NOSEQRB ==== ')(A);        
    PUT SKIP DATA(JA2F11.INPUT.LTOBJOP.NOSEQRB);        
   END;        
         
         
     TRACE = 'GA20166 ===> ' !! 'END MAJ_DEVIS_CHOIX';        
         
     CALL PT;        
 $END MAJ_DEVIS_CHOIX;        
         
 /*-------------------------------------------------------------------*/        
         
 MAJ_STAT_M20: PROC REORDER ;        
     TRACE = 'GA20166 ===> ' !! 'MAJ_STAT_M20';        
         
     CALL PT;        
 /**************************************        
 * MAJ STATISTIQUES INTPA pour MOINS20 *        
 **************************************/        
         
 DCL SITM20     CHAR(10);        
         
 SELECT(SPA.CDLGTRN);        
   WHEN('1') SITM20 = 'MOINS20';        
   WHEN('2') SITM20 = 'MIN20';        
   OTHER;        
 END;        
         
 JSM131.PARAM   = '';        
 JSM131.ALTPCB  = ALTPCB;        
 JSM131.CDSCTRN = '';        
 JSM131.CDEVTRN = IEU001_R.CDEVTRN;        
 JSM131.NBTYSTA = 1;        
 JSM131.CDTYSTA(JSM131.NBTYSTA) = 'INTPA';        
 JSM131.NOIDCPT(JSM131.NBTYSTA) = 1; #####################################        
 JSM131.MTVAINC(JSM131.NBTYSTA) = 1;        
 JSM131.DAOPGES(JSM131.NBTYSTA) = #DATE_SAAMMJJ;        
 JSM131.LTIDCLE(JSM131.NBTYSTA) = SITM20 !! 'A201001';        
 /**************************************        
 * Alimentation compteur nbr. de devis *        
 **************************************/        
 /* PUT SKIP DATA(JSM131.PARAM); */        
 CALL XSM532(JSM131);        
 IF JSM131.CDRTPGM ^='' THEN        
 DO;        
    IF JWB001.CDTRACE >= 3 THEN        
      DO;        
        PUT SKIP DATA(JSM131.RETURN_CODE.CDRTPGM);        
        PUT SKIP DATA(JSM131.RETURN_CODE.LASTDLI);        
      END;        
    RETURN;        
 END;        
         
     TRACE = 'GA20166 ===> ' !! 'END MAJ_STAT_M20';        
         
     CALL PT;        
 $END MAJ_STAT_M20;        
         
         
 /*-----------------------------------------------*/        
         
 FLOAD_DSM88:PROC REORDER ;        
 TRACE='GA20166 ===> ' !! ' FLOAD_DSM88  ';        
         
 CALL PT;        
 /***********************************        
 *  CHARGEMENT DSM88                *        
 ************************************/        
         
         
 DCL NOIDDEV_W          FIXED(11);        
 DCL 1   KEY_DEVIS,        
      2   NOIDDEV PIC'(4)9',        
      2   NOIDVER PIC'(3)9';        
 DCL KEY_DEVIS_SSA PIC'(7)9' BASED(ADDR(KEY_DEVIS));        
 DCL 1 CLE_TAB,        
      2   ENTREE,        
       3  CDAPPEL       CHAR(01),        
       3  CDTYLET(10)   CHAR(01),        
       3 KEYDEVIS,        
        4 CDTYKEY       CHAR(1),        
        4 NOIDKEY       PIC'(9)9',        
        4 NOSQDEV       PIC'(7)9',        
        4 NOSQTXT       PIC'(3)9',        
       3  CDLGTRN       PIC'9',        
       3  TBTYPAF       BIT(240),        
       3  FILLER        CHAR(18);        
         
 CLE_TAB = '';        
 INTER_C11 = SUBSTR(SPAVAR.NOIDDEV,3,11);        
 INTER_C9  = SUBSTR(SPAVAR.NOIDDEV,3,9 );        
 INTER_C7  = SUBSTR(SPAVAR.NOIDDEV,3,7 );        
 NOIDDEV_W = INTER_P11;        
 KEY_DEVIS_SSA = 0;        
 KEY_DEVIS.NOIDDEV = MOD(NOIDDEV_W, 10000) ;        
 KEY_DEVIS.NOIDVER = SPAVAR.VERSDEV;####################################        
         
 IF JWB001.CDTRACE >= 3 THEN        
   DO;        
      PUT SKIP LIST('FLOAD_DSM88');        
         
      PUT SKIP LIST('SPAVAR.NOIDDEV=',SPAVAR.NOIDDEV);        
      PUT SKIP LIST('INTER_P11=',INTER_P11);        
      PUT SKIP LIST('INTER_P9 =',INTER_P9 );        
      PUT SKIP LIST('INTER_C9 =',INTER_C9 );        
      PUT SKIP LIST('INTER_P7 =',INTER_P7 );        
      PUT SKIP LIST('INTER_C7 =',INTER_C7 );        
      PUT SKIP LIST('SPAVAR.VERSDEV=',SPAVAR.VERSDEV);        
      PUT SKIP LIST('KEY_DEVIS_SSA',KEY_DEVIS_SSA);        
      PUT SKIP LIST('NOIDDEV_W  =',NOIDDEV_W);        
   END;        
         
 /* SMDEVIS_012 */        
 SSA_SMDEVIS.VALUE1='D';        
 SSA_SMDEVIS.VALUE2=INTER_P7;        
 SSA_SMDEVIS.VALUE3=KEY_DEVIS_SSA;        
 SSA_SMDEVIS.VALUE4=1;        
 JWB001.LSTCALL ='DOC-1';        
 IEU001.CDDFSEG = 'CSMDV012';        
 CALL XEU100(IEU001,FOUR,GU,DSM88,SMDEVIS_012,SSA_SMDEVIS);        
         
 IF JWB001.CDTRACE >= 3 THEN        
   DO;        
      PUT SKIP LIST('LECTURE EN BRUTE DEVIS_012');        
      PUT SKIP LIST('LECTURE SSA : ',SSA_SMDEVIS);        
      PUT SKIP LIST('LECTURE STATUS',DSM88.STATUS);        
      PUT SKIP DATA(SMDEVIS_012);        
   END;        
         
         
 IF DSM88.STATUS^= ' ' THEN CALL ERR_DL1;        
         
         
   /* SMDEVIS_013 */        
   SSA_SMDEVIS.VALUE1='D';        
   SSA_SMDEVIS.VALUE2=INTER_P7;        
   SSA_SMDEVIS.VALUE3=KEY_DEVIS_SSA;        
   SSA_SMDEVIS.VALUE4=2;        
   JWB001.LSTCALL ='DOC-2';        
   IEU001.CDDFSEG = 'CSMDV013';        
   CALL XEU100(IEU001,FOUR,GU,DSM88,SMDEVIS_013,SSA_SMDEVIS);        
         
         
 IF JWB001.CDTRACE >= 3 THEN        
   DO;        
      PUT SKIP LIST('LECTURE EN BRUTE DEVIS_013');        
      PUT SKIP LIST('LECTURE SSA : ',SSA_SMDEVIS);        
      PUT SKIP LIST('LECTURE STATUS',DSM88.STATUS);        
      PUT SKIP DATA(SMDEVIS_013);        
   END;        
         
 IF DSM88.STATUS^= ' ' THEN CALL ERR_DL1;        
         
 /* TDMTHO 26/02/2008 */        
 IF SMDEVIS_012.TBEGCDV(2) THEN #########################        
  DO;        
   SSA_SMDEVIS.VALUE1='D';        
   SSA_SMDEVIS.VALUE2=INTER_P7;        
   SSA_SMDEVIS.VALUE3=KEY_DEVIS_SSA;        
   SSA_SMDEVIS.VALUE4=3;        
   JWB001.LSTCALL ='DOC-3';        
   IEU001.CDDFSEG = 'CSMDV014';        
   CALL XEU100(IEU001,FOUR,GU,DSM88,SMDEVIS_014,SSA_SMDEVIS);        
   IF DSM88.STATUS^= ' ' THEN CALL ERR_DL1;        
         
   IF JWB001.CDTRACE >= 3 THEN        
     DO;        
        PUT SKIP LIST('LECTURE EN BRUTE DEVIS_014');        
        PUT SKIP LIST('LECTURE SSA : ',SSA_SMDEVIS);        
        PUT SKIP LIST('LECTURE STATUS',DSM88.STATUS);        
        PUT SKIP DATA(SMDEVIS_014);        
     END;        
  END;        
 ELSE SMDEVIS_014 = '';        
         
 IF SMDEVIS_012.TBEGCDV(3) THEN ########################        
  DO;        
   SSA_SMDEVIS.VALUE1='D';        
   SSA_SMDEVIS.VALUE2=INTER_P7;        
   SSA_SMDEVIS.VALUE3=KEY_DEVIS_SSA;        
   SSA_SMDEVIS.VALUE4=4;        
   JWB001.LSTCALL='DOC-4';        
   IEU001.CDDFSEG = 'CSMDV015';        
   CALL XEU100(IEU001,FOUR,GU,DSM88,SMDEVIS_015,SSA_SMDEVIS);        
   IF DSM88.STATUS^= ' ' THEN CALL ERR_DL1;        
         
   IF JWB001.CDTRACE >= 3 THEN        
     DO;        
        PUT SKIP LIST('LECTURE EN BRUTE DEVIS_015');        
        PUT SKIP LIST('LECTURE SSA : ',SSA_SMDEVIS);        
        PUT SKIP LIST('LECTURE STATUS',DSM88.STATUS);        
        PUT SKIP DATA(SMDEVIS_015);        
     END;        
  END;        
 ELSE SMDEVIS_015 = '';        
         
 IF SMDEVIS_012.TBEGCDV(6) = ON THEN ###############################        
  DO;        
   SSA_SMDEVIS.VALUE1='D';        
   SSA_SMDEVIS.VALUE2=INTER_P7;        
   SSA_SMDEVIS.VALUE3=KEY_DEVIS_SSA;        
   SSA_SMDEVIS.VALUE4=5;        
   JWB001.LSTCALL='DOC-5';        
   IEU001.CDDFSEG = 'CSMDV018';        
   CALL XEU100(IEU001,FOUR,GU,DSM88,SMDEVIS_018,SSA_SMDEVIS);        
   IF DSM88.STATUS^= ' ' THEN CALL ERR_DL1;        
         
   IF JWB001.CDTRACE >= 3 THEN        
     DO;        
        PUT SKIP LIST('LECTURE EN BRUTE DEVIS_018');        
        PUT SKIP LIST('LECTURE SSA : ',SSA_SMDEVIS);        
        PUT SKIP LIST('LECTURE STATUS',DSM88.STATUS);        
        PUT SKIP DATA(SMDEVIS_018);        
     END;        
  END;        
 ELSE SMDEVIS_018 = '';        
         
         
 IF SMDEVIS_012.TBEGCDV(9) THEN ###############################        
  DO;        
   SSA_SMDEVIS.VALUE1='D';        
   SSA_SMDEVIS.VALUE2=INTER_P7;        
   SSA_SMDEVIS.VALUE3=KEY_DEVIS_SSA;        
   SSA_SMDEVIS.VALUE4=6;        
   JWB001.LSTCALL='DOC-6';        
   IEU001.CDDFSEG = 'CSMDV047';        
   CALL XEU100(IEU001,FOUR,GU,DSM88,SMDEVIS_047,SSA_SMDEVIS);        
   IF DSM88.STATUS^= ' ' THEN CALL ERR_DL1;        
         
   IF JWB001.CDTRACE >= 3 THEN        
     DO;        
        PUT SKIP LIST('LECTURE EN BRUTE DEVIS_047');        
        PUT SKIP LIST('LECTURE SSA : ',SSA_SMDEVIS);        
        PUT SKIP LIST('LECTURE STATUS',DSM88.STATUS);        
        PUT SKIP DATA(SMDEVIS_047);        
     END;        
  END;        
 ELSE SMDEVIS_047 = '';        
         
 IF JWB001.CDTRACE >= 3 THEN        
   DO;        
      PUT SKIP LIST(' TDMTHO FLOAD GA20166');        
      PUT SKIP LIST(' TDMTHO DOC1 ');        
         
      PUT SKIP DATA(SMDEVIS_012);        
      PUT SKIP DATA(SMDEVIS_013);        
      PUT SKIP DATA(SMDEVIS_014);        
      PUT SKIP DATA(SMDEVIS_015);        
      PUT SKIP DATA(SMDEVIS_018);        
      PUT SKIP DATA(SMDEVIS_047);        
   END;        
         
 $END FLOAD_DSM88;        
         
         
 /*------------------------------------------------------------------*/        
 /*- TDMTHO 20/02/2008 ----------------------------------------------*/        
         
 ENVOYER_DEVIS_DOC1: PROC REORDER ;        
     TRACE = 'GA20166 ===> ' !! 'ENV_E_MAIL';        
         
     CALL PT;        
 /*************************************************************        
 * Pr{parer la lettre a envoyer par e-mail en format DOC1 PDF *        
 *************************************************************/        
         
 IF JWB001.CDTRACE >= 3 THEN        
   DO;        
     PUT SKIP LIST('Envoyer devis DOC1 par e-mail ',SPAVAR.NOIDDEV);        
     PUT SKIP LIST('Pour affilie :',SPAVAR.IDENTI.NOIDAFF);        
     PUT SKIP LIST('Adresse      :',SPAVAR.IDENTI.EMAILAF);        
   END;        
         
 LTOBJOP_R = SPAVAR.LTOBJOP_016;        
         
 DCL NOIDDEV_W          FIXED(11);        
 DCL 1   KEY_DEVIS,        
      2   NOIDDEV PIC'(4)9',        
      2   NOIDVER PIC'(3)9';        
 DCL KEY_DEVIS_SSA PIC'(7)9' BASED(ADDR(KEY_DEVIS));        
 DCL 1 CLE_TAB,        
      2   ENTREE,        
       3  CDAPPEL       CHAR(01),        
       3  CDTYLET(10)   CHAR(01),        
       3 KEYDEVIS,        
        4 CDTYKEY       CHAR(1),        
        4 NOIDKEY       PIC'(9)9',        
        4 NOSQDEV       PIC'(7)9',        
        4 NOSQTXT       PIC'(3)9',        
       3  CDLGTRN       PIC'9',        
       3  TBTYPAF       BIT(240),        
       3  FILLER        CHAR(18);        
         
 DCL W_LTNMSCR           CHAR(2000) VARYING;        
 DCL W_LTNMSCR2          CHAR(4000) VARYING;        
         
 IF SPAVAR.VERSDEV = 0 THEN        
   DO;        
     /*        
     put skip list('Derniere version devis 0 ! pas d''envoi e-mail');        
     */        
     ERREUR = ON;        
     RETURN;        
   END;        
         
 CLE_TAB = '';        
 INTER_C11 = SUBSTR(SPAVAR.NOIDDEV,3,11);        
 NOIDDEV_W = INTER_P11;        
 KEY_DEVIS_SSA = 0;        
 KEY_DEVIS.NOIDDEV = MOD(NOIDDEV_W, 10000) ;        
 KEY_DEVIS.NOIDVER = SPAVAR.VERSDEV;####################################        
         
 CLE_TAB.CDAPPEL = 'W';###################        
 CLE_TAB.CDTYLET(*) = 'N';        
 CLE_TAB.CDTYLET(1) = 'Y';        
 CLE_TAB.CDTYLET(2) = 'Y';        
 CLE_TAB.CDTYLET(5) = 'Y'; ##########################        
 CLE_TAB.KEYDEVIS.CDTYKEY = 'D' ;        
 CLE_TAB.KEYDEVIS.NOIDKEY = NOIDDEV_W / 10000 ; ######################        
 CLE_TAB.KEYDEVIS.NOSQDEV = KEY_DEVIS_SSA ;        
 CLE_TAB.KEYDEVIS.NOSQTXT=1; #####################        
 CLE_TAB.CDLGTRN = SPA.CDLGTRN;        
 CLE_TAB.TBTYPAF = '';        
         
 JSM186.PTRPCB.DBPCB(*)=NULL();        
 JSM186.PTRPCB.DBPCB(01)=GA2016J.DSM88PCB;        
 JSM186.PTRPCB.DBPCB(02)=GA2016J.DC105PCB;        
 JSM186.PTRPCB.DBPCB(03)=GA2016J.DS101PCB;        
 JSM186.PTRPCB.DBPCB(04)=GA2016J.DS102PCB;        
 JSM186.PTRPCB.DBPCB(05)=GA2016J.DA215PCB;        
 JSM186.PTRPCB.DBPCB(06)=GA2016J.DA216PCB;        
 JSM186.PTRPCB.DBPCB(07)=GA2016J.DS137PCB;        
 JSM186.PTRPCB.DBPCB(08)=GA2016J.DSM22PCB;        
 JSM186.PTRPCB.DBPCB(09)=GA2016J.DA215$PCB;        
 JSM186.PTRPCB.DBPCB(10)=GA2016J.DS132PCB;        
         
 JSM186.WLTNMSCR_PTR =ADDR(W_LTNMSCR);        
 JSM186.WLTNMSCR2_PTR=ADDR(W_LTNMSCR2);        
 JSM186.ENTREE=CLE_TAB.ENTREE,BY NAME;        
         
 JSM186.CDAPPEL = 'W'; #############################        
         
 /*  INITIALISATION DU COPY JA2N53   */        
 JA2N53.ALTPCB = GA2016J.ALTPCB;       ##################################        
 JA2N53.DS146  = GA2016J.DS146PCB;     ###############################        
 JA2N53.DSM80  = GA2016J.DSM80PCB;     ###############################        
 JA2N53.DSM07  = GA2016J.DSM07PCB;     ########################################        
 JA2N53.DSMB9  = GA2016J.DSMB9PCB;  ###########################################        
         
 JA2N53.SEGMENT(*)=NULL();        
 JA2N53.SEGMENT(1)=ADDR(SMDEVIS_012);        
 JA2N53.SEGMENT(2)=ADDR(SMDEVIS_013);        
 JA2N53.SEGMENT(3)=ADDR(SMDEVIS_014);        
 JA2N53.SEGMENT(4)=ADDR(SMDEVIS_015);        
 JA2N53.SEGMENT(5)=ADDR(SMDEVIS_018);        
 JA2N53.SEGMENT(6)=ADDR(SMDEVIS_047);        
         
 JA2N53.NOIDAFF= SPAVAR.IDENTI.NOIDAFF;        
 JA2N53.NOIDPOL= 0;                 ##########################################################        
         
 /* pour internet : pas de lettre accompagnement                   */        
 JA2N53.CDLTACC = '0';        
 /* pour internet : Demande remise de prix (envoi par email)       */        
 JA2N53.CDLTPRI = '1';        
 JA2N53.CDLTPRO = '';        
         
 /* pour internet : pas de lettre de renon                         */        
 JA2N53.CDLTREN = '';        
         
 IF JWB001.CDTRACE >= 3 THEN        
   DO;        
      PUT SKIP LIST('TDMTHO GA20166 => XA2N53');        
      PUT SKIP LIST('SPA.NOIDAFF=', SPA.NOIDAFF );        
      PUT SKIP LIST('SPAVAR.IDENTI.NOIDAFF=', SPAVAR.IDENTI.NOIDAFF );        
      PUT SKIP LIST('SPA.CDCMGES ', SPA.CDCMGES);        
      PUT SKIP LIST('SPAVAR.LTOBJOP_016= ', SPAVAR.LTOBJOP_016);        
      PUT SKIP LIST('LTOBJOP_Z= ', LTOBJOP_Z);        
      PUT SKIP LIST('LTOBJOP_Z.CDRSCTL ', LTOBJOP_Z.CDRSCTL);        
      PUT SKIP LIST('SPAVAR.IDENTI.EMAILAF=',SPAVAR.IDENTI.EMAILAF);        
   END;        
         
  IF SPA.CDLGTRN = '1' ####################################        
    THEN JA2N53.CDCMGES ='11709201';        
    ELSE JA2N53.CDCMGES ='21709202';        
         
  JA2N53.CDSCTRN= SPA.CDSCTRN;       ################################################        
  JA2N53.CDRSCTL= LTOBJOP_Z.CDRSCTL; #####################################        
         
  JA2N53.CDTYIMP = 'M'; ###############################        
         
  JA2N53.EMAILID.EMAILTO = SPAVAR.IDENTI.EMAILAF;        
  JA2N53.EMAILID.EMAILCC = 'claire.kips@nrb.be';        
         
  IF JWB001.CDTRACE >= 3 THEN        
    DO;        
       PUT SKIP LIST('EMAILTO = ',JA2N53.EMAILID.EMAILTO);        
       PUT SKIP LIST('EMAILCC = ',JA2N53.EMAILID.EMAILCC);        
    END;        
         
  JA2N53.LTOBJOP_W = LTOBJOP_Z, BY NAME;        
         
  JA2N53.CDPRODU = SMDEVIS_012.CDTYPRO;        
  JA2N53.CDCHPAI = '';        
         
  /*   JA2N53.NOSQINT       /* NO INTERVENTION          */        
  /*   JA2N53.NOSQSUJ       /* NO SUJET                 */        
  /*   JA2N53.CDCNTVC       /* VECTEUR DE CONTACT       */        
  /*   JA2N53.CDCAC         /* CODE ACTION COMMERCIALE  */        
  /*   JA2N53.CDOPER        /* CODE OPERATION           */        
  /*   JA2N53.CDPRODU       /* CODE PRODUIT             */        
  /*   JA2N53.CDTYPPR       /* TYPE PRODUIT (DR/CS)     */        
  /*   JA2N53.CDLETTR       /* LETTRE                   */        
  /*   JA2N53.CDCANAL       /* CODE CANAL GEST.         */        
  /*   JA2N53.CDTTAPP       /* APPLIC. POUR TRT TEXTE   */        
  /*   JA2N53.NOSEQRB       /* DEV SEQ DS139 => PS1088  */        
  /*   JA2N53.CDSGGES       /* CODE SIEGE GEST.         */        
  /*   JA2N53.CDCOUGE       /* SERVICE COURRIER GEST.   */        
  /*   JA2N53.CDDEVIS       /* NO DEVIS A RECOPIER OU   */        
  /*                        /* NO PROD DEVIS BO INTRANET*/        
  /*   JA2N53.CDRSCTL       /* RESUL. CTRLRSQ 'B'=BLOQ  */        
                            /* TP IMPRES. VENANT FIRST L/C */        
         
 IF JWB001.CDTRACE >= 3 THEN        
   DO;        
     PUT SKIP LIST('GA20166 avant appel XA2N53 pour e-mail DOC1:');        
     PUT SKIP DATA(JA2N53);        
     PUT SKIP DATA(JSM186);        
   END;        
         
 CALL XA2N53(JA2N53,JSM186,IEU001);        
         
 IF JA2N53.CDRTPGM ^= '' THEN        
    IF JA2N53.CDRTPGM= '9' THEN        
       DO ;        
          ERREUR   = '1'B;        
          JWB001.LSTCALL = JA2N53.LASTDLI;        
          IEU001.DBPTR=JA2N53.DBPTR;        
          CALL ERR_DL1;        
          RETURN;        
       END;        
    ELSE        
       DO ;        
         ERREUR = '1'B;        
         IF JWB001.CDTRACE >= 3 THEN        
         PUT SKIP EDIT('ERREUR XA2N53 !!! NON DB',JA2N53.CDRTPGM)(A);        
       END;        
 /*        
 ELSE        
   PUT SKIP LIST('Envoi reussi, JA2N53.NOIDDOC=',JA2N53.NOIDDOC);        
 */        
         
 /* ENREGISTRE LE NUMERO DOC1 POUR IMPRESSION RELANCE AUTO DOC1 */        
         
 JWB001.LSTCALL     = 'DOC-3';        
 IEU001.CDDFSEG     = 'CSMDV012';        
         
 SSA_SMDEVIS.VALUE1 = SMDEVIS_012.CDTYKEY;        
 SSA_SMDEVIS.VALUE2 = SMDEVIS_012.NOIDKEY;        
 SSA_SMDEVIS.VALUE3 = SMDEVIS_012.NOSQDEV;        
 SSA_SMDEVIS.VALUE4 = 1;        
         
 CALL XEU100(IEU001,FOUR,GHU,DSM88,SMDEVIS_012,SSA_SMDEVIS);        
         
 IF(DSM88.STATUS ^= ' ') THEN        
   DO;        
      CALL ERR_DL1;        
      RETURN;        
   END;        
         
 NOIDDOC_R = JA2N53.NOIDDOC; ####################################        
         
 JWB001.LSTCALL = 'DOC-4';        
 IEU001.CDDFSEG = 'CSMDV012';        
         
 CALL XEU100(IEU001,THREE,REPL,DSM88,SMDEVIS_012);        
         
 IF(DSM88.STATUS ^= ' ') THEN        
   DO;        
      CALL ERR_DL1;        
      RETURN;        
   END;        
         
 /* maj stat nbre de devis envoy{ par e-mail */        
 STAT_W = TRANSLATE(SPA.CDLGTRN,'FNF','123') !! 'A201001';        
 CALL STATSITE(STAT_W,13,1,'M');        
         
     TRACE = 'GA20166 ===> ' !! 'END DOC1_MAIL';        
         
     CALL PT;        
 $END ENVOYER_DEVIS_DOC1;        
         
 /*------------------------------------------------------------------*/        
         
 ENVOYER_DEVIS_MAIL: PROC REORDER ;        
     TRACE = 'GA20166 ===> ' !! 'ENV_E_MAIL';        
         
     CALL PT;        
 /********************************************        
 * Preparer la lettre e envoyer par e-mail   *        
 ********************************************/        
 DCL NOIDDEV_W          FIXED(11);        
 DCL 1   KEY_DEVIS,        
      2   NOIDDEV PIC'(4)9',        
      2   NOIDVER PIC'(3)9';        
 DCL KEY_DEVIS_SSA PIC'(7)9' BASED(ADDR(KEY_DEVIS));        
 DCL 1 CLE_TAB,        
      2   ENTREE,        
       3  CDAPPEL       CHAR(01),        
       3  CDTYLET(10)   CHAR(01),        
       3 KEYDEVIS,        
        4 CDTYKEY       CHAR(1),        
        4 NOIDKEY       PIC'(9)9',        
        4 NOSQDEV       PIC'(7)9',        
        4 NOSQTXT       PIC'(3)9',        
       3  CDLGTRN       PIC'9',        
       3  TBTYPAF       BIT(240),        
       3  FILLER        CHAR(18);        
         
 DCL W_LTNMSCR           CHAR(2000) VARYING;        
 DCL W_LTNMSCR2          CHAR(4000) VARYING;        
         
 IF SPAVAR.VERSDEV = 0 THEN        
   DO;        
     /*        
     put skip list('Derniere version devis 0 ! pas d''envoi e-mail');        
     */        
     ERREUR = ON;        
     RETURN;        
   END;        
         
 CLE_TAB = '';        
 INTER_C11 = SUBSTR(SPAVAR.NOIDDEV,3,11);        
 NOIDDEV_W = INTER_P11;        
 KEY_DEVIS_SSA = 0;        
 KEY_DEVIS.NOIDDEV = MOD(NOIDDEV_W, 10000) ;        
 KEY_DEVIS.NOIDVER = SPAVAR.VERSDEV;####################################        
         
 IF SCENARI.NOPGACT = 'C'        
   THEN CLE_TAB.CDAPPEL = 'S';##########################        
   ELSE CLE_TAB.CDAPPEL = 'W';###################        
 CLE_TAB.CDTYLET(*) = 'N';        
 CLE_TAB.CDTYLET(1) = 'Y';        
 CLE_TAB.CDTYLET(2) = 'Y';        
 CLE_TAB.CDTYLET(5) = 'Y'; ##########################        
 CLE_TAB.KEYDEVIS.CDTYKEY = 'D' ;        
 CLE_TAB.KEYDEVIS.NOIDKEY = NOIDDEV_W / 10000 ; ######################        
 CLE_TAB.KEYDEVIS.NOSQDEV = KEY_DEVIS_SSA ;        
 CLE_TAB.KEYDEVIS.NOSQTXT=1; #####################        
 CLE_TAB.CDLGTRN = SPA.CDLGTRN;        
 CLE_TAB.TBTYPAF = '';        
         
 JSM186.PTRPCB.DBPCB(*)=NULL();        
 JSM186.PTRPCB.DBPCB(1)=GA2016J.DSM88PCB ;        
 JSM186.PTRPCB.DBPCB(2)=GA2016J.DC105PCB ;        
 JSM186.PTRPCB.DBPCB(3)=GA2016J.DS101PCB ;        
 JSM186.PTRPCB.DBPCB(4)=GA2016J.DS102PCB ;        
 JSM186.PTRPCB.DBPCB(5)=GA2016J.DA215PCB;        
 JSM186.PTRPCB.DBPCB(6)=GA2016J.DA216PCB;        
 JSM186.PTRPCB.DBPCB(7)=GA2016J.DS137PCB ;  #################################        
 JSM186.PTRPCB.DBPCB(8)=GA2016J.DA215$PCB ; ################################        
 JSM186.WLTNMSCR_PTR =ADDR(W_LTNMSCR);        
 JSM186.WLTNMSCR2_PTR=ADDR(W_LTNMSCR2);        
 JSM186.ENTREE=CLE_TAB.ENTREE,BY NAME;        
         
 IF JWB001.CDTRACE >= 3 THEN        
   DO;        
     PUT SKIP LIST('Envoyer devis < 30ans par e-mail ',SPAVAR.NOIDDEV);        
     PUT SKIP LIST('Pour affilie :',SPAVAR.IDENTI.NOIDAFF);        
     PUT SKIP LIST('Adresse      :',SPAVAR.IDENTI.EMAILAF);        
   END;        
         
 IF JWB001.CDTRACE >= 3 THEN        
   DO;        
     PUT SKIP LIST ('GA20166 : ENVOI DEVIS E-MAIL XSM702 ....');        
     PUT SKIP DATA (JSM186.ENTREE) ;        
   END;        
         
 CALL XSM702(JSM186,IEU001);        
         
 IF JWB001.CDTRACE >= 3 THEN        
   DO;        
     PUT SKIP LIST ('CLAIRE_KIPS=>APRES XSM702');        
     PUT SKIP DATA (JSM186.RETOURS) ;        
     PUT SKIP DATA (JSM186.SORTIES) ;        
     PUT SKIP DATA (W_LTNMSCR) ;        
     PUT SKIP DATA (W_LTNMSCR2);        
   END;        
         
 IF JSM186.CDRTPGM ^= '' THEN        
   IF JSM186.CDRTPGM= '9' THEN        
      DO ;        
        IF JWB001.CDTRACE >= 3 THEN        
        PUT SKIP LIST ('CLAIRE_KIPS=>ERREUR APPEL XSM702 , CDRTPGM=9');        
        ERREUR   = ON;        
        JWB001.LSTCALL = JSM186.LASTDLI;        
        CALL ERR_DL1;        
        RETURN;        
      END;        
   ELSE        
      DO ;        
        IF JWB001.CDTRACE >= 3 THEN        
        DO;        
        PUT SKIP LIST ('CLAIRE_KIPS=>ERREUR APPEL XSM702 !!!');        
        PUT SKIP EDIT('CLAIRE_KIPS=>ERREUR NON DB',JSM186.CDRTPGM)(A);        
        END;        
        ERREUR = ON;        
        RETURN;        
      END;        
         
         
 /* PUT SKIP DATA(SPA); */        
         
 DCL 1   TB_DCTT,        
      2  EL_DCTT (35),        
       3 KEY_DCTT         CHAR (09),        
       3 DATA_DCTT        CHAR (191),        
      2  NB_DCTT          FIXED (3);        
 DCL 1   LETTRE,        
      2  LIGNE (999),        
       3 CDDBCL           CHAR (01),        
       3 NOIDCL           CHAR (03),        
       3 NOSQCL           FIXED (5),        
       3 LTLILT           CHAR (75);        
 DCL 1   VARLET,        
      2  VARIAB (2000),        
       3 NOSQCL           FIXED (5),        
       3 LTTXVA           CHAR (75),        
       3 LTNMVA           CHAR (14),        
       3 NUTXVA           FIXED DEC (15,2);        
 DCL     II               FIXED BIN (31);        
         
 JSM171 = '';        
         
 PTRPCB_TAB(*)   = NULL();        
         
 JSM171.IOPCB    = GA2016J.IOPCB;        
 JSM171.ALTRPCB  = GA2016J.ALTPCB;        
 JSM171.TABPCB   = GA2016J.DC105PCB;        
 JSM171.CLAUSPCB = GA2016J.DSM07PCB;        
 JSM171.DS101PCB = GA2016J.DS101PCB;        
 JSM171.DS102PCB = GA2016J.DS102PCB;        
 JSM171.DS124PCB = GA2016J.DS124PCB;        
 JSM171.DSM09PCB = GA2016J.DSM09PCB;        
 JSM171.DSM19PCB = NULL;        
 JSM171.DSM22PCB = GA2016J.DSM22PCB;        
 JSM171.DSM60PCB = GA2016J.DSM60PCB;        
 JSM171.DSM61PCB = GA2016J.DSM61PCB;        
 JSM171.DSM62PCB = GA2016J.DSM62PCB;        
 JSM171.DSM63PCB = GA2016J.DSM63PCB;        
 JSM171.DSM64PCB = GA2016J.DSM64PCB;        
 JSM171.DSM65PCB = GA2016J.DSM65PCB;        
 JSM171.DSM66PCB = GA2016J.DSM66PCB;        
 JSM171.DSM67PCB = GA2016J.DSM67PCB;        
 JSM171.DSM68PCB = GA2016J.DSM68PCB;        
 JSM171.DSM69PCB = GA2016J.DSM69PCB;        
 JSM171.DSM01PCB = GA2016J.DSM01PCB;        
 JSM171.DSM06PCB = GA2016J.DSM06PCB;        
 JSM171.DA105PCB = NULL;        
 JSM171.DA106PCB = NULL;        
 /* TDMTHO 21/03/2005 ajout ptr DS137 */        
 JSM171.DS137PCB = GA2016J.DS137PCB;        
 JSM171.DSMB9PCB = GA2016J.DSMB9PCB;        
         
 JSM171.NOIDAFF = SPAVAR.IDENTI.NOIDAFF;        
 JSM171.NOIDPOL = 0;        
 JSM171.NOIDSIN = SPAVAR.IDENTI.NOIDAFF;        
 IF SPAVAR.IDENTI.CDLGEAF = 'F'        
   THEN JSM171.CDCMGES = 'PWEBFR';        
   ELSE JSM171.CDCMGES = 'PWEBNL';        
 JSM171.CDOPTRN = 'S1GSI';        
 JSM171.MEMOCMD = '';        
 JSM171.MEMOCMD.CDNATOP = 'E';        
 JSM171.MEMOCMD.CDTYPOP = 'S';        
 JSM171.NOSQMEM   = '';        
 JSM171.WLTNMSCR  = W_LTNMSCR;        
 JSM171.WLTNMSCR2 = W_LTNMSCR2;        
 JSM171.NBLIGNE = '';        
 JSM171.CDSCTRN = '';########################        
 JSM171.NORFPRT = '';        
 JSM171.CDRTPGM = '';        
 JSM171.CDTTAPP = 'CC';############################        
 JSM171.LASTDLI = '';        
 JSM171.NBVAR = '';        
 JSM171.LTOBJOP = 'M:' !! SPAVAR.IDENTI.EMAILAF;        
 JSM171.LTSCTRN = 'ETHI';#########################        
 SUBSTR(JSM171.WLTNMSCR,45,1)= ' ';        
 SUBSTR(JSM171.WLTNMSCR,54,12)= '#LTOBJOP';        
 JSM171.CDIMPDV = 'T';        
         
 IF JWB001.CDTRACE >= 3 THEN        
   DO;        
     PUT SKIP LIST ('CLAIRE_KIPS=>AVANT APPEL XSM664');        
     PUT SKIP DATA (        
       JSM171.NOIDAFF,        
       JSM171.NOIDPOL,        
       JSM171.NOIDSIN,        
       JSM171.CDCMGES,        
       JSM171.CDOPTRN,        
       JSM171.MEMOCMD,        
       JSM171.NOSQMEM,        
       JSM171.WLTNMSCR,        
       JSM171.WLTNMSCR2,        
       JSM171.NBLIGNE,        
       JSM171.CDSCTRN,        
       JSM171.NORFPRT,        
       JSM171.CDRTPGM,        
       JSM171.CDTTAPP,        
       JSM171.LASTDLI,        
       JSM171.NBVAR,        
       JSM171.LTOBJOP,        
       JSM171.LTSCTRN);        
   END;        
         
 LETTRE = '';        
 TB_DCTT = '';        
 VARLET = '';        
         
 CALL XSM664 (IEU001, JSM171, LETTRE, TB_DCTT, VARLET);        
         
 IF JSM171.CDRTPGM ^= '' THEN        
  DO;        
    IF JWB001.CDTRACE >= 3 THEN        
     DO;        
       PUT SKIP EDIT ('CLAIRE_KIPS=>PROBLEM IN XSM664')(A);        
       PUT DATA (JSM171.CDRTPGM, JSM171.LASTDLI);        
       DO II=1 TO JSM171.NBLIGNE;        
         PUT SKIP DATA (LETTRE.LIGNE(II));        
       END;        
       DO II=1 TO NB_DCTT;        
         PUT SKIP DATA (KEY_DCTT(II), DATA_DCTT(II));        
       END;        
     END;        
   END;        
 IF JWB001.CDTRACE >= 3 THEN        
   DO;        
     PUT SKIP EDIT ('CLAIRE_KIPS=>APRES XSM664')(A);        
     PUT SKIP DATA (        
       JSM171.NOIDAFF,        
       JSM171.NOIDPOL,        
       JSM171.NOIDSIN,        
       JSM171.CDCMGES,        
       JSM171.CDOPTRN,        
       JSM171.MEMOCMD,        
       JSM171.NOSQMEM,        
       JSM171.WLTNMSCR,        
       JSM171.WLTNMSCR2,        
       JSM171.NBLIGNE,        
       JSM171.CDSCTRN,        
       JSM171.NORFPRT,        
       JSM171.CDRTPGM,        
       JSM171.CDTTAPP,        
       JSM171.LASTDLI,        
       JSM171.NBVAR,        
       JSM171.LTOBJOP,        
       JSM171.LTSCTRN);        
   END;        
         
 /* maj stat nbre de devis envoye par e-mail */        
 STAT_W = TRANSLATE(SPA.CDLGTRN,'FNF','123') !! 'A201001';        
 CALL STATSITE(STAT_W,13,1,'M');        
         
     TRACE = 'GA20166 ===> ' !! 'END ENV_E_MAIL';        
         
     CALL PT;        
 $END ENVOYER_DEVIS_MAIL;        
 /*------------------------------------------------------------------*/        
         
 INTERV_COM: PROC REORDER ;        
     TRACE = 'GA20166 ===> ' !! 'INTERV_COM';        
         
     CALL PT;        
 /*---------------------------------------------------------------        
 *   INTERVENTIONS COMMERCIALES                                  *        
 *   A FAIRE AVANT LE CONTROLE DE RISQUES                        *        
 *   Positionnent le LTOBJOP                                     *        
 *--------------------------------------------------------------*/        
 SPAVAR.LTOBJOP_016 = '';        
         
 SPA_XSM806 = SPA, BY NAME;        
 IF SPA.CDLGTRN = '1' THEN        
    SPA_XSM806.CDCMGES='11709201';        
 ELSE        
    SPA_XSM806.CDCMGES='21709202';        
 SPA_XSM806.MSG_SPA = 'X';        
         
 /* INTERVENTIONS COMMERCIALES */        
 /**/        
 SPA_XS1185 = SPA_XSM806, BY NAME;        
 MID1_XS1185 ='';        
 SPA_XS1185.CDNATOP = 'S';        
 SPA_XS1185.CDTYPOP = 'I';        
 SPA_XS1185.CDOBJOP = 'INT';        
 /* salon de l'auto 2006 */        
 IF SPA.TYPUSER = 'SALON' THEN        
 DO;        
    LTOBJOP_Z = '';        
    SELECT (SPA.CDEVTRN);        
    WHEN('T','D')        
       LTOBJOP_Z.CDCAC = '7939898FG939998';        
    WHEN('H','I')        
       LTOBJOP_Z.CDCAC = '7939898MG939998';        
    OTHER        
       LTOBJOP_Z.CDCAC = '7939887FG939998';        
    END;        
    SPA_XS1185.LTOBJOP = LTOBJOP_R;        
 END;        
 ELSE        
    SPA_XS1185.LTOBJOP = '';        
         
 SPA_XS1185.MSG_SPA = 'X';        
 SPA_XS1185.CDOPTRN = 'S1GSI';        
 /* put skip data(SPA_XS1185.LTOBJOP); */        
         
 MID1_XS1185.CDOPTRN = '';        
 MID1_XS1185.CDCNTVC = '021';        
         
 JS1185.IOPCB         = GA2016J.IOPCB       ;        
 JS1185.ALTPCB        = GA2016J.ALTPCB      ;        
 JS1185.PRTPCB        = GA2016J.PRTPCB      ;        
 JS1185.DEU02PCB      = GA2016J.DEU02PCB    ;        
 JS1185.TABPCB        = GA2016J.DC105PCB    ;        
 JS1185.DS101PCB      = GA2016J.DS101PCB    ;        
 JS1185.DSM22PCB      = GA2016J.DSM22PCB    ;        
 JS1185.DS133PCB      = GA2016J.DS133PCB    ;        
 JS1185.DSM19PCB      = GA2016J.DSM19PCB    ;        
 JS1185.DS139PCB      = GA2016J.DS139PCB    ;        
         
 JS1185.INPUT.PAGE9_PTR = NULL();        
 JS1185.INPUT.SW_INT = '1'B;        
 CALL XS1185(JS1185,IEU001);        
         
 IF JWB001.CDTRACE >= 3 THEN        
   DO;        
     PUT SKIP LIST('GA20166 apres XS1185 ...');        
     PUT SKIP DATA(JS1185);        
     PUT SKIP LIST('spa_XS1185.LTOBJOP = ',SPA_XS1185.LTOBJOP);        
   END;        
         
 SPA_XS1186 = SPA_XS1185, BY NAME;        
 MID1_XS1186 ='';        
 MID1_XS1186.CDPRODU = 'A2.....';        
 MID1_XS1186.CDTYPPR = 'DR';        
 JS1186.IOPCB         = GA2016J.IOPCB       ;        
 JS1186.ALTPCB        = GA2016J.ALTPCB      ;        
 JS1186.PRTPCB        = GA2016J.PRTPCB      ;        
 JS1186.TABPCB        = GA2016J.DC105PCB    ;        
 JS1186.DS101PCB      = GA2016J.DS101PCB    ;        
 JS1186.DSM22PCB      = GA2016J.DSM22PCB    ;        
 JS1186.DS133PCB      = GA2016J.DS133PCB    ;        
 JS1186.DSM19PCB      = GA2016J.DSM19PCB    ;        
 JS1186.DEU02PCB      = GA2016J.DEU02PCB    ;        
 JS1186.DS103PCB      = GA2016J.DS103PCB    ;        
 JS1186.DS139PCB      = GA2016J.DS139PCB    ;        
 JS1186.DSM55PCB      = GA2016J.DSM55PCB    ;        
 JS1186.DA201PCB      = NULL();        
 JS1186.DA203PCB      = NULL();        
 JS1186.DSM43PCB      = GA2016J.DSM43PCB    ;        
 JS1186.DSM88PCB      = GA2016J.DSM88PCB    ;        
         
 JS1186.INPUT.PAGE9_PTR = NULL();        
 JS1186.INPUT.SW_INT = '1'B;        
 CALL XS1186(JS1186,IEU001);        
         
 IF JWB001.CDTRACE >= 3 THEN        
   DO;        
     PUT SKIP LIST('GA20166 apres XS1186 ... ');        
     PUT SKIP LIST('SPA_XS1186.LTOBJOP : ',SPA_XS1186.LTOBJOP);        
     PUT SKIP DATA(JS1186);        
   END;        
 LTOBJOP_R = SPA_XS1186.LTOBJOP;        
 SPAVAR.LTOBJOP_016 = SPA_XS1186.LTOBJOP;        
         
 IF JWB001.CDTRACE >= 3 THEN        
   DO;        
     PUT SKIP LIST('GA20166 fin interventions commerciales ...');        
     PUT SKIP LIST('LTOBJOP_R = ',LTOBJOP_R);        
     PUT SKIP LIST('SPAVAR.LTOBJOP_016 = ',SPAVAR.LTOBJOP_016);        
   END;        
     TRACE = 'GA20166 ===> ' !! 'END INTERV_COM';        
         
     CALL PT;        
 $END INTERV_COM;        
         
 /*------------------------------------------------------------------*/        
 /* Pour le SELF .... ne sert PLUS */        
 /*------------------------------------------------------------------*/        
 F_MTFTC: PROC(MT_W,MS_W,DC_W,LN_W) RETURNS(CHAR(10));        
         TRACE = 'GA20166 ===> ' !! 'F_MTFTC';        
         
         CALL PT;        
 /*******************************        
 * FORMATAGE DU MONTANT         *        
 * RETURN : MONTANT FORMATE     *        
 *******************************/        
 DCL MT_W              FIXED(15);        
 DCL MS_W              CHAR(11);        
 DCL DC_W              PIC '9';        
 DCL LN_W              PIC '99';        
         
 KGI012J_RI = '';        
 KGI012J_RO = '';        
 KGI012J_RI.CDFMTMT     = 'MTIN_F15';        
 KGI012J_RI.CDDVTRN     = IEU001.CDDVTRN;        
 KGI012J_RI.CDLGTRN     = SPA.CDLGTRN;        
 KGI012J_RI.MTIN_F15 = MT_W;        
 KGI012J_RI.CDMSKOUT = MS_W;        
 KGI012J_RI.NBLENOUT = LN_W;        
 KGI012J_RI.NBDECIN  = DC_W;        
 JWB001.LTNMMTH = 'FORMATAGE';        
 JWB001.LSTCALL = 'FIX_TO_CH.1';        
         
 CALL KGI012(IEU001,JWB001,KGI012J);        
         
 SELECT(JWB001.CDRTPGM);        
   WHEN('') RETURN(SUBSTR(KGI012J_RO.LTMNT_C26, 1,LN_W));        
   OTHER    RETURN('');        
 END;        
         
 $END F_MTFTC;        
         
 /*------------------------------------------------------------------*/        
 F_CTRL_DA: PROC(DATE_P,FORM_P) REORDER ;        
     TRACE = 'GA20166 ===> ' !! 'CTRL_DA';        
         
     CALL PT;        
 /******************        
 * VALIDATION DATE *        
 ******************/        
         
 DCL DATE_P       CHAR(*);        
 DCL FORM_P       CHAR(1);        
 KGI011J_RI     = '';        
 KGI011J_RO     = '';        
 JWB001.LTNMMTH     = 'VALID_DATE';  ###############################        
 KGI011J_RI.CDLGTRN = SPA.CDLGTRN;        
 SELECT(FORM_P);        
   WHEN('1') DO;        
     KGI011J_RI.CDFMTDA    = 'SAAMMJJ_C7';        
     KGI011J_RI.SAAMMJJ_C7 = DATE_P;        
   END;        
   WHEN('2') DO;        
     KGI011J_RI.CDFMTDA     = 'JJMMAAAA_C8';        
     KGI011J_RI.JJMMAAAA_C8 = DATE_P;        
   END;        
   OTHER;        
 END;        
         
 KGI011J_RI.AAPIVOT = 2000;        
 CALL KGI011(IEU001,JWB001,KGI011J);        
         
 IF JWB001.CDRTPGM ^= '' THEN        
   DO;        
     IF JWB001.CDTRACE >= 3 THEN        
     DO;        
     PUT SKIP LIST('GA20166 => VALID_DATE=',DATE_P);        
     PUT SKIP LIST('FORMAT    =',FORM_P);        
     PUT SKIP LIST('JWB001.CDRTPGM=',JWB001.CDRTPGM);        
     PUT SKIP EDIT('ERREUR INTERNE FORMATAGE DATE')(A);        
     END;        
     DATE_P = '00000000';        
     ERREUR = ON;        
   END;        
         
     TRACE = 'GA20166 ===> ' !! 'END CTRL_DA';        
         
     CALL PT;        
 $END F_CTRL_DA;        
         
 /*-----------------------------------------------*/        
 LECT_BUR: PROC REORDER ;        
      TRACE = 'GA20166 ===> ' !! 'LECT_BUR';        
         
      CALL PT;        
  /************************************        
  * LIRE TABLE DES BUREAU POUR SELF   *        
  ************************************/        
         
  SSA_C1TAB.VALUE = 'CABU' !! SUBSTR(SPA.NOIDCHA,1,2);        
  IEU001.LASTCALL = 'LECT_CABU.1';        
  IEU001.CDDFSEG  = 'CSMCABU0';        
  IEU001.METAPCB  = DEU02PCB;        
  CALL XEU100 (IEU001,FOUR,GU,DC105,TBSM_CABU,SSA_C1TAB);        
  SELECT(DC105.STATUS);        
    WHEN('') DO;        
        /*  CDRFPRT_W = TBSM_CABU.CDRFPRT; */        
            CDRFPRT_W = TBSM_CABU.CDRFPRT4;        
      END;        
    WHEN('GB','GE') CDRFPRT_W = '';        
    OTHER        
      DO;        
        CALL ERR_DL1;        
        RETURN;        
      END;        
  END;        
      TRACE = 'GA20166 ===> ' !! 'END LECT_BUR';        
         
      CALL PT;        
  $END LECT_BUR;        
         
         
 /*-----------------------------------------------*/        
 LECT_IMPR: PROC REORDER RETURNS(BIT(1));        
      TRACE = 'GA20166 ===> ' !! 'LECT_IMPR';        
         
      CALL PT;        
  /********************************        
  * LIRE TABLE DES IMPRIMANTES    *        
  ********************************/        
         
  SSA_C1TAB.VALUE = 'PRTT' !! CDRFPRT_W  !!  '.....';        
  IEU001.LASTCALL = 'LECT_PRTT.1';        
  IEU001.CDDFSEG  = 'CTTPRTT0';        
  IEU001.METAPCB  = DEU02PCB;        
  CALL XEU100 (IEU001,FOUR,GU,DC105,TBTT_PRTT,SSA_C1TAB);        
  SELECT(DC105.STATUS);        
    WHEN('') RETURN(ON);        
    WHEN('GB','GE') RETURN(OFF);        
    OTHER        
      DO;        
        CALL ERR_DL1;        
        RETURN(OFF);        
      END;        
  END;        
      TRACE = 'GA20166 ===> ' !! 'END LECT_IMPR';        
         
      CALL PT;        
  $END LECT_IMPR;        
 /*-----------------------------------------------*/        
 LEC_TAB:PROC(NOIDTAB_P,CLETAB_P,TBSMTAB_P);        
 TRACE = 'GA20166 ===> ' !! 'LEC_TAB';        
         
 CALL PT;        
 /*******************************/        
 /* EXPLORATION TABLES DIVERSES */        
 /*******************************/        
 DCL FCT        CHAR(4);        
 DCL NOIDTAB_P  CHAR(*);        
 DCL CLETAB_P   CHAR(*);        
 DCL TBSMTAB_P  PTR;        
 DCL NBITEXP_P  FIXED (2);        
         
 IF JWB001.CDTRACE > 2 THEN        
 DO;        
 PUT SKIP DATA(NOIDTAB_P,CLETAB_P);        
 END;        
         
 JWB001.CDRTPGM = '';        
         
 KGI006J.INPUT = '';        
         
 KGI006J.PTRPCB.DEU02PCB  = DEU02PCB;        
 KGI006J.PTRPCB.DBTABPCB  = DC105PCB;        
         
 KGI006J.INPUT.TBTXCOD         = NOIDTAB_P;        
 KGI006J.INPUT.TBTXA01         = CLETAB_P;        
 KGI006J.INPUT.CDDFSEG         = 'CSMMAIN0';        
 KGI006J.INPUT.GITAB           = TBSMTAB_P;        
 KGI006J.OUTPUT.GITAB          = TBSMTAB_P;        
 KGI006J.DBTABLE.LTSGTAB       = 'C1TAB';        
 KGI006J.DBTABLE.LTSGSTAB      = 'C1STAB';        
 KGI006J.DBTABLE.CDDFTAB       = 'CGIW0040';        
         
 JWB001.LSTCALL                = 'READ_TAB.1';        
 JWB001.LTNMMTH                = 'READ_TAB';        
         
 CALL KGI006(IEU001,JWB001, KGI006J);        
         
 TRACE = 'GA20166 ===> ' !! 'END LEC_TAB';        
         
 CALL PT;        
 $END LEC_TAB;        
 /*-------------------------------------------------------------------*/        
 PLUS_1_MOIS: PROC(DATE_P) REORDER ;        
     TRACE = 'GA20166 ===> ' !! 'PLUS_1_MOIS';        
         
     CALL PT;        
 /**************************************************        
 *   Ajouter 1 mois e la date du jour pour DAVALID *        
 **************************************************/        
         
 DCL DATE_P       CHAR(7);        
         
 KGI011J_RI     = '';        
 KGI011J_RO     = '';        
 JWB001.LTNMMTH     = 'DATE_PLUS_DUREE';  ###############################        
 KGI011J_RI.CDLGTRN = SPA.CDLGTRN;        
 KGI011J_RI.CDFMTDA = 'SAAMMJJ_C7';        
 KGI011J_RI.SAAMMJJ_C7 = DATE_P;        
 KGI011J_RI.AAPIVOT = 2000;        
 KGI011J_RI.NBMMCAL = 1;        
 CALL KGI011(IEU001,JWB001,KGI011J);        
         
 IF JWB001.CDRTPGM ^= '' THEN        
   DO;        
     IF JWB001.CDTRACE >= 3 THEN        
     DO;        
     PUT SKIP LIST('PLUS_1_MOIS=',DATE_P);        
     PUT SKIP LIST('JWB001.CDRTPGM=',JWB001.CDRTPGM);        
     PUT SKIP EDIT('ERREUR INTERNE FORMATAGE DATE')(A);        
     END;        
     DATE_P = '0000000';        
   END;        
         
     TRACE = 'GA20166 ===> ' !! 'END PLUS_1_MOIS';        
         
     CALL PT;        
 $END PLUS_1_MOIS;        
         
 /*-------------------------------------------------------------------*/        
 INIT_CDCIBCL: PROC REORDER ;        
     TRACE = 'GA20166 ===> ' !! 'INIT_CDCIBCL';        
         
     CALL PT;        
 /**************************************************        
 *   Determiner CDCIBCL selon la profession        *        
 **************************************************/        
 SCENARIO_6.CDCIBCL = '';        
         
 SELECT(SCENARIO_5.CDTYPRO);        
   WHEN('01') SCENARIO_6.CDCIBCL = '07'; ##########################        
   WHEN('02') SCENARIO_6.CDCIBCL = '07'; #############################        
   WHEN('03') SCENARIO_6.CDCIBCL = '06'; ######################        
   WHEN('05') SCENARIO_6.CDCIBCL = '05'; #########################        
   WHEN('07') SCENARIO_6.CDCIBCL = '10'; ############################        
   WHEN('09')                     ################################################        
     DO;        
       SELECT(SCENARIO_5.CDGEPRO);        
        WHEN('01');               #####################################        
        WHEN('03');               #####################################        
        WHEN('06');               ####################################        
        OTHER SCENARIO_6.CDCIBCL = '08';        
       END;        
     END;        
   WHEN('10') SCENARIO_6.CDCIBCL = '09'; #####################        
   OTHER;                         #############################################        
 END;        
 /*        
    Forcer CDCIBCL e 09 si BOHOREC = 'Y' car on n'aura jamais        
    de CDTYPO e 10 car non propose dans la tableau internet        
 */        
 IF SCENARIO_5.BOHOREC = 'Y'        
   THEN SCENARIO_6.CDCIBCL = '09';        
         
     TRACE = 'GA20166 ===> ' !! 'END INIT_CDCIBCL';        
         
     CALL PT;        
 $END INIT_CDCIBCL;        
 /*-------------------------------------------------------------------*/        
 INIT_CDBMDET: PROC REORDER ;        
     TRACE = 'GA20166 ===> ' !! 'INIT_CDBMDET';        
         
     CALL PT;        
 /************************************************************        
 *   Determiner CDBMDET selon le nombre d'annees de conduite *        
 *   et l'age du preneur                                     *        
 ************************************************************/        
 SCENARIO_6.CDBMDET = '';        
         
 XA2N63J = '';        
 XA2N63J_P.DEU02PCB = GA2016J.DEU02PCB;        
 XA2N63J_P.DBTABPCB = GA2016J.DC105PCB;        
         
 XA2N63J_I01.CDTABBM = '8';        
 XA2N63J_I01.NBANCON = SCENARIO_5.AGEPERM;        
 XA2N63J_I01.NBSIN5A = SCENARIO_5.NBSINIS;        
         
 JWB001.LTNMMTH = 'DET_BONUS_MALUS';        
 JWB001.LSTCALL = 'CAL_DV.1';        
         
 IF JWB001.CDTRACE >= 3 THEN        
   DO;        
     PUT SKIP EDIT('XA2N63J_I01.CDTABBM : ',XA2N63J_I01.CDTABBM)(A);        
     PUT SKIP EDIT('XA2N63J_I01.NBANCON : ',XA2N63J_I01.NBANCON)(A);        
     PUT SKIP EDIT('XA2N63J_I01.NBSIN5A : ',XA2N63J_I01.NBSIN5A)(A);        
   END;        
         
 CALL XA2N63(IEU001, JWB001, XA2N63J);        
         
 IF JWB001.CDRTPGM ^= '' THEN        
   DO;        
     IF JWB001.CDTRACE >= 1 THEN        
       PUT SKIP EDIT('JWB001.CDRTPGM : ', JWB001.CDRTPGM)(A);        
     JWB001.CDRTPGM = '';        
   END;        
 ELSE        
   DO;        
     SCENARIO_6.CDBMDET = XA2N63J_O01.CDBMDET;        
   END;        
         
         
     TRACE = 'GA20166 ===> ' !! 'END INIT_CDBMDET';        
         
     CALL PT;        
 $END INIT_CDBMDET;        
 /*------------------------------------------------------------------*/        
         
 /*********************************************************************/        
 STATSITE: PROC (TYPE,CPTEUR,IND,CDMAJ);        
        TRACE='===> STATSITE  <===';        
      CALL PT;        
         
 DCL     DATEINVR           PIC '(7)9',        
     1   DATEIR                         DEF DATEINVR,        
      2  SS                 PIC '9',        
      2  AA                 PIC '99',        
      2  MM                 PIC '99',        
      2  JJ                 PIC '99';        
 /***********************************************        
 *  Appel interface statistiques devis internet *        
 ***********************************************/        
 /*    compteur 1  = nbre de devis anonymes        
                2  = nbre de branchement vers l'identification        
                3  = nbre de nouveaux prospects        
                4  = nbre de prospects confirmes        
                5  = nbre de devis identifies        
                6  = nbre de souscriptions avec CDR ok        
                7  = nbre de documentations demandee        
                8  = nbre de rejet au CDR        
                9  = nbre de contact CC        
               10  = nbre de contact e-mail        
               11  = nbre de contact courrier        
               12  = nbre de devis sauves en My Ethias        
               13  = nbre envoi de devis par mail        
         
       TYPE = CHAR(8)        
            = F/N(1) !! KERNEL(2) !! PRODUIT (5)        
       IND = indice de l'element du tableau        
       CDMAJ =  'C' memoriser compteur stat        
                'M' memoriser ET appel  e xsm532        
 */        
 DCL 1 TYPE_R DEF TYPE,        
       2 CDLGTYP  CHAR(1),        
       2 CDPRTYP  CHAR(7);        
         
 DCL TYPEXT   CHAR(10);        
 DCL TYPET    CHAR(8);        
 DCL TYPE     CHAR(8);        
 DCL SITE     CHAR(10);        
 DCL CPTEUR   PIC'99';        
 DCL IND      FIXED BIN(15);        
 DCL CDMAJ    CHAR;        
 IF IND = 0  THEN IND = 1;        
 DATEINVR = #DATE_SAAMMJJ;        
         
 IF IND = 1 THEN DO;        
    JSM131.PARAM = '';        
    JSM131.ALTPCB = ALTPCB;        
    JSM131.CDSCTRN = '';        
    JSM131.CDEVTRN = IEU001_R.CDEVTRN;        
    JSM131.NBTYSTA = 0;        
 END;        
         
    TYPET = TRANSLATE(TYPE,'.',' ');        
    IF TYPE ^= TYPET THEN        
    DO;        
    TYPE = TYPET;        
    END;        
         
         
 IF JWB001.CDEVCLI = 'E' &        
 /******************************************        
 * ALIMENTATION COMPTEUR Extranet          *        
 *                                         *        
 * si on est en extranet, le type contient *        
 *    le r{parateur (entr{e de la table    *        
 *    EXRA)                                *        
 *                                         *        
 *                                         *        
 ******************************************/        
   (CPTEUR = 1 ! CPTEUR = 6)        
    THEN DO;                                                                    
    TYPEXT = SUBSTR(SPA.INFOS_USER.TYPUSER,1,2)!!        
             SUBSTR(SPA.INFOS_USER.NOIDUSR,4)!!        
             SPA.INFOS_USER.NOSQUSR !!        
             SUBSTR(TYPE,2,2); #####################        
         
    TYPEXT = TRANSLATE(TYPEXT,'+',' ');        
    JSM131.NBTYSTA = JSM131.NBTYSTA + 1;        
    JSM131.CDTYSTA(JSM131.NBTYSTA) = 'EXRAG';                                   
    JSM131.MTVAINC(JSM131.NBTYSTA) = 1;        
    JSM131.DAOPGES(JSM131.NBTYSTA) = DATEINVR;        
    JSM131.LTIDCLE(JSM131.NBTYSTA) = TYPEXT;        
    SELECT (CPTEUR);        
    WHEN (1) JSM131.NOIDCPT(JSM131.NBTYSTA) = 1 ;#########################        
    WHEN (6) JSM131.NOIDCPT(JSM131.NBTYSTA) = 2 ;#########################        
    OTHER;        
    END;        
    IF CDMAJ= 'M' ! JSM131.NBTYSTA = 9 THEN DO;        
        CALL XSM532(JSM131);        
        IF JSM131.CDRTPGM ^='' THEN        
        DO;        
           RETURN;        
        END;        
    END;        
    RETURN;        
    END;        
         
 /* if spa.cdstat ^= 'MYETH' then do; */        
    JSM131.NBTYSTA = JSM131.NBTYSTA + 1;        
    JSM131.CDTYSTA(JSM131.NBTYSTA) = 'ETHW1';        
    JSM131.NOIDCPT(JSM131.NBTYSTA) = CPTEUR;        
    JSM131.MTVAINC(JSM131.NBTYSTA) = 1;        
    JSM131.DAOPGES(JSM131.NBTYSTA) = DATEINVR;        
    JSM131.LTIDCLE(JSM131.NBTYSTA) = TYPE;        
 /* end; */        
         
    IF SPA.CDMSETH = 'Y' THEN DO;        
    JSM131.NBTYSTA = JSM131.NBTYSTA + 1;        
    JSM131.CDTYSTA(JSM131.NBTYSTA) = 'ETHW3';        
    JSM131.NOIDCPT(JSM131.NBTYSTA) = CPTEUR;        
    JSM131.MTVAINC(JSM131.NBTYSTA) = 1;        
    JSM131.DAOPGES(JSM131.NBTYSTA) = DATEINVR;        
    JSM131.LTIDCLE(JSM131.NBTYSTA) = TYPE;        
    END;        
 /**************************************        
 * ALIMENTATION COMPTEUR PARTENAIRES   *        
 **************************************/        
 IF                                                                             
   (SPA.CDSTAT ^= '' & SPA.CDSTAT ^= 'MYETH')  &                                
   (CPTEUR = 1 ! CPTEUR = 6 ! CPTEUR =7 !        
    CPTEUR = 9 ! CPTEUR = 10 ! CPTEUR= 11)        
    THEN DO;                                                                    
 /* TYPE = SUBSTR(TYPE,2); */        
    JSM131.NBTYSTA = JSM131.NBTYSTA + 1;        
    JSM131.CDTYSTA(JSM131.NBTYSTA) = SPA.CDSTAT;                                
    JSM131.MTVAINC(JSM131.NBTYSTA) = 1;        
    JSM131.DAOPGES(JSM131.NBTYSTA) = DATEINVR;        
    IF SPA.CDSTAT = 'INTPA' ! SPA.CDSTAT = 'INTAF' !        
       SPA.CDSTAT = 'SELFI'        
       THEN JSM131.LTIDCLE(JSM131.NBTYSTA) = SPA.LTSITE !! CDPRTYP;        
       ELSE JSM131.LTIDCLE(JSM131.NBTYSTA) = CDPRTYP;                           
    SELECT (CPTEUR);        
    WHEN (1) JSM131.NOIDCPT(JSM131.NBTYSTA) = 1;        
    WHEN (6) JSM131.NOIDCPT(JSM131.NBTYSTA) = 2;        
    WHEN (7) JSM131.NOIDCPT(JSM131.NBTYSTA) = 3;        
    WHEN (9,10,11) JSM131.NOIDCPT(JSM131.NBTYSTA) = CPTEUR - 5;        
    OTHER;        
    END;        
    END;        
 IF JSM131.NBTYSTA = 9 THEN DO;        
    JSM131.PARAM = '';        
    JSM131.ALTPCB = ALTPCB;        
    JSM131.CDSCTRN = '';        
    JSM131.CDEVTRN = IEU001_R.CDEVTRN;        
    JSM131.NBTYSTA = 0;        
 END;        
 /**************************************        
 * ALIMENTATION COMPTEUR MY ETHIAS     *        
 **************************************/        
 IF                                                                             
   SPA.CDSTAT = 'MYETH' &                                                       
   (CPTEUR = 1 ! CPTEUR = 6 ! CPTEUR = 12)        
    THEN DO;                                                                    
    JSM131.NBTYSTA = JSM131.NBTYSTA + 1;        
    JSM131.CDTYSTA(JSM131.NBTYSTA) = 'MYSMA';                                   
    JSM131.MTVAINC(JSM131.NBTYSTA) = 1;        
    JSM131.DAOPGES(JSM131.NBTYSTA) = DATEINVR;        
    IF SPA.CDLGTRN = 1        
       THEN JSM131.LTIDCLE(JSM131.NBTYSTA) = 'METHFR' !! CDPRTYP;        
       ELSE JSM131.LTIDCLE(JSM131.NBTYSTA) = 'METHNL' !! CDPRTYP;               
    SELECT (CPTEUR);        
    WHEN (1) JSM131.NOIDCPT(JSM131.NBTYSTA) = 13;#########################        
    WHEN (6) JSM131.NOIDCPT(JSM131.NBTYSTA) = 11;#########################        
    WHEN (12) JSM131.NOIDCPT(JSM131.NBTYSTA) = 14;############################        
    OTHER;        
    END;        
    END;        
         
 IF CDMAJ= 'M' ! JSM131.NBTYSTA = 9 THEN DO;        
     CALL XSM532(JSM131);        
     IF JSM131.CDRTPGM ^='' THEN        
     DO;        
        RETURN;        
     END;        
 END;        
 IF JSM131.NBTYSTA = 9 THEN DO;        
    JSM131.PARAM = '';        
    JSM131.ALTPCB = ALTPCB;        
    JSM131.CDSCTRN = '';        
    JSM131.CDEVTRN = IEU001_R.CDEVTRN;        
    JSM131.NBTYSTA = 0;        
 END;        
 $END STATSITE;        
 /*------------------------------------------------------------*/        
 /* ------------------------------------------------------------------*/        
 $$END GA20166;        
